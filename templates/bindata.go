// Code generated by go-bindata.
// sources:
// golang.footer.tmpl
// golang.funcs.tmpl
// golang.header.tmpl
// postgres.tmpl
// sqlite3.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _golangFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xce\x31\x0e\xc2\x30\x0c\x85\xe1\xb9\x3e\xc5\x1b\x5b\x86\x1c\x83\x8d\x09\x2e\x90\x26\x26\x8d\x44\x0d\x24\x41\x0a\xb2\x7c\x77\x54\x89\x6e\xdd\xfe\xe5\x7d\x7a\x44\xed\xfb\x62\xac\xdc\x96\x67\xac\xc8\xd2\xb8\xdc\x7d\x60\x28\xa9\xa2\x78\x49\x0c\x77\xfe\x48\xa8\x30\x23\x00\x50\x85\xdb\x5a\x15\x2c\x11\x66\x00\xc8\xfe\x4e\x9c\x2f\x07\xd2\x36\xbb\x86\x85\x57\x3f\x4e\xa8\xad\x64\x49\x34\xcc\x9c\xb2\x8c\xad\xe3\x54\xdf\x8f\xee\x6e\x7d\xda\x5f\xd0\xb0\x87\xd1\x2f\x00\x00\xff\xff\xcf\x3d\x41\x38\xa0\x00\x00\x00")

func golangFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangFooterTmpl,
		"golang.footer.tmpl",
	)
}

func golangFooterTmpl() (*asset, error) {
	bytes, err := golangFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.footer.tmpl", size: 160, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangFuncsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x5b\x6f\xe3\xb8\x15\x7e\x96\x7f\xc5\xa9\x30\x18\xc8\x53\x5b\xb3\x0b\x14\x7d\xd8\x42\x2d\x3c\x89\x37\x4d\xe1\xf5\x64\x62\x07\x7d\x08\x82\x0d\xc7\xa2\x3c\xda\xc8\x94\x42\x51\x9b\xa4\x8a\xfe\x7b\x41\x52\x17\xea\x6a\x49\x4e\xb7\x2d\xb0\x2f\x83\x31\x79\x6e\x3c\xfc\xbe\xc3\x43\x31\x71\xfc\xf1\x03\x5c\x7c\x5e\x2d\xd6\x17\xf0\xe3\xcd\xfa\x6c\x7b\xf9\x79\x0d\xdb\xe5\x4f\x57\xab\xc5\x76\xb9\x81\x0f\x1f\x93\x64\x32\x89\xe3\x39\xd8\xd8\x71\x09\x06\x3d\x40\x14\x1d\x42\x1d\xe6\x49\x22\xc6\x29\x22\x7b\x0c\xef\xdc\x19\xbc\x43\x74\x0f\x3f\x58\x60\x8a\x39\x2d\x8e\xc1\x75\xe0\x9d\x0b\x49\x32\x9b\x00\x00\xc4\x31\x26\x76\x92\xc4\xb1\x90\x34\xd7\xe8\x80\x21\x49\x20\xfb\xbd\x7d\x09\xf8\x6f\x61\x14\x13\x3b\x77\x90\xfd\xbf\x14\x05\xa2\xfb\xa1\x31\x70\x47\xdc\x56\x2d\x82\x7e\x1e\x89\xeb\xcd\x4f\xf2\x4a\x5c\xaf\x9f\x27\x27\x22\xbb\xf9\x37\x8c\x6c\x4c\x75\x1e\x9e\xb6\xf3\x49\xc8\x20\x64\x07\x66\xdd\xc7\x31\x98\x9b\x2f\x2b\x48\x92\xfb\x89\x16\x50\x1c\x20\x8a\xed\x19\x50\x1c\x78\x68\x87\x67\x80\x29\xe5\x91\xf8\x5f\x7f\x31\xd3\x59\x83\x2b\x4e\x27\x9a\xeb\x88\xc9\x3f\x58\x40\x5c\x0f\xe2\x89\xa6\xf1\x9f\x16\xfc\x93\xa2\x60\x49\xa9\x81\x29\x9d\x4e\x34\x8d\x62\x16\x51\x32\xd1\x92\x89\x66\x63\x07\xd3\xcc\xb4\x31\x9d\x68\xdc\xaa\xe7\xef\x37\xec\xc0\x84\x55\xb1\x3a\x86\x0f\x81\x87\x58\xbe\x29\xe6\x82\xee\x43\x48\x92\xe9\x24\x5d\x7a\xba\xc0\x8f\x1f\x60\xb3\x5c\x2d\xcf\xb6\xb0\xd9\x2e\xb6\xcb\x9f\x96\xeb\xad\x84\x57\x1c\xe7\x4b\x0f\xb1\x87\x77\x4c\xac\x9a\x67\x01\x0c\xff\xeb\x2f\xf0\x81\xaf\xf9\xdc\x45\x7c\x0a\x92\xe4\xfc\xd3\xb4\xec\x56\x2a\xcd\xb9\x82\x0e\x26\xd7\x6d\x57\xde\x3e\x1f\x55\xce\x37\xac\xbc\x2b\x8a\xe0\x9c\xa0\x03\x96\x38\xb8\xc0\x4c\xec\x08\xa3\x91\xb0\xcf\x7f\xfc\x18\x91\xdd\x26\x72\x1c\xf7\xb9\x0a\xae\x56\x83\xa1\xbb\xcf\x70\xd5\x1c\x5b\xea\x92\x07\x68\x94\x85\x32\x3e\xe6\x69\x07\x43\xb0\x8d\xe2\x30\xf2\x98\x5c\x7f\x1e\x9e\xc4\x07\xa6\xd4\xa7\xd3\x5e\x91\x15\x68\x6f\x0e\x4b\x04\x6e\x0a\x1a\x4f\xca\x71\x95\x50\x2c\x12\xab\xa5\x21\x59\xf0\xbe\x9c\xb3\x64\x92\x42\x31\xc3\xb3\xf9\x25\xc2\xf4\xe5\xda\x7f\x7a\x36\xe2\xb8\x15\x5f\xa9\x85\xcd\x0e\x11\x43\x9a\x2e\x50\x6e\x59\x10\x3e\x7a\xe6\x92\xd2\xb5\x7f\xed\x3f\x85\x02\xef\x12\xda\x1c\xfe\x33\xfe\x8f\xc0\x78\x9d\x15\xaa\x54\x99\x1b\x62\x09\x62\x52\xba\x93\x56\x6a\x5b\x5c\x00\x7d\xb1\x5a\x1d\x05\xfb\x1c\x79\xde\x38\xc0\x23\xcf\x3b\x0d\xf4\x15\x03\xdd\xc0\xcf\x84\x6b\xe0\x0f\xbc\x88\x22\xcf\xfd\x17\x3e\x89\x06\xb9\xf9\x4e\x2a\x54\x82\x18\x4e\x87\xdb\xbb\x13\x08\x51\xe4\xab\x95\x14\xe5\x65\xf4\x25\x46\x05\xfd\x1b\x61\xcb\x78\x9f\xa1\xac\x83\x03\xff\x61\x00\x5f\x2d\x2e\x96\xe7\xc7\x21\x1c\xa0\x3d\xb6\xc7\x81\x58\xa8\x9e\x06\xe3\x9a\x89\x6e\x20\x17\xe2\x0a\x94\xaf\xf8\xe0\x5b\xe2\x59\xf1\xd2\x89\xe8\x5a\x34\x3d\x30\x2d\xfb\x8b\xec\xd7\x4c\x3d\x67\x39\xd4\x77\xcc\x7f\xc0\x04\x42\x46\x5d\xb2\x9f\x81\xe7\x1e\x5c\x06\x2e\x61\x47\xa9\x20\x15\xfd\x88\xe5\xba\x03\xc8\xa1\xee\x42\x2b\x3d\xaa\x59\xe9\x49\x10\x11\xb6\xeb\x64\x2b\xb3\x2c\xd0\x75\x88\xc5\xa8\xb2\x60\x0b\xf4\xef\x74\x31\x98\x4c\x7a\x70\x4a\xcd\x61\x47\x1b\x33\xcb\xfa\xd6\xd4\x4d\x9a\xd0\xa3\xcc\xd3\xf5\x3a\xfb\x84\x8e\x87\xf3\xe3\x8a\xaf\x44\x6e\x0f\xd7\x2e\xd2\x6f\x81\x73\x60\xe6\x26\xa0\x2e\x61\xa9\xec\xad\x90\x9b\x7f\x7f\x67\xf2\x4d\x13\x70\xfd\x4c\x64\x05\xe0\x76\x2b\xb4\xce\x4d\xb5\x33\xfc\xec\xf3\xcd\xba\xab\x15\xdb\xf9\x11\x19\xda\x89\x09\x9d\x91\x64\xae\xe9\xb6\xb0\xb8\x90\x53\xe8\x7b\xc6\x07\xc7\x36\x62\x8a\xc5\x66\xaa\xd6\x5c\x9a\x43\x8f\x1d\x97\xb0\x7e\x64\x52\xb3\x50\x67\x51\x35\xd2\x91\xe7\x4b\xcf\xee\x8a\xf7\x55\xef\xab\x8d\x55\x1d\xed\xdf\x8d\x3c\x65\xf2\x35\x7f\x43\xe1\x40\x9c\x7d\x43\xe1\x48\x94\x55\x34\x5b\x30\x96\x49\x29\x08\xfb\x3b\x0a\xc7\xe2\x2b\xb7\xd6\x8c\xae\x8a\xb3\xe1\x3d\xcd\x57\xdf\xf7\xfa\xa1\xab\x58\x7d\x1d\x5b\xe5\x28\x53\x64\x69\x02\x71\xf9\xad\x52\x5c\x2b\x7b\x70\xad\x0b\x57\x1d\x48\x72\x90\x17\xca\x2b\xac\x0a\x22\x11\x02\xfc\x95\xe3\xac\xad\x96\x9d\x2f\x57\xcb\xed\xb2\xa3\x98\xd9\xd8\xc3\x0c\x0f\x44\x99\x54\x1a\x09\xb4\xba\x72\x0b\xd6\x14\x41\x05\x6e\xe7\x62\x74\x2c\xe2\x54\x9b\xcd\xa0\xab\x7b\x1d\x80\x3b\xa9\x6c\x0f\x00\x5e\x29\x1b\x9d\xc1\x0c\xbd\x50\xe6\xd8\xcc\xab\xdb\xf2\x19\xef\x4e\x03\x60\xad\x9c\x95\x59\x40\x71\x68\xf2\x3b\xe5\xc2\x71\xf0\x8e\x61\xdb\x18\x63\xb2\x3f\xb8\x7b\xdd\x25\xd3\x14\x0e\xbf\x4b\x16\x8a\xa7\x01\xbd\xdf\x5d\xb2\x22\xdc\x04\xf8\x13\xdb\xef\xaa\x87\x4e\xf8\x8f\xbf\x4e\xca\x7d\x73\x09\xfb\xf3\x9f\x06\x31\xa0\x7a\x85\xec\x88\xe9\xbf\xca\x84\xa6\x43\x5d\x61\xc1\x40\x12\x74\xb4\x08\xa9\xd1\x36\xf0\x5f\xae\x37\xcb\xeb\xae\x36\xd5\x25\x21\xa6\x43\xfb\x54\xa9\x34\x12\xf0\x75\xe5\x16\xb0\x2b\x82\x6a\xab\x4a\x31\xaa\x54\xf6\x76\xd4\xa8\x26\x9a\x91\x5c\x77\xf2\xdb\x7c\x23\x2c\x65\xa1\x33\xaa\x76\x1c\xa7\x52\x28\x62\xfe\xdc\x25\x2e\xcb\xd3\x39\xef\xbe\x0d\x72\x01\xd7\x01\xe2\x33\x30\xaf\x05\x8c\x3e\xbd\xbc\xe5\x07\xc6\x4b\x11\x57\x78\xe4\x13\xe3\x09\x5f\x5c\x44\x56\xbd\x10\x0f\xa7\x6e\x11\xda\xd0\x38\xd2\x0b\x6f\x96\x2f\xf3\xea\x41\x78\x0f\x1e\x4a\xe7\xda\x0a\x85\x4c\xfa\xb8\xec\xa6\x74\xe7\x5a\x79\x9b\x58\xfd\x32\xfe\xe9\x85\xff\x2c\xbb\x37\x82\x07\xf9\x4a\x90\xe5\xe2\x67\x59\x59\x4a\x86\x8e\x7d\x12\xcf\x4d\x5e\x60\xc6\x30\x95\xed\x67\xfd\x3a\x5f\x11\x6b\x7c\xa5\x50\xd1\x7e\x9c\x95\x0a\x6e\x33\x65\x9e\xe1\x35\xc6\x76\xb8\xf6\x9f\xc4\x82\x88\xff\xc4\x53\xbb\xf6\x9f\x8c\x69\xed\xf5\x47\x3e\x20\x99\x8b\x88\xf9\x21\xa4\x0f\x47\xf9\xb3\xd8\x0f\x16\x2f\x3b\xe6\x25\x71\x6b\x25\xa2\xed\x22\x45\xd1\xd3\x7c\x54\x3d\x2c\x14\x47\xd6\xc4\x66\x03\x2d\x75\xb1\x22\x5c\xab\x8d\xd7\xe8\xa9\x67\x79\xac\x5a\x6a\x2e\x91\xcd\xfe\xba\xca\x64\xca\xb2\xb7\xa9\x94\xb5\xdc\xd4\xef\x5e\x8d\xeb\x28\x4a\x66\x55\xf4\xf7\x92\xf8\x7b\x49\xfc\x1f\x28\x89\x35\x94\xff\xbf\x3f\x5c\x2b\xb4\x2f\xbd\x5d\xa7\xbd\xe8\xcd\xd5\xf9\xa2\xf3\x2b\x43\x14\xd8\x68\xf0\x57\x06\xa9\x34\xb2\xee\xd6\x95\x5b\x6a\xae\x22\xa8\xd4\xdb\x1b\x31\x3a\xf6\x2b\x83\x6a\xb3\xb9\xf2\xd6\xbd\xf6\x68\x4e\xe5\x1f\x8b\x48\xd5\x10\x4c\xd3\x2c\xc5\x27\x43\x7e\x83\xb2\x5c\x4a\x5d\x67\xe4\xed\x0d\xac\x2a\x55\xd4\xe3\xb9\x52\x90\xcd\x4d\x14\x04\x3e\x65\xa1\xe4\x9a\x4b\xf6\x90\xbe\xd2\xb4\x17\x66\x3e\xdb\x5a\x9b\x39\x54\x4d\xd3\x6c\x2c\xc3\xe9\x2b\x49\xcb\xfb\x77\xf6\x5a\x52\x7d\x05\x97\x0f\x26\x8a\x6e\x4e\xb4\x26\x8d\x12\xe9\x0a\xd5\x23\x15\x9d\x8b\xfc\x3c\xab\xae\x4a\x54\xf4\x6c\x41\xa7\x44\x30\xa4\x36\xb6\x15\x43\xa5\xf8\xf5\x6a\x02\x9b\xf6\x5e\xfc\xf5\xcf\xaf\x88\xc2\x63\x08\xb7\x77\xf2\x11\x4d\x0e\xfc\x8a\xbc\x08\xf3\x41\x97\x30\x4c\x1d\xb4\xc3\xfc\x04\x0e\x31\x26\xbc\xe8\x1d\x50\x70\x2b\xa5\xf9\x3c\x9f\x41\xb6\x2d\x54\xf8\x2c\x77\x61\xf0\xe8\xf3\x67\x39\x39\xa5\x98\x9a\x8a\xb2\xe8\x3a\xe0\xda\xcf\x33\xf0\x1f\xb8\x1a\x37\x7e\xcb\xd5\xee\xfe\x02\xfe\x03\x9f\xd7\x64\x14\xb7\xae\xfd\x7c\x07\x96\xb4\x32\xd1\x78\xc1\xd4\x0a\x61\xb0\xc4\x0b\x95\x14\x9d\xe6\x3b\xf0\x18\x82\x05\x28\x08\x30\xb1\x8d\xc7\x70\x06\x22\x9e\x3f\x82\x0e\x16\xfc\x4d\xe7\xe5\x37\x5d\x61\x2e\x24\x7f\xa7\xb1\xa6\xc7\xed\xc9\x0d\x72\x96\x16\x43\xe7\xa4\x39\xf3\xbd\xe8\x40\x20\x49\xf4\x99\xda\x2b\x17\x76\xb8\x8a\xe3\x53\x0e\x3d\xb9\x5d\xe2\x4c\x17\x46\xb3\xfa\xc2\xf3\x92\x5b\x95\x83\xe6\x4e\xd8\xe5\x8d\xb8\x31\xcd\x34\x4d\x29\x31\x95\xef\x6d\x3c\x23\xfc\x1c\x11\x79\x16\x9b\x12\x9a\xd7\xe9\x71\x73\x1f\xc7\xfc\xa0\x4b\x92\xfb\x59\x9e\x3d\xfd\xf5\xf5\xf5\xcb\xe6\xf5\xf5\x55\x2f\xc6\x32\xbd\x7f\xf8\x2e\x11\x29\xd5\x67\xa0\x4f\x67\xf0\xfd\xf4\xb7\x3f\x1f\x39\x07\xb8\xf5\xca\xde\x95\x5b\x4f\x95\x28\xf3\x24\x99\x6a\x4d\xe7\x6a\x4e\x67\xe5\x00\xfd\x77\x00\x00\x00\xff\xff\x1b\xc3\x88\xa4\x64\x28\x00\x00")

func golangFuncsTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangFuncsTmpl,
		"golang.funcs.tmpl",
	)
}

func golangFuncsTmpl() (*asset, error) {
	bytes, err := golangFuncsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.funcs.tmpl", size: 10340, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\xdf\x8f\xdb\xb8\xf1\x7f\x16\xff\x8a\x39\xe3\x9b\x85\xb4\xf1\xca\x79\xf8\xa2\x0f\xce\x6d\x8b\x38\xde\x1e\x0a\xe4\xb2\xe9\xc6\x41\x51\xdc\x1d\x72\xb4\x34\xf6\x32\xa6\x48\x87\xa2\xfc\xa3\xae\xfe\xf7\x62\x48\x4a\xa6\xbd\x4e\x9a\x43\x71\xc0\xed\xc3\x4a\x22\xe7\xf7\x7c\x66\x86\xf4\x68\x04\xaf\x3e\xcc\xee\x7f\xb8\x7b\x7b\xf7\xf0\x6a\x76\x37\x85\xc9\x3f\x61\xa9\xd7\xab\x65\x2e\xd4\xa8\x5e\xf3\x02\x2b\xad\x56\xb8\x5f\xea\x51\x39\xdf\xe5\x9b\x17\x6c\x34\x82\xe9\x3d\xbc\xbd\x9f\xc1\xdd\xf4\x6f\xb3\x9c\xb1\x35\x2f\x56\x7c\x89\x70\x38\x40\xfe\x2e\xbc\xb7\x2d\x63\xa2\x5a\x6b\x63\x21\x65\xc9\xa0\xe4\x96\xcf\x79\x8d\xa3\xfa\xb3\x1c\xb0\x64\xb0\xa8\x2c\x3d\x6a\x6b\x84\x5a\xd6\xee\x75\xaf\x0a\x7a\x5a\x51\xe1\x80\xb1\x64\xb0\x14\xf6\xb1\x99\xe7\x85\xae\x46\x9f\x2a\x2d\x8c\x56\xc4\xbc\x1b\xb0\xc3\xe1\x06\x0c\x57\x4b\x84\x7c\x2a\xb8\xc4\xc2\xd6\xa4\x2e\xf9\x08\x03\xb2\x60\x6a\xc4\x06\x0d\xb4\xad\xa7\x44\x55\xd2\x6e\xc6\xd8\x86\x1b\xf8\x87\xe1\xeb\x3b\x63\xe0\x16\x16\x8d\x2a\x52\x34\x06\xd0\x18\x6d\x32\xff\x80\x83\x41\xdb\x18\x45\x5f\xad\x63\x78\xa3\x97\x4b\x34\x9e\x7a\xa1\x4d\xc5\x2d\x78\xa3\x87\xc0\xcd\xb2\x86\x3c\xcf\x85\xb2\x68\x16\xbc\xc0\x43\x9b\x39\x9e\xb7\x7a\x0b\xb7\x40\x8e\xe4\x6f\xf5\x96\x31\x62\x06\xa9\x97\x18\xeb\x3b\xb0\x44\x2c\x3a\xf1\xdf\xdd\x82\x12\x12\xae\xae\x68\xb7\xfb\x3a\xb0\x24\xf1\xfb\xe9\xc0\x5b\x57\x48\x5d\x0b\xb5\x84\xda\x72\x8b\x15\x2a\x3b\x86\x67\x9b\xc1\x90\x98\x32\x96\xb4\xac\x65\xec\x70\xe8\x62\xf3\xde\x9a\x26\x84\xc6\xee\xd7\x3e\x3b\x6f\x79\x45\xa9\x21\x17\x9a\xc2\xc2\x21\x8e\xe5\x5f\x05\xca\xd2\x47\x32\x26\xa5\xf7\x19\xf1\x77\xef\x7c\x49\x34\x51\x68\x9d\xd6\x1b\x10\x0b\xc8\x3f\xac\x5d\xa2\x25\x7a\x12\xf8\xbf\xa0\x68\x7c\xdb\x0b\xec\x8d\xe9\xf6\xda\xd6\x71\x21\xf4\x71\x24\xcf\x0b\x2d\x9b\x4a\x11\x4f\x9a\x85\x88\xb3\x64\xc3\x65\x43\xdf\x51\xc4\x59\xb2\x36\x62\xc3\x2d\x9e\x48\x4c\x33\xd6\x46\xa1\xe8\xcd\x3a\xfa\x48\xe4\xcd\xfa\x68\xde\xda\x08\x65\x17\x30\x78\x56\x3f\xab\x07\x90\x16\xbc\x42\x59\xea\xad\xea\x84\x66\x17\x1c\xe8\xf9\xe3\x88\x02\x00\x6c\xe2\xa8\x51\x7c\x1c\x02\x4e\x2c\x8c\x42\x9c\x9e\x90\x67\x17\x63\x73\x80\x00\xcc\xab\x33\xc5\x87\xcd\x18\x36\x2d\xb4\x5e\x45\xda\xc0\xf5\x19\x41\x06\x17\x42\x79\x94\xe7\x4a\xe6\xb5\xa3\xa0\x92\xf9\xaa\xa0\x0b\xe1\x3f\x0a\x6a\xf2\xcd\x57\x99\x2f\xa7\x09\x0e\x47\x28\xdd\xb4\x97\xdf\xa9\x95\xb8\x98\x4f\x27\xc7\x30\x27\xd7\xd4\x0c\xf2\xe9\xc4\x05\x5c\x9a\x06\xae\xa5\x69\xdc\x47\x39\xff\x11\xed\xa3\x2e\xeb\x3e\xf2\xf7\x6b\x54\x69\xe9\xfa\xc2\x10\x6a\xdd\x98\x02\xfb\x2a\x96\xa6\xf9\x58\x8b\x7f\x39\xf8\x65\x90\x5e\x4f\x27\xc3\xa8\x44\xcb\xb9\xfb\x22\x84\x38\x7d\xaf\xb5\x52\x58\xd8\x33\x61\x99\xab\xe5\xb3\xd2\x0d\x71\x51\x42\x0e\xbb\xb6\x93\x76\x85\x9a\xf4\x56\x8f\x6f\x41\xe1\xf6\xcd\xc3\x87\x94\x54\x75\xc6\x64\xcc\xe3\x88\x1b\x10\xd5\x5a\x46\x2e\xd1\x72\xbd\x15\xb6\x78\x04\x6f\xc3\x69\x11\xc7\x0d\x91\x48\x0b\x5e\x47\x95\xff\xef\x23\xcc\x3f\x0f\xa0\x6d\xc7\x2c\x49\x9c\xfc\x5b\x87\xab\x0e\x90\xd3\xc9\x41\x9a\x66\x4c\xd6\x9c\x64\xc1\x05\x17\x17\xbc\x91\x76\xec\x3e\xe8\xef\x92\x9b\x8b\xca\xe6\x77\x14\xc3\x45\x3a\x68\x54\xdd\xac\x69\x0e\x60\xd9\x59\xfc\xac\x1e\x0c\xc3\x7b\x96\x39\x41\x2d\x63\x5d\xbc\xae\xa6\x13\x8a\xde\x74\x32\x86\x72\x3e\x64\x49\xd2\x99\x32\xec\x55\xf6\xd1\x18\xbb\xe8\x0c\x59\xd2\x0e\xc9\x80\x3e\xdf\xa9\x9e\x7f\x82\xeb\xe9\x24\x83\xd7\x52\xd7\x04\xd9\xb3\xce\xab\xe7\x9f\x72\x69\x9a\xfc\x5d\x63\x96\x98\x66\xbd\xf2\xce\x01\xda\x9f\x4e\xf2\xc0\x9d\x5d\x10\x3c\x45\x89\x16\x5f\x49\x49\xc2\xad\xb6\x5c\x12\x80\xfe\xf4\xff\x1e\x2e\xbd\xa6\x28\x35\xa1\x1f\x3f\xe0\x06\x4d\x8d\x5d\x3c\xc5\x02\x54\x0f\x31\xa7\xd6\x09\x3e\x1c\x60\x2d\x1b\xc3\x25\x21\xb3\x6f\x14\xd9\x4b\x47\x79\xdb\x81\xac\x0b\x88\xd7\xff\xfc\x16\x94\x8f\x26\xa0\xa4\xb4\x9f\xe7\xc8\x91\x9d\x81\xd1\x47\xff\x2c\xc9\xa7\xf4\x97\x23\xeb\x6a\x8a\x0a\x66\xb6\x8b\x0b\xc6\xee\x4e\xbd\x99\xe4\x13\x5c\x0a\xb5\x4b\x7f\x73\x8d\xc4\x96\x5c\xcd\x76\x87\xd9\x6e\x0c\x24\xbd\xea\x72\x4f\xf2\xe7\x24\x3c\xb5\xbb\xec\x88\x00\xd7\x2a\x66\xbb\x27\xad\x62\xb6\x73\x12\xab\xb3\xde\x90\xda\x1d\x5c\xcf\x76\x19\xbc\xd6\x55\x25\xec\x53\xac\x9c\x41\xc3\x92\xa4\xbc\x23\xce\x9e\xca\x79\xd0\x52\xce\x79\xb1\xfa\x46\x49\x47\xf2\x0b\xb2\x7e\x17\x94\xd9\xdd\x1f\x17\x64\x5f\x68\x65\x6e\x5c\x97\x73\x97\xda\xfe\x2c\x11\x75\xb3\x7a\x3a\x19\x74\x53\xdd\xee\xbe\x4c\x36\xdb\x0d\x8e\xe3\x24\x92\x19\x0f\xf0\xa4\x1f\x26\xa7\xa0\x3f\x21\xcf\xe0\x7d\xf1\x88\x15\x8f\x26\x2a\x0b\x0e\xfd\xea\x9c\xc8\xfd\xfe\xfb\xbf\xbf\x71\xb3\xec\xd7\xaf\x0b\x5b\x1b\x5c\x73\x83\x69\x6d\xab\xee\x7c\x99\x41\x1a\x56\x4b\xf0\x00\x7e\x6f\x2b\x3b\x04\x83\x6b\x49\x67\x24\x77\x22\xcd\xce\x80\x90\xa0\xb2\x66\x7f\x52\x81\xd4\xe6\x7e\x40\xeb\x44\xff\xd7\x1a\x74\xff\xd0\x18\x37\xa3\xba\xa3\x30\x89\x0c\xca\xbd\x52\x38\xf4\x92\x1f\xbc\x35\xa9\x23\xca\xe0\x62\x1f\x3e\xf3\x55\xea\x25\x09\x8b\x7d\xf5\x67\xe9\x3c\xcf\xe3\xa3\x85\xf3\x27\x9a\x4a\x6f\x22\xbe\x9e\xe1\xbc\x35\x9f\xe9\xea\xda\x03\x74\x2d\x20\xeb\xea\x3f\xaa\xc7\xab\x08\x35\x6d\x4b\x21\xb1\xbe\xd5\x74\xc3\x27\x38\x3b\x0c\x47\xec\x1e\x3c\x3d\x4f\x04\x9e\x48\xd7\x57\x91\xd4\xf3\xfe\xb1\x93\x4f\x42\xac\xd7\xbe\x4b\x8f\x48\xc8\xfe\x07\x28\x44\x9e\xff\x4e\x50\xf8\x02\xe5\x57\x2f\x6e\xa4\x61\x34\x82\xd9\xfd\xf4\x7e\x0c\x06\x55\x89\x06\x9c\x3f\x8f\x5a\x96\x68\xea\x0b\xb7\xb5\xf8\x7e\x56\x7f\x96\xe3\x9f\xd5\xb3\xfa\x67\x45\xc2\xe9\x95\xee\x65\x47\xfb\x8e\xd7\xb3\xb3\x33\xad\x8b\x56\x84\x1f\xb2\x36\x4a\x39\x63\x89\xc2\x9d\x1d\x12\x48\x36\x70\xed\xa8\x59\xb2\xc2\x7d\xd7\x75\xbb\xab\x91\xc1\x45\x1d\x96\x84\xb2\x3d\x4c\x09\x81\x47\xe1\x55\xd3\x71\xed\x55\x91\xff\xd8\x58\xdc\xd1\x11\x37\x2c\xf6\x27\xea\xa4\xe0\x6b\x5e\x08\xbb\x77\xa2\x12\xa3\xb5\x75\x04\x41\xbb\x50\x25\xee\xdc\x28\xe5\xeb\x9f\xbc\xfe\x5f\x82\x65\x2d\x63\xa3\x51\x38\xd0\x86\x06\x5f\x03\x57\x20\x94\xb0\xc2\xcd\x99\x92\x4c\xca\x7d\x9e\xfa\x83\x6f\xaf\x7a\x08\xb1\xea\xcc\x15\x8f\x6b\xc9\x04\xe8\x2b\x69\x1a\x8a\x79\x39\x1f\xf7\x07\x41\xaa\xd1\x8e\x65\xdc\x33\xd3\xaa\xb3\x72\xec\xcd\x5c\x61\xfa\xc4\xd6\xcc\x95\x73\x22\x73\x72\x2f\xa7\x20\xd3\x29\xd8\x7f\xf6\xcb\x2e\xea\xd1\x72\xa8\x0a\x19\x1c\x15\xaa\x46\x63\xc3\xa3\x06\x04\xbe\xb0\x68\x80\xdb\x21\x08\x55\x18\x77\x45\xaf\x41\xe6\x12\x55\x70\x39\x95\xce\xa7\x2c\xf0\xa4\x38\x04\x6e\x43\x5e\x1d\x06\x15\x79\xca\xbd\x41\x2c\xe1\xbd\x65\xc8\x12\xec\xcc\xe1\x96\x3e\xc2\x86\x62\x89\xea\x36\x30\xd8\x65\xb0\xd2\x1b\x0c\x0f\xb2\x6b\x61\x74\x05\x82\x6c\x11\xb5\x1d\x42\x89\xa7\xc6\x9d\xd9\xe6\xf9\x52\x8c\xed\xf2\xca\x7b\x6b\x82\x7d\xfe\xd9\xab\x77\x2f\xb1\x6d\x42\xc2\x68\x04\x7c\xa3\x45\x09\x15\x56\xda\xec\x41\x22\x5f\xd5\x91\x33\x5f\xa6\xe9\x5b\x47\x67\x17\x6e\x44\x61\xd3\x53\x84\xf8\x9f\x51\xfa\xb5\xef\xe1\x45\xd4\xd7\xdc\x31\x32\xb1\xfa\xa3\xe3\xa4\xc8\x4a\x54\xa9\xcc\x1d\x36\x32\xb8\xe9\xf9\x58\x52\x34\xc6\xa0\xb2\x1e\x67\x21\xdb\x0b\x6d\x40\xd0\xca\x8b\x97\x20\xe0\x7b\xe8\x04\xbd\x04\xf1\xfc\xb9\x53\xd3\x71\xdd\x42\x78\x0b\x11\x70\x36\x75\x7b\xbd\x44\xc7\x92\xac\xb9\x12\x45\x3a\xf0\x55\xa4\x1b\x0b\x7a\x01\xdb\x47\x5e\xac\x72\x30\xd4\xdb\x0b\xad\x4a\x61\x85\x56\xf5\x5f\x06\x19\x4b\x08\xa4\x91\xb8\xdc\x15\xfa\x9f\x83\x9b\x49\xa1\x95\x15\xaa\xc1\x40\x37\x1a\xc1\xf6\x51\x73\x98\xeb\x3d\x88\x1a\xec\xa3\xa8\xa1\x6e\xe6\x56\x62\x0e\x32\x0f\xb0\x98\x4b\xbd\xad\x81\x6f\xf9\xbe\x17\xea\xf2\xc5\x55\xe9\x45\xc4\xbe\xe4\x30\x6f\xec\x09\x9d\x4f\xdc\x56\x48\x09\x73\x84\xaa\xb1\x9c\xae\x76\x56\xc3\x1c\x9f\xb2\x03\xc5\xd0\x3e\x22\x38\x0d\xc2\xa2\xe1\xe4\xda\x77\x2c\x71\x7d\xed\x63\x14\xf6\x58\x07\xa3\xd1\x1b\xec\x4d\xc3\x06\xc5\xa2\x74\xe7\xd6\x2e\x83\xc3\x9e\x67\x85\x7b\xda\x76\xbf\xb1\x75\x6b\xd4\x3e\x8f\x37\xb8\x93\x64\xc5\xaa\x43\x63\x3e\x45\x1a\xcd\x4c\x6a\xb2\xfd\x34\xbe\x3e\xce\xd6\x30\x6c\x65\x5e\x35\xf9\x1b\x4d\x07\x77\x96\x94\xb8\x40\x03\x6e\xe9\x83\x92\x7e\x91\x25\x38\x04\xbd\x72\xa8\xf3\xf6\xfe\xb4\xc2\xfd\x2f\x0e\xaf\x7a\xe5\xd2\xd7\xbb\x88\xce\xfa\xfc\xd8\x14\x02\x62\x68\x19\x5d\xca\x9f\x3f\x67\xc7\x71\x8d\x7e\xb6\x3a\x74\xfb\x19\x13\x66\xbe\xcc\xcb\x79\xfe\xce\x9f\x1c\x76\xa9\xfb\x7a\xc0\xb9\x50\x25\x79\x93\xfd\xf6\x2b\x58\x82\xd4\xfd\x9c\xef\x44\x4b\x21\x1d\xfb\xa9\xc6\x12\x9a\x42\xd4\x5f\x57\xb8\xef\x5a\xe9\x25\xfb\x63\xdf\xbb\x3e\xd6\x3b\x74\xea\xcf\x93\x34\xf4\x47\x8a\xb8\x13\x7d\x4b\xe0\x9d\x86\x9b\x1b\x22\xf6\x4d\x43\xe6\x5d\xa9\x67\x4f\xd5\x84\x5f\x01\xbe\x51\x78\x27\xf2\x85\x93\xc4\xfe\x13\x00\x00\xff\xff\x07\x55\xf8\x58\x40\x17\x00\x00")

func golangHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangHeaderTmpl,
		"golang.header.tmpl",
	)
}

func golangHeaderTmpl() (*asset, error) {
	bytes, err := golangHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.header.tmpl", size: 5952, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x4d\x8f\xda\x38\x18\x3e\xc3\xaf\x78\x55\x71\x60\xd0\x90\xde\x77\x55\x8d\x32\xe0\xe9\xa6\x0d\x0e\x93\x98\xad\xe6\x98\x12\x53\xbc\x4a\x1c\x36\x18\x8d\x90\xf1\x7f\x5f\xd9\xce\x27\x4d\xd8\xe9\x6a\x0e\x7b\x73\xec\xc7\xcf\xfb\xbc\x9f\x8e\x94\x1f\x67\xb0\x0e\x22\xf2\x39\x44\xd1\xb3\x0f\x11\x71\x09\x5a\x21\x4c\x80\xa0\xd5\xda\x77\x09\x8a\x00\x66\x1f\x95\x1a\x8f\xa5\x9c\x43\x42\x77\x8c\x53\xf8\x70\xdc\xee\x69\x16\x7f\x80\xb9\x52\x66\xbf\x88\xf9\x0f\x0a\x0e\x89\xbf\xa7\xf4\x08\x4a\x8d\x17\x21\x72\x09\x02\xe2\x3e\xfa\x08\xa4\x04\x07\xc7\x19\x05\xa5\x60\xda\xc2\x4f\xd8\x3d\x4c\xb6\x79\x0a\xbf\x7d\x02\x67\x91\xa7\xa7\x8c\x9b\xcb\x52\xb2\x1d\x4c\x98\x52\xf7\x52\x52\x9e\x28\x35\x92\x12\x5e\x99\xd8\x5b\xb4\x36\x3a\x6a\x73\xea\x35\x39\x1f\x68\x75\x32\x07\xb6\x03\x07\xe7\x02\x9f\xd2\x54\x03\x70\x40\x00\x6f\x7c\x1f\xf4\x19\xe5\x49\x17\x18\xd2\x1d\x2d\x28\xdf\x1a\xae\x10\x3d\xa1\x10\xe1\x05\x8a\x0c\x6d\x7d\x66\x7d\x03\xa5\xa6\xdd\x6d\x2b\x1b\x94\xba\x83\x00\xc3\x12\xf9\x88\xa0\xab\x9b\x01\x5f\xd2\x94\x0a\x7d\xb9\x6d\x7f\x78\x6d\x54\xad\x0b\x96\xc5\xc5\xf9\x2b\x3d\xeb\x90\xdc\x8f\xd6\xa1\xb7\x72\xc3\x17\xf8\x8a\x5e\x60\x3a\x10\xc3\xce\x9d\x26\x8a\x50\x86\x51\x4a\x0b\x35\x2b\x6d\x4e\xa9\xbb\x6b\xd3\x65\x26\x37\x9c\xfd\x7d\xa2\xd6\xf2\x06\x7b\xcf\x1b\x34\x68\xf4\x97\x4d\x29\x35\xbe\xfb\x7d\x5c\xef\xb7\x56\x9d\x1a\x4b\x72\xc1\xe3\x8c\x56\x45\x06\x75\x06\x1c\xfd\x51\xc7\xbd\xe3\x40\x87\x20\xa5\x3b\xf1\x57\xce\xb8\x65\xf0\xd1\x13\x81\x2f\x81\x87\x6d\x76\xd8\x8f\xbd\xa8\x19\x75\xea\xa4\x04\x41\xb3\x43\x1a\x8b\xb6\x6d\xc7\xa7\x3b\xa1\x11\x9f\x86\x00\x86\xe9\xa6\x8e\x6d\xce\x13\x26\x58\xce\x9b\x7e\xd1\x09\xb6\x1e\x2c\xb2\x43\x5d\xd0\x7d\xf4\x35\xaa\x56\xd2\x78\xaf\x77\x83\x03\x2d\x62\x91\x17\xfa\xe4\xe1\xa7\x9a\xea\xd8\x29\x43\xf6\x26\x6b\x76\xd1\x6f\xb3\x3c\x6b\x5b\x7e\x23\x5d\x6f\xac\xba\x3a\xbd\xb7\x08\xf4\x1a\x65\x1e\xd6\x85\xd9\xc2\x1e\x69\x4a\xb7\xa2\x0d\xf5\x78\x4f\xa1\x0f\xe4\xea\x75\x4f\x0b\x7a\x3d\xd7\xca\x72\xe7\x89\xad\xf7\x4a\x1f\xdb\x01\xcf\x05\x4c\x18\x28\xf5\xed\x0f\x14\x9a\xbe\xa7\xe9\xd1\x54\x94\x8b\x97\x50\x17\x76\x47\x60\xab\x1c\x2c\xe9\xad\x61\xd0\x9d\xba\xc6\xb5\xf9\xeb\x3e\x16\x75\x57\x4c\x84\xa9\x61\x2d\xac\xaa\xe6\x2a\xa2\x29\xe5\xe0\x7c\xdb\xc7\xa2\x56\xdc\x72\x47\x93\x98\x5b\x06\x60\x24\x9a\x1e\x06\xdb\xc4\x8d\xf0\xd2\x80\x6d\x3b\x7b\xad\xd5\xd4\x56\xac\xf6\xb9\xb2\xd1\xe0\x67\xbf\xe2\x95\x75\x28\x42\x3e\x5a\x10\xe8\x49\x68\xe9\xb5\xa3\x14\x3c\x85\xc1\x0a\xda\x03\xc1\x8e\xf2\x72\x72\xe9\xc2\xf8\x92\x33\xfb\x92\x8c\xba\x75\xd4\x4c\x04\xa7\xbe\xf6\xd3\x73\xb0\xa8\xf2\xd3\xc7\x50\xd6\xc7\x35\xa8\x97\x28\x28\x12\x5a\x3c\x9e\x2d\x4b\x10\x2e\x51\x08\x8f\x2f\x43\xad\x52\x82\x9b\xb9\x06\x6e\xb4\x18\x20\xf6\x59\xc6\x84\xa5\xf5\xbd\x95\x47\xe0\xa1\x0b\xbc\x31\x89\x4e\xbc\x1b\x69\xb3\x33\x9d\xdd\xfd\xdf\x83\xfa\x6f\x3d\xf1\x3d\x3e\xb6\xda\xb6\x17\x99\x98\x47\xd8\x82\xca\x77\x7a\xc0\xe9\x7e\xc1\xef\xa3\x97\xf1\x23\x2d\xca\x1c\x78\x38\x42\x21\x01\x0f\x93\x60\x50\x85\xfd\x29\x32\xb1\x1c\x0d\xbd\xc0\xcd\xaf\xd3\x70\x17\x5f\x3f\xc6\xf0\xa7\xeb\x6f\x50\x34\x35\xae\xfd\x27\xd6\x87\xd6\xcb\x5e\xfb\x6e\xfe\xa0\xc8\x26\xc4\x1e\xfe\x0c\xb3\xe1\x30\x9c\x0e\x49\x5c\x25\x63\xb3\x5e\xba\xe5\x4f\x53\xfd\x20\x47\x88\xc0\xe5\x72\x79\x8e\x2e\x97\xcb\xbb\x24\xe5\x86\xb0\x7f\x02\x00\x00\xff\xff\x5f\xa3\x67\x2b\x04\x0b\x00\x00")

func postgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_postgresTmpl,
		"postgres.tmpl",
	)
}

func postgresTmpl() (*asset, error) {
	bytes, err := postgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.tmpl", size: 2820, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite3Tmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x4d\x6f\xea\x38\x14\x5d\xc3\xaf\xb8\x7a\x62\x01\xa8\xe4\x2d\x66\x37\xa3\xa7\x2a\x05\x57\x93\xd7\x90\xd0\xc4\x4c\xd5\x65\x4a\x4c\xf1\x28\x71\x98\x60\x54\x21\xe3\xff\x3e\xb2\x9d\x4f\x9a\x30\xed\xa8\x8b\xb7\x73\xec\xe3\x73\xcf\xfd\x74\x84\xf8\x3e\x85\xf0\xd1\x75\x30\xfa\x0d\x42\x6c\x63\xb4\x44\x1e\x06\x8c\x96\x2b\xd7\xc6\x28\x04\x98\x7e\x97\x72\x38\x14\x62\x06\x31\xd9\x52\x46\xe0\xdb\x61\xb3\x23\x69\xf4\x0d\x66\x52\xea\xfd\x3c\x62\xaf\x04\x2c\x1c\xbd\x24\xe4\x00\x52\x0e\xe7\x01\xb2\x31\x02\x6c\xdf\xb9\x08\x84\x00\xcb\x8b\x52\x02\x52\xc2\xb8\x81\x1f\xd1\x1b\x18\x6d\xb2\x04\x7e\xff\x01\xd6\x3c\x4b\x8e\x29\xd3\x97\x85\xa0\x5b\x18\x51\x29\x6f\x84\x20\x2c\x96\x72\x20\x04\xbc\x51\xbe\x33\x68\x65\x74\xd0\xe4\x54\x6b\x7c\xda\x93\xf2\x64\x06\x74\x0b\x96\x97\x71\xef\x98\x24\x0a\xe0\xf9\x18\xbc\xb5\xeb\x82\x3a\x23\x2c\x6e\x03\x03\xb2\x25\x39\x61\x1b\xcd\x15\xa0\x7b\x14\x20\x6f\x8e\x42\x4d\x5b\x9d\x19\xdf\x40\xca\x71\x7b\xdb\xc8\x06\x29\x27\xe0\x7b\xb0\x40\x2e\xc2\xe8\xe2\xa6\xcf\x16\x24\x21\x5c\x5d\x6e\xda\xef\x5f\x6b\x55\xab\x9c\xa6\x51\x7e\x7a\x20\x27\x15\x92\x9b\xc1\x2a\x70\x96\x76\xf0\x0c\x0f\xe8\x19\xc6\x3d\x31\x6c\xdd\xa9\xa3\x08\x45\x18\x85\x30\x50\xbd\x52\xe6\xa4\x9c\x5c\x9a\x2e\x32\xb9\x66\xf4\x9f\x23\x31\x96\xd7\x9e\xf3\xb8\x46\xbd\x46\x3f\x6d\x4a\xca\xe1\xe4\x8f\x61\xb5\xdf\x58\xb5\x6a\x2c\xce\x38\x8b\x52\x52\x16\x19\x54\x19\xb0\xd4\x47\x15\xf7\x96\x03\x2d\x82\x84\x6c\xf9\xdf\x19\x65\x86\xc1\x45\xf7\x18\x7e\xfa\x8e\x67\xb2\x43\x5f\x77\xbc\x62\x54\xa9\x13\x02\x38\x49\xf7\x49\xc4\x9b\xb6\x2d\x97\x6c\xb9\x42\xfc\xe8\x03\x68\xa6\xab\x3a\x36\x19\x8b\x29\xa7\x19\xab\xfb\x45\x25\xd8\x78\x30\x4f\xf7\x55\x41\x77\xd1\x57\xa8\x4a\x49\xed\xbd\xda\xf5\xf7\x24\x8f\x78\x96\xab\x93\xdb\x77\x35\xd5\xb2\x53\x84\xec\x43\xd6\xcc\xa2\xdb\x66\x71\xd6\xb4\xfc\x41\xba\xce\x58\xb5\x75\x3a\x1f\x11\xe8\xd4\xca\x1c\x4f\x15\x66\x03\x7b\x20\x09\xd9\xf0\x26\xd4\x61\x1d\x85\xde\x93\xab\xb7\x1d\xc9\xc9\xe5\x5c\x2b\xca\x9d\xc5\xa6\xde\x4b\x7d\x74\x0b\x2c\xe3\x30\xa2\x20\xe5\xd3\x9f\x28\xd0\x7d\x4f\x92\x83\xae\x28\xdb\x5b\x40\x55\xd8\x2d\x81\x8d\x72\x30\xa4\xd7\x86\x41\x7b\xea\x6a\xd7\x66\x6f\xbb\x88\x57\x5d\x31\xe2\xba\x86\x95\xb0\xb2\x9a\xcb\x88\x26\x84\x81\xf5\xb4\x8b\x78\xa5\xb8\xe1\x8e\x22\xd1\xb7\x34\x40\x4b\xd4\x3d\x0c\xa6\x89\x6b\xe1\x85\x01\xd3\x76\xe6\x5a\xa3\xa9\x8d\x58\xe5\x73\x69\xa3\xc6\x4f\x3f\xe3\x95\x71\x28\x44\x2e\x9a\x63\xe8\x48\x68\xe1\xb5\x25\x25\xdc\x07\xfe\x12\x9a\x03\xc1\x8c\xf2\x62\x72\xa9\xc2\xf8\x99\x51\xf3\x92\x0c\xda\x75\x54\x4f\x04\xab\xba\xf6\xee\x39\x98\x97\xf9\xe9\x62\x28\xea\xe3\x12\xd4\x49\xe4\xe7\x31\xc9\xef\x4e\x86\xc5\x0f\x16\x28\x80\xbb\xe7\xbe\x56\x29\xc0\xf5\x5c\x03\x3b\x9c\xf7\x10\xbb\x34\xa5\xdc\xd0\xba\xce\xd2\xc1\x70\xdb\x06\x5e\x99\x44\x47\xd6\x8e\xb4\xde\x19\x4f\x27\xbf\x7a\x50\xff\xab\x27\x5e\xa2\x43\xa3\x6d\x3b\x91\xb1\x7e\x84\x0d\xa8\x78\xa7\x7b\x9c\xee\x16\xfc\x35\x7a\x29\x3b\x90\xbc\xc8\x81\xe3\x85\x28\xc0\xe0\x78\xd8\xef\x55\x61\x7e\x8a\x74\x2c\x07\x7d\x2f\x70\xfd\xeb\xd4\xdf\xc5\x97\x8f\x31\xfc\x65\xbb\x6b\x14\x8e\xb5\x6b\xff\x8b\xf5\xb6\xf1\xb2\x57\xbe\x5f\x73\xfd\xb8\x8f\xa3\x32\x01\xeb\xd5\xc2\x2e\x7e\x94\xaa\x47\x38\x44\x18\xce\xe7\xf3\x63\x78\x3e\x9f\xbf\x24\x11\x17\x62\xfe\x0d\x00\x00\xff\xff\x98\xb8\x02\x49\xe9\x0a\x00\x00")

func sqlite3TmplBytes() ([]byte, error) {
	return bindataRead(
		_sqlite3Tmpl,
		"sqlite3.tmpl",
	)
}

func sqlite3Tmpl() (*asset, error) {
	bytes, err := sqlite3TmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3.tmpl", size: 2793, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"golang.footer.tmpl": golangFooterTmpl,
	"golang.funcs.tmpl": golangFuncsTmpl,
	"golang.header.tmpl": golangHeaderTmpl,
	"postgres.tmpl": postgresTmpl,
	"sqlite3.tmpl": sqlite3Tmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"golang.footer.tmpl": &bintree{golangFooterTmpl, map[string]*bintree{}},
	"golang.funcs.tmpl": &bintree{golangFuncsTmpl, map[string]*bintree{}},
	"golang.header.tmpl": &bintree{golangHeaderTmpl, map[string]*bintree{}},
	"postgres.tmpl": &bintree{postgresTmpl, map[string]*bintree{}},
	"sqlite3.tmpl": &bintree{sqlite3Tmpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

