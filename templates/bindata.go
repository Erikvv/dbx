// Code generated by go-bindata.
// sources:
// golang.create-raw.tmpl
// golang.create.tmpl
// golang.decl.tmpl
// golang.delete-all.tmpl
// golang.delete-world.tmpl
// golang.delete.tmpl
// golang.dialect-postgres.tmpl
// golang.dialect-sqlite3.tmpl
// golang.footer.tmpl
// golang.get-all.tmpl
// golang.get-count.tmpl
// golang.get-first.tmpl
// golang.get-has.tmpl
// golang.get-last.tmpl
// golang.get-limitoffset.tmpl
// golang.get-one-all.tmpl
// golang.get-one.tmpl
// golang.get-paged.tmpl
// golang.get-scalar-all.tmpl
// golang.get-scalar.tmpl
// golang.header.tmpl
// golang.misc.tmpl
// golang.update.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _golangCreateRawTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x41\x8b\xdb\x30\x10\x85\xcf\xd6\xaf\x98\x06\x0a\x36\x64\xf5\x03\x0a\x39\x94\xb2\x85\x85\xbd\x6c\xd2\xbb\xd1\xda\x23\xa3\xc6\x19\xb9\xa3\xc9\x26\x41\xe8\xbf\x17\x59\x49\x70\xa1\x2d\xa5\x7b\x30\x18\x7b\x78\xdf\x7b\x6f\x26\xc6\x07\xe8\xd1\x3a\x42\x58\x05\x37\x90\x91\x23\xe3\x0a\x1e\x52\x52\x5b\x73\xfa\xc2\x68\x04\xdb\x18\x41\xef\x8e\xd6\xba\x33\xa4\x54\xc7\x08\x9d\x9c\x27\xc3\xe6\x00\xfa\x33\x0f\x90\x52\x03\xb5\xaa\x62\x84\xeb\xc7\x2d\xca\x91\x09\x52\x5a\x03\x32\xe7\xc7\x73\xa3\x32\x0a\xa9\x9f\xb5\xd5\x92\xeb\xe8\xcd\xef\xff\x09\x6a\x78\xb8\x23\x55\x8c\xbf\x97\x7b\xf5\xfd\xa5\x88\x65\x4b\x8e\x9c\x10\x9e\x40\x7f\x75\x38\xf6\x01\xf2\x74\xd5\x79\x0a\x02\x6d\x1b\xe4\x20\x9b\xec\x9b\x1d\x89\x85\xd5\xc7\x1f\x2b\xd0\xbb\x97\xe7\x3c\x55\xf9\xd7\xef\x7a\xf4\xc3\x4e\x0e\x52\x97\xd1\x35\xc4\x08\xb3\x87\xbb\x58\xa3\x0a\xc5\x66\xb3\xd3\xe4\x59\x42\x49\xef\x68\x80\x85\x85\x45\x29\xaa\xca\xa5\x6c\x20\xeb\xf7\xec\xde\x90\xf5\xcb\x11\xf9\xb2\xf5\xa7\xbf\x70\xf4\xae\x33\x94\x6b\x30\x7d\xcf\xde\x42\x6d\x47\x23\x82\x74\x13\x6e\x66\x33\x95\xb3\x73\xe5\x1f\x36\x40\x6e\x84\xa8\xaa\x8a\x0b\x97\xdc\xb8\x9e\x91\x07\xb3\xc7\x47\xe6\x1a\x99\x1b\x55\x25\x75\x1b\xb8\x21\x17\xcb\x23\x37\xce\x01\x70\x0c\x58\x0a\x6d\x5b\xc6\x50\xb6\xfa\xe9\x97\x04\x8f\x67\xec\xfe\xe0\xfe\x7f\x7d\xb5\xed\xb4\xbf\xa3\x66\xb0\x7e\x36\x41\x9e\x28\x20\xcb\x53\x5f\xbf\x2b\x6d\xfe\x37\xa0\x64\xc1\x7c\x68\x25\xb4\xfe\x76\x99\x30\x5f\x5b\x27\xe7\x35\x64\x7e\x53\xf2\x5f\xcf\x6c\xf1\xfa\x33\x00\x00\xff\xff\x7a\x8b\x1f\x6e\x38\x03\x00\x00")

func golangCreateRawTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangCreateRawTmpl,
		"golang.create-raw.tmpl",
	)
}

func golangCreateRawTmpl() (*asset, error) {
	bytes, err := golangCreateRawTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.create-raw.tmpl", size: 824, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x5f\x6b\xdb\x30\x14\xc5\x9f\xad\x4f\x71\x17\x18\xd8\x90\xea\x03\x14\xfa\x30\x4a\xc7\x0a\x25\xd0\xa6\x7b\x36\x8a\x75\x65\xb4\x38\x92\x77\x75\x53\x27\x08\x7d\xf7\x21\xab\xe9\x5c\xd8\x1f\xd8\x1e\x0c\xe2\x5a\x9c\xdf\x3d\x47\x27\xc6\x2b\xd0\x68\xac\x43\x58\x05\xdb\x3b\xc5\x47\xc2\x15\x5c\xa5\x24\x6e\x09\x15\x63\x1b\x23\xc8\xed\xd1\x18\x7b\x82\x94\xea\x18\xa1\xe3\xd3\xa8\x48\x1d\x40\x7e\xa2\x3e\x40\x4a\x0d\xd4\xa2\x8a\x11\x5e\xa7\x4f\xc8\x47\x72\x90\xd2\x1a\x90\x28\x7f\x9e\x1a\x91\x41\xe8\xf4\xac\x2c\x96\x54\xeb\x5e\xfc\xfe\xef\x48\x45\xfd\x4f\xa0\x88\xf1\xd7\x62\x3b\xaf\xcf\x45\xaa\xca\x63\x6b\x40\x6e\x10\x75\xd8\xf8\x09\xf2\xb0\x6d\x9d\x9f\xe0\xfa\x06\xfc\xee\x9b\xd4\x3b\xf9\xc5\xfb\x7d\x90\x1b\x3f\xd5\x8d\xfc\xfa\x7c\x5b\x37\xb3\x91\x8b\x74\x3e\x5b\x67\xd9\xe1\x04\xf2\xb3\xc5\x41\x67\xba\x10\x55\xe7\x5d\x60\x68\xdb\xc0\x07\xbe\xc9\xce\xc9\x3a\x36\xb0\xfa\xf8\x7d\x05\x72\xfb\xf8\x30\xb3\x32\x62\xf0\xfd\x96\x0f\x5c\x97\xab\x6b\x88\x11\x66\x23\x6f\x62\x8d\x28\x14\x93\x1d\x8f\xa3\x27\x0e\x25\x3f\xeb\x7a\x58\xac\xb0\x88\x55\x54\x39\xd6\x57\x0b\x64\x5f\x90\xe4\xe3\x11\xe9\xfc\xe4\xa7\x3f\x70\xe4\xb6\x53\x2e\x67\xa9\xb4\x26\x6f\xa0\x36\x83\x62\x46\x77\x11\x6e\xe6\x65\x2a\x6b\xe6\x47\xfb\x70\x03\xce\x0e\x10\x45\x55\x51\xe1\x3a\x3b\xac\x67\xe4\x41\xed\xf1\x8e\xa8\x46\xa2\x46\x54\x49\x5c\x2e\x5c\x90\x8b\xe7\x77\x76\x28\x79\x0e\x01\x4b\xa0\x6d\x4b\x18\x4a\x2f\xae\xdf\x39\xb8\x3b\x61\xf7\x9b\xed\xff\x75\xaf\xb6\x1d\xf7\x6f\xa8\x19\x2c\x1f\x54\xe0\x7b\x17\x90\xf8\x5e\xd7\xff\xe5\x36\xff\xeb\x91\xb3\x60\x6e\x6b\x31\x2d\x9f\xcf\x23\xe6\xca\x76\x7c\x5a\x43\xe6\xbf\xef\xd3\xe2\xf8\x23\x00\x00\xff\xff\x86\xad\x48\xf5\x78\x03\x00\x00")

func golangCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangCreateTmpl,
		"golang.create.tmpl",
	)
}

func golangCreateTmpl() (*asset, error) {
	bytes, err := golangCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.create.tmpl", size: 888, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeclTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\xd6\x55\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x49\x4d\xce\x51\x52\xa8\xad\xe5\x4a\x2b\xcd\x4b\x56\xd0\xc8\x4f\xca\x52\xd0\xaa\xae\x56\xd0\x0b\x4a\x4d\x4e\xcd\x2c\x4b\x2d\x72\x4a\x2c\x4e\x55\xa8\xad\xf5\xcc\x2d\xc8\xd1\x54\x00\x49\x04\x67\xa6\xe7\x25\x96\x94\x16\x81\x44\x15\xaa\xb9\x40\x42\x4e\xf9\x29\x95\x20\x23\x6a\x41\xbc\xd4\xbc\x14\x05\xdd\xda\x5a\x2e\x40\x00\x00\x00\xff\xff\x9b\x28\x5e\xfd\x65\x00\x00\x00")

func golangDeclTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeclTmpl,
		"golang.decl.tmpl",
	)
}

func golangDeclTmpl() (*asset, error) {
	bytes, err := golangDeclTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.decl.tmpl", size: 101, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x90\xb1\x6a\xc3\x30\x10\x86\x67\xe9\x29\xae\x86\x82\x03\x89\xe9\x50\x3a\x14\x3c\x04\x9a\xad\x4b\x9b\x07\x30\x8e\x7d\x32\x6a\x64\x29\x3d\x9d\xd3\x94\x43\xef\x5e\x6c\x07\xea\xa1\x10\xe8\xa0\x49\xff\xff\x7d\xdc\x2f\xb2\x81\x16\x8d\xf5\x08\x59\xb4\x9d\xaf\x79\x20\xcc\x60\x93\x92\x7e\x41\x87\x8c\x95\x08\x14\xfb\xc1\x18\x7b\x81\x94\x72\x11\x68\xf8\x72\xaa\xa9\xee\xa1\xd8\x52\x17\x21\xa5\x15\xe4\x5a\x35\x61\xf0\x0c\xd6\xf3\xd3\xe3\x1a\x90\x68\x7c\x81\x56\x7a\x14\xa0\x6f\x27\xa2\x5e\xda\xac\x3f\x87\xe3\x6d\x55\x4d\xdd\xaf\x48\x8b\xfc\x0d\x3b\x84\xf6\x7b\x46\xa9\x26\xf8\xc8\x50\x55\x91\x7b\x2e\x45\xe0\x44\xd6\xb3\x81\xec\xfe\x33\x83\x62\xff\xf6\x0a\x63\x28\x1c\x3e\x0a\x17\xba\x3d\xf7\x9c\xcf\xd1\x35\x88\x80\xb1\xe8\xda\x73\xed\x06\x5c\x38\xb5\xaa\x2a\xc2\x38\x5f\xf5\x5c\xc2\xd8\x6d\xc9\x9e\x91\x8a\xdd\x05\x9b\x9b\x7d\x65\xcd\x54\xbd\x2b\xc1\x5b\x07\xa2\x95\x22\xe4\x81\x3c\x3c\xac\x27\x58\x5f\x1f\x71\x47\x94\x23\xd1\x4a\xab\xa4\xaf\x63\xce\xc2\x12\x26\x7b\xf1\x1e\xbe\xe2\xd6\x18\x6c\x18\xdb\xfc\x5f\xd0\xeb\xff\x95\xed\xad\x5b\xae\xf9\x13\x00\x00\xff\xff\x38\x18\x61\x7b\x08\x02\x00\x00")

func golangDeleteAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteAllTmpl,
		"golang.delete-all.tmpl",
	)
}

func golangDeleteAllTmpl() (*asset, error) {
	bytes, err := golangDeleteAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete-all.tmpl", size: 520, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteWorldTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x90\xb1\x6a\xc3\x30\x10\x86\x67\xe9\x29\xae\x86\x82\x4d\x13\xd1\xa1\x74\xf3\x10\x4a\xb6\x2e\x4d\x1f\x20\x38\xd6\x39\xa8\x55\x4f\xcd\xe9\x9c\xba\x08\xbf\x7b\xb1\x5c\x87\xcc\x19\x84\x40\xe8\xff\xbe\xbb\x3f\xa5\x35\x58\xec\x1c\x21\x14\xd1\x1d\xa9\x91\x9e\xb1\x80\xf5\x38\x6a\x8b\x1e\x05\x37\xde\x97\xad\x0c\xd0\x06\x12\x1c\xc4\xbc\xcc\x77\x05\x65\x1b\x7a\x12\x70\x24\xcf\x4f\x2b\x40\xe6\xe9\x04\xae\xf4\x84\x44\xb2\x99\xa1\xaf\xf9\x87\x60\x7f\x67\xb4\x3a\x37\x0c\xfb\x3d\x63\x84\x78\xf2\x66\x87\xb1\xf7\xb2\xbc\x5e\x71\xe7\x3c\x37\x74\x44\x30\xef\x6f\xaf\x11\xa6\x70\x0e\xce\xca\x1a\xc2\xe1\xc3\x58\x76\x67\x64\xb3\x1d\xb0\x2d\x53\x82\x6f\x76\x24\x1d\x14\xf7\xa7\x02\x0c\x8c\x63\xa5\x95\xeb\xf2\xf7\xbb\x1a\xc8\x79\x48\x5a\x29\x46\xe9\x99\xe0\x71\x95\x09\x5f\xcd\x27\x6e\x99\x4b\x64\xae\xb4\x1a\xf5\x24\xc9\x73\x2c\x9a\xec\x34\xbb\xf0\x13\x37\x5d\x87\xad\xa0\x2d\x6f\xc0\xaa\x79\xb7\x87\x7a\x59\xf3\x52\xd6\xd4\xd5\x12\xfe\x17\x93\xf3\x3a\xa5\x4b\x95\x7f\x01\x00\x00\xff\xff\xab\x74\xf7\x3d\xaa\x01\x00\x00")

func golangDeleteWorldTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteWorldTmpl,
		"golang.delete-world.tmpl",
	)
}

func golangDeleteWorldTmpl() (*asset, error) {
	bytes, err := golangDeleteWorldTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete-world.tmpl", size: 426, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x90\xc1\x6a\x33\x21\x14\x46\xd7\xfa\x14\xf7\x1f\xf8\x61\x02\x93\xa1\xeb\x42\x0a\x81\x66\xd7\x4d\x9b\x07\x18\xcc\x78\x1d\x6c\x1c\x4d\xaf\x4e\x9a\x72\xf1\xdd\xcb\x98\x90\x66\x53\x02\x5d\xb8\xfb\xce\x39\x2a\xf3\x12\x34\x1a\xeb\x11\xaa\x68\x07\xaf\xd2\x44\x58\xc1\x32\x67\xf9\x8c\x0e\x13\x76\xcc\xd0\x6e\x27\x63\xec\x09\x72\xae\x99\xa1\x4f\xa7\x83\x22\x35\x42\xbb\xa6\x21\x42\xce\x0b\xa8\xa5\xd0\x65\xad\x61\x17\x82\x6b\x00\x89\xe6\x13\x68\x21\xe7\x02\x7a\x5d\x94\xf2\x36\x67\xfd\x31\xec\xef\xb7\x14\x0d\x3f\xa5\xdf\x6d\xbb\xa0\xbf\xce\x2e\xd1\x07\x1f\x13\x74\x5d\x4c\x63\x5a\x31\xc3\x81\xac\x4f\x06\xaa\xff\x1f\x15\xb4\xdb\xd7\x17\x98\x47\x61\xf7\xde\xba\x30\x6c\xd3\x98\xea\xf3\xb4\x01\x66\x30\x16\x9d\x3e\x2a\x37\xe1\x4d\x54\x8a\xae\x23\x8c\xe7\x67\x3d\xae\x60\x66\x35\xd9\x23\x52\xbb\x39\x61\x7f\x97\x17\xd6\x14\xf4\xdf\x0a\xbc\x75\xc0\x52\x08\xc2\x34\x91\x07\xa3\x5c\xc4\xa6\x08\x47\xb5\xc7\x0d\x51\x8d\x44\x0b\x29\x72\x89\xf6\x61\xf2\xe9\x9a\x2d\x97\x68\xdf\xc2\x67\x5c\x1b\x83\x7d\x42\x5d\xff\xd9\x7d\xd9\x5c\x12\xf0\x04\x0f\xcd\xcc\x4b\xe6\xeb\xf7\x7e\x07\x00\x00\xff\xff\xc9\x75\xac\x89\x1b\x02\x00\x00")

func golangDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteTmpl,
		"golang.delete.tmpl",
	)
}

func golangDeleteTmpl() (*asset, error) {
	bytes, err := golangDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete.tmpl", size: 539, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDialectPostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x90\x4b\x6e\x84\x30\x10\x44\xd7\xf6\x29\x4a\x5e\x41\x04\x1e\x29\xd9\x25\x62\x85\x72\x81\xdc\x80\x4f\x33\x69\x05\x6c\xa6\x6d\xb2\xb1\x7c\xf7\x08\xe7\x2f\x79\x55\x55\xef\x59\xea\x94\x5a\xcc\xb4\xb0\x23\x18\xde\x76\x2f\xd1\x20\x67\xad\xcc\x95\xe3\xeb\x31\xda\xc9\x6f\x97\x95\xc7\xcb\x7e\x33\x3a\x25\x90\x9b\xd1\xe6\xac\xf5\x3f\x2e\xb4\x93\x77\x21\xca\xc0\x2e\xb6\x24\xe2\xa5\x48\x96\xc3\x4d\xa8\x78\xdb\x57\xa4\x04\xfb\x42\x13\xf1\x3b\x09\x72\xae\xc1\xa1\xff\x41\x9e\x4f\xa2\x22\x11\x14\xb6\x46\xa5\xd5\xaf\x10\x21\x0a\xbb\x6b\x03\xff\x86\xd1\xfb\xb5\x46\xd2\x8a\x17\x50\x49\x1e\xbb\x13\xb2\xd5\xdd\x7e\xb3\xc5\x53\x3f\x9d\x71\xd2\x4a\x95\x91\xed\xfd\x4c\xb6\x5f\x87\x10\xaa\x1a\x5d\x07\x73\xff\x60\x3e\x6b\x25\x14\x0f\x71\x65\xf3\xfd\x59\x83\x28\x07\x9d\x6d\xd6\xe7\xfb\x9a\x18\xd3\x60\x19\xd6\x40\x3a\xff\xbd\xc2\x47\x00\x00\x00\xff\xff\x28\x4c\xe9\xcf\x3d\x01\x00\x00")

func golangDialectPostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDialectPostgresTmpl,
		"golang.dialect-postgres.tmpl",
	)
}

func golangDialectPostgresTmpl() (*asset, error) {
	bytes, err := golangDialectPostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.dialect-postgres.tmpl", size: 317, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDialectSqlite3Tmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x91\x41\x4b\xc4\x30\x10\x85\xcf\xc9\xaf\x18\x73\x6a\x61\xdb\x45\xbc\xad\xf4\xb4\x78\x10\x3c\xa9\x37\xf1\xd0\x6d\xa7\x75\xb0\x49\xd6\x49\x2a\x42\xc8\x7f\x97\xa4\xeb\xb6\x42\x4f\xf3\xde\xf7\xf5\x41\x42\xa8\xa0\xc7\x81\x0c\x82\x22\x7d\xb6\xec\x15\xc4\x28\x85\x1a\xc9\x7f\xcc\xa7\xba\xb3\x7a\xaf\x5b\xef\xcd\x7e\xb4\x95\xfb\x9a\xc8\xe3\x9d\x92\x21\x00\x9a\x1e\xaa\x18\xa5\xfc\x67\x70\x55\x67\x8d\xf3\xdc\x92\xf1\x15\x32\x5b\xce\xba\x61\x36\x1d\x14\xa4\xcf\x13\x84\x00\xf5\x33\x76\x48\xdf\xc8\x10\x63\x09\xe4\x8e\x57\xe4\x21\x11\x05\x32\x43\x66\x4b\x28\xa4\x58\x85\xe0\x3c\x93\x19\x77\x60\x3f\xe1\x64\xed\x54\x42\x90\x82\x06\xc0\x7c\x39\x34\x09\xaa\x8b\xcb\xc8\x3a\xbb\xca\xfb\x14\x05\x29\x44\x2e\xd6\x47\xdb\x23\x34\x0d\x6c\x4a\xeb\xdf\x97\x9e\xd0\x6e\xfc\x93\x2d\x7b\xca\x7c\xee\xec\x64\x4d\x0a\x96\x15\xae\x7e\x6a\x9d\x7f\x34\x3d\xfe\x14\xda\x8d\x3b\x50\x07\xb5\x14\x69\x80\xa5\x7b\xd3\x40\x75\x7b\x91\x0a\x46\x3f\xb3\xb9\xc2\xaf\x4c\xfa\xe5\xdc\x76\x98\xe0\xb7\xdc\x3f\xbc\x97\x3b\xf0\x3c\x63\x06\xa2\xdc\x50\x4a\xad\x49\x94\xe9\xdb\x04\x43\x3b\x39\x94\x71\xfb\x28\xbf\x01\x00\x00\xff\xff\xf2\xcb\x38\xa5\xd6\x01\x00\x00")

func golangDialectSqlite3TmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDialectSqlite3Tmpl,
		"golang.dialect-sqlite3.tmpl",
	)
}

func golangDialectSqlite3Tmpl() (*asset, error) {
	bytes, err := golangDialectSqlite3TmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.dialect-sqlite3.tmpl", size: 470, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x93\xcf\x8e\xd3\x30\x10\xc6\xcf\x9e\xa7\x18\x6e\x49\xb5\xf8\x84\xb8\xa0\x1e\xd8\x5d\x0e\x1c\x10\x52\x9b\x17\x48\x93\x69\xd7\xaa\xeb\x04\x77\xb2\x0c\xb2\xf2\xee\xc8\xf9\x5f\x9a\x05\x21\xb5\x8a\x3d\xf2\x7c\xdf\xcf\xfe\xec\x10\xd0\x1c\x51\xef\x9b\xba\xae\x3c\xef\x04\xdb\x16\xf8\x57\x4d\xb8\x13\xbc\xb2\x6f\x0a\xc6\x00\xaa\x3c\xe0\xe6\xf9\x11\x14\x0b\x6e\x32\x81\x16\xe0\xd8\xb8\x02\x13\x2f\xb8\xd9\x49\x8a\x27\xe2\x4c\x92\x82\x05\x8b\xca\x31\x09\xeb\xa7\xfe\x9b\x62\xd2\xf7\x3c\x20\x79\x1f\xff\x95\x4f\xa3\xa2\x39\xa2\x17\xcd\x82\xdb\x2d\x3a\x63\x63\x69\xaa\xf5\x6b\xb7\x71\x52\x1e\xf4\xf7\x9a\x5c\x94\x4e\x3f\x75\xe5\x77\xf3\x7a\xe5\x89\x1b\xef\xe2\xbc\x6b\x01\xa5\x5a\x88\xbf\xa1\x3e\x88\x39\x63\xef\x89\x9f\xaa\xcb\xc5\x70\x92\x62\xf2\x06\xd7\xc2\x67\xa2\x61\xd1\x63\x1f\x28\x35\xf0\x77\xfa\x0b\xd7\x08\x72\x67\xb7\xab\xac\x3d\xe4\xc5\xf9\xff\x0d\xe7\xce\x7f\x59\x86\x80\x3e\x77\x27\x42\xfd\x8d\xf8\xa5\x2a\xaf\x31\xcb\x5b\x8c\x10\x50\xef\xcd\xc9\xe5\xdc\x78\xc2\xb6\x8d\x6e\xaf\xb9\xc7\x21\xd7\x08\x73\x73\xfc\x53\xae\xf7\x87\x3f\x58\x2f\x31\x58\x74\x34\xf8\xea\x5e\xab\x73\x54\xef\x99\xc8\x95\x71\x3c\x8f\xfa\xfb\x35\x32\x1a\xc7\xe4\x8f\x79\x41\x18\x20\x84\xf7\x2b\x5b\x50\x7f\x52\x2f\xb4\x46\xb5\x4c\xd6\xf4\xd4\x50\x04\x50\x53\xde\xdd\xc9\x83\x5a\x04\xd2\x57\x46\x25\x5e\x57\x9a\x0c\x00\x54\x49\x96\x98\x3e\x5b\xfb\xc6\x8d\x37\x8e\x3f\x7e\x78\x18\x32\x06\x75\xc9\xcf\xf4\xc5\xfb\x65\xee\xb7\x96\xcf\x8f\xab\x96\xfb\xe2\x85\x2e\x79\x92\xc6\x77\x68\xdc\x69\xde\xcd\xd8\x57\x1e\x56\xfb\x26\x39\x00\xf5\xd3\xe7\x75\x26\xdd\x1b\xbc\xfe\xb0\x3a\x93\x74\xde\xe0\x5f\xc9\x7e\x07\x00\x00\xff\xff\x0d\x56\x59\xce\x18\x04\x00\x00")

func golangFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangFooterTmpl,
		"golang.footer.tmpl",
	)
}

func golangFooterTmpl() (*asset, error) {
	bytes, err := golangFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.footer.tmpl", size: 1048, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x92\xcd\xaa\xdb\x30\x14\x84\xd7\xd2\x53\x9c\x1a\x0a\x32\xe4\xfa\x01\x6e\xf1\xe2\x52\xba\x2b\x85\x5b\x3f\x80\x51\xac\x23\xa3\x46\x96\xdc\x63\x39\x3f\x08\xbd\x7b\x91\x95\xa4\x59\xb4\x0d\x5d\x78\x61\x33\x9a\x6f\x66\xac\x18\x5f\x40\xa1\x36\x0e\xa1\x5a\xcc\xe8\x64\x58\x09\x2b\x78\x49\x89\xbf\x59\xdb\xc7\x08\x4d\xb7\x6a\x6d\xce\x90\x92\x88\x11\x86\x70\x9e\x25\xc9\x09\x9a\x37\x1a\x17\x48\xa9\x06\xc1\x19\xf9\xd3\x02\x31\xc2\x62\xcd\x80\x5e\x43\xf3\xdd\x9f\x20\xa5\x1d\x20\x51\x7e\x3c\xd5\x3c\x93\xd0\xa9\xcd\x9a\x3f\x62\x8d\x3b\xfa\xc3\x13\xa6\xa4\xf1\x37\xf1\xef\x56\x7b\xaf\x2e\x15\xa4\xc4\xd9\xe0\xdd\x12\xa0\xef\x97\x30\x85\x36\x46\x98\xc9\xb8\xa0\xa1\xfa\xf8\xb3\x82\xa6\x7b\xff\xba\x89\xfc\xfe\x47\x63\xfd\xd8\x85\x29\x88\x22\xdd\xe5\x16\xda\xa0\x55\x47\x69\x57\x7c\x60\x72\xd6\xf7\xb9\x66\xe9\xf4\xda\x42\x3e\xac\xc8\x1c\x91\x9a\xf7\x15\xe9\xf2\x2f\x87\x6c\xc0\x8c\xde\x8e\x7e\x68\xc1\x19\x0b\x91\x33\x46\x18\x56\x72\xf9\x75\xb7\xd9\x4d\xf2\x80\x5f\x88\x04\x12\xd5\x9c\x25\xce\x14\x6a\x24\x28\xe0\xe6\xb3\xf5\x0b\x8a\x9c\x44\xfb\xfb\xc7\x6f\x78\x0e\xa2\xde\xdc\x62\x04\xe3\x4c\x70\x78\xba\xed\xcf\x19\xcb\xc4\xf6\x26\xee\x06\xe9\xf2\xa0\x52\x29\xf2\x1a\x84\xb6\x32\x04\x74\x9b\xbc\xde\x5a\xb2\x3f\xa4\x7c\x12\x33\xe7\x2c\x17\xa0\x05\x39\xcf\xe8\x94\x28\x3b\x65\x50\xfe\x6d\x25\x4b\x29\x74\x75\x7f\xbd\x47\xca\x3e\xf5\xa7\xff\x1e\xe6\x2a\x28\x20\x67\x2c\x8f\xf1\x7e\x23\x7e\x05\x00\x00\xff\xff\x88\xd5\xd7\xbb\xd3\x02\x00\x00")

func golangGetAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetAllTmpl,
		"golang.get-all.tmpl",
	)
}

func golangGetAllTmpl() (*asset, error) {
	bytes, err := golangGetAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-all.tmpl", size: 723, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetCountTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x90\xb1\x4e\xc3\x30\x14\x45\x67\xfb\x2b\x1e\x91\x40\x89\x94\x5a\x0c\x88\xad\x03\x42\x6c\x2c\x25\x1f\x50\xb9\xcd\x73\x64\x9a\xd8\xe5\xc5\x0e\xad\x9e\xfc\xef\xc8\x46\x40\x17\xd4\xc1\x93\xef\x3d\xc7\xbe\xcc\x2b\xe8\xd1\x58\x87\x50\xcd\x76\x70\x3a\x44\xc2\x0a\x56\x29\xc9\x67\x1f\x5d\xd8\x32\x83\xea\xa2\x31\xf6\x04\x29\xd5\xcc\xb0\x0f\xa7\xa3\x26\x3d\x81\x7a\xa2\x61\x86\x94\x1a\xa8\xa5\xd8\xe7\x30\x58\x17\x1e\x1f\x5a\x40\xa2\x7c\x3c\x35\x32\xf3\xd1\xf5\x05\x28\x2f\x65\xd6\x2d\xfe\x70\xd5\xa4\x69\xf8\xf3\xfc\x0f\xdb\xf9\xfe\x5c\x41\x4a\xf9\x1d\x6e\x0e\xb0\xdd\xce\x61\x0a\x6b\x66\x38\x92\x75\xc1\x40\x75\xfb\x51\x81\xea\x36\xaf\x25\xe4\x77\xef\x6a\xf4\x43\x17\xa6\x50\x7f\x47\x5b\x60\x06\x63\x71\xec\x17\x3d\x46\xbc\x70\x4a\x91\x7f\xb3\x86\xdc\xe9\xc9\x2e\x48\x6a\x13\x91\xce\x6f\xfe\xf3\x5a\x57\x75\x7b\xed\xea\xbb\x32\x4d\x23\x85\x35\x65\x98\x9b\x35\x38\x3b\x02\x4b\x21\x08\x43\x24\x07\xf7\x6d\xa1\x4f\xfa\x80\x2f\x44\x35\x12\x35\x52\x24\x29\x7f\xee\x0b\xa0\xcd\x2d\xc9\xfc\x3b\xc0\x57\x00\x00\x00\xff\xff\x5f\x58\xb2\x23\xba\x01\x00\x00")

func golangGetCountTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetCountTmpl,
		"golang.get-count.tmpl",
	)
}

func golangGetCountTmpl() (*asset, error) {
	bytes, err := golangGetCountTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-count.tmpl", size: 442, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetFirstTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\xcf\x8a\xdb\x30\x10\x87\xcf\xd2\x53\x4c\x0c\x05\x1b\x12\x3f\x40\x8a\x0f\xa5\xb4\xa7\x52\x48\xfd\x00\x46\x89\x46\x46\x8d\x2d\xed\x8e\xe5\xfc\x41\xe8\xdd\x97\x71\xe2\x6c\x76\x61\x37\xb0\x07\x1f\x3c\xfc\xe6\xfb\xc6\x9e\x89\x71\x05\x1a\x8d\x75\x08\xd9\x60\x5b\xa7\xc2\x48\x98\xc1\x2a\x25\xf9\xdb\xd2\x10\x9a\x18\xa1\xac\x47\x63\xec\x09\x52\xca\x63\x84\x5d\x38\x3d\x29\x52\x3d\x94\x3f\xa8\x1d\x20\xa5\x02\x72\x29\x62\x84\x6b\xf5\x9f\x3f\x42\x4a\x4b\x40\x22\x7e\x3c\x15\x92\x25\xe8\xf4\x44\x95\xf7\x46\xeb\x0e\x7e\xff\x50\xa7\xa8\x7d\x95\x7d\x0c\xdb\x7a\x7d\xce\x20\x25\x29\x76\xde\x0d\x01\x9a\x66\x08\x7d\xa8\x78\x32\xb2\x2e\x18\xc8\xbe\x3d\x67\x50\xd6\x9b\x3f\x53\xc8\x6f\xff\x97\x9d\x6f\xeb\xd0\x87\xfc\x12\x5d\x42\x8c\x60\x2c\x76\xfa\xa0\xba\x11\xef\x9c\x52\x34\x0d\xf9\xe3\x70\xf9\xaa\x75\x05\xdc\xac\xc9\x1e\x90\xca\xcd\x88\x74\xfe\x8c\xc0\x00\x61\xcd\xd4\xba\xa8\xc0\xd9\x0e\xa2\x14\x82\x30\x8c\xe4\xf8\x75\x39\xe1\x7a\xb5\xc7\x5f\x44\x39\x12\x15\x52\x24\x29\x34\x1a\x24\xb8\x88\xcb\x9f\x9d\x1f\x30\xe7\x49\xac\x81\xc5\xb5\xf8\x17\x4f\x21\x2f\x26\xda\x95\xbf\xae\xe6\x06\x46\x15\xdf\xdf\x4b\x1f\x58\x59\xfb\x26\xe2\x6c\xc7\xb3\x4c\xfb\xb5\xce\x86\x79\xbd\x52\x30\xf8\x26\xab\x77\xca\xf1\xb2\x94\xd6\xe4\x0d\xe4\xa6\x53\x21\xa0\x9b\xd2\x05\x7c\xf1\x07\xc8\x39\xc1\x60\x3e\x81\xf9\xb2\x78\xa8\x18\x6f\x47\xf0\x12\x00\x00\xff\xff\x09\x96\x4b\xbc\xc3\x02\x00\x00")

func golangGetFirstTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetFirstTmpl,
		"golang.get-first.tmpl",
	)
}

func golangGetFirstTmpl() (*asset, error) {
	bytes, err := golangGetFirstTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-first.tmpl", size: 707, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetHasTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x90\x41\x4e\xf3\x30\x10\x85\xd7\xf6\x29\xe6\x8f\xf4\xa3\x44\x4a\x7d\x83\x2e\x58\x20\xb1\x60\x53\x72\x80\x6a\xda\x8c\x53\x53\xc7\x2e\x63\xa7\xb4\x1a\xf9\xee\x28\x41\x40\x37\xa8\x8b\xd9\xbd\xf7\x7d\x7a\x23\xb2\x82\x9e\xac\x0b\x04\x55\x72\x43\xc0\x3c\x31\x55\xb0\x2a\x45\x3f\x63\xda\x8a\x80\xe9\x26\x6b\xdd\x05\x4a\xa9\x45\x60\x9f\x2f\x27\x64\x1c\xc1\x3c\xf2\x90\xa0\x94\x06\x6a\xad\x0e\x98\x60\x17\xa3\x6f\x81\x98\xe7\x8b\xdc\xe8\x19\x4d\xa1\x5f\x58\xfa\xd6\xe3\xc2\x39\x1e\xef\x48\x90\x87\x5f\xc5\xdf\xa8\x5d\xec\xaf\x15\x94\xa2\xd5\x3e\x86\x94\x61\xbb\x4d\x79\xcc\x6b\x11\x38\xb1\x0b\xd9\x42\xf5\xff\xbd\x02\xd3\x6d\x5e\x96\x50\xdc\xbd\x19\x1f\x87\x2e\x8f\xb9\xfe\x8a\xb6\x20\x02\xd6\x91\xef\xcf\xe8\x27\xba\x71\x6a\x35\x6f\x59\xc3\xdc\xe9\xd9\x9d\x89\xcd\x66\x22\xbe\xbe\xc6\x8f\x7b\x5d\xd3\xed\x31\xd4\x0f\x07\x4c\x8d\x56\xce\x2e\x4f\xf9\xb7\x86\xe0\x3c\x88\x56\x8a\x29\x4f\x1c\xc0\xa2\x4f\xd4\x2e\xfc\x11\x8f\xf4\xc4\x5c\x13\x73\xa3\x55\xd1\xdf\x91\x03\xa6\x76\xae\x69\x91\x9f\xfd\x9f\x01\x00\x00\xff\xff\x86\x66\x84\xf6\xb2\x01\x00\x00")

func golangGetHasTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetHasTmpl,
		"golang.get-has.tmpl",
	)
}

func golangGetHasTmpl() (*asset, error) {
	bytes, err := golangGetHasTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-has.tmpl", size: 434, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetLastTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x90\xb1\x6e\xe3\x30\x0c\x86\x67\xe9\x29\x78\x06\x0e\xb0\x81\x44\xd3\xe1\xb6\x4c\x45\xb7\x2c\x49\xba\x07\x8a\x4d\x1b\x6a\x6c\xca\xa5\x99\x36\x29\xa1\x77\x2f\x14\x23\x85\x33\x08\x5a\xfe\x9f\xdf\x47\xaa\xae\xa1\xc1\x36\x10\x42\x31\x85\x8e\xbc\x5c\x18\x0b\x58\xa7\x64\x3b\x94\xad\x9f\x44\x15\xdc\x1e\xe5\xc2\xe4\xde\x6e\x23\x42\x4a\x65\x2d\x57\xa8\x23\x09\x5e\xc5\xbd\xcc\xff\xca\x9a\xf1\x0c\x81\xe4\xff\xbf\x0a\x4a\x6b\x54\x61\xf4\xec\x87\x47\x17\x52\x5a\x01\x32\xe7\x17\xb9\xb2\x99\x8b\xd4\xdc\x41\x76\x29\x71\x8a\xcd\x6d\xe6\x9b\x3a\xd2\x24\x70\x3c\x4e\x32\xc8\x26\x0f\xe4\x40\xd2\x42\xf1\xf7\xa3\x00\x77\xd8\x6d\x21\x87\xe2\xe9\xdd\xf5\xb1\x3b\xc8\x20\xe5\x1c\x5d\xc1\x78\xae\xec\x5d\x21\x50\x90\x85\x81\x35\xd9\x60\x03\xb9\xd3\x70\xf8\x44\x76\xbb\x0b\xf2\x6d\x1f\xbf\x96\x5d\x77\xa8\x3d\x95\xaa\xe0\x9b\x86\x63\x0b\x65\xdb\x7b\x11\xa4\xc7\xa4\x0a\x52\xaa\xac\x09\xed\x7d\xa1\x3f\x1b\xa0\xd0\x83\x5a\x63\x78\x06\xa9\xc2\x37\x72\x7c\x5a\x3d\x23\x07\x7f\xc6\x57\xe6\x12\x99\x2b\x6b\x92\x5d\xe4\x3d\x77\x4f\x71\x0a\xbd\x55\xfd\xbd\xd0\x4f\x00\x00\x00\xff\xff\xae\xa2\x4c\x4a\xa6\x01\x00\x00")

func golangGetLastTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetLastTmpl,
		"golang.get-last.tmpl",
	)
}

func golangGetLastTmpl() (*asset, error) {
	bytes, err := golangGetLastTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-last.tmpl", size: 422, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetLimitoffsetTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\xcf\x6a\xdc\x30\x10\xc6\xcf\xd2\x53\x4c\x0d\x05\x1b\x1c\x9f\x4a\x0f\x29\x3e\x94\xd2\x5b\x28\xa4\xfb\x00\x46\xb1\x46\xcb\x34\xb2\xb4\x1d\xcb\xbb\x1b\x54\xbd\x7b\x91\x94\x5d\x42\x28\xb4\xcd\x41\x20\x89\x8f\xef\xfb\xcd\x9f\x18\x6f\x40\xa3\x21\x87\xd0\xac\xb4\x77\x2a\x6c\x8c\x0d\xdc\xa4\x24\xef\x68\xa1\x80\x7a\x8a\x11\x86\xdd\x66\x0c\x9d\x21\xa5\x36\x46\x98\xc3\xf9\xa0\x58\x2d\x30\x7c\xe6\xfd\x9a\x52\x2f\x85\xcd\x5a\x20\x17\x7a\xf0\xc6\xac\x58\xee\x1f\x3f\x74\xd0\x4a\xc1\xfe\xb4\x42\x8c\xb0\x5a\x9a\xd1\x1b\x18\xbe\xfb\x13\xa4\xd4\x03\x32\xe7\xe3\xb9\x93\x19\x03\x9d\x2e\xb9\x52\xbe\x84\x22\x77\xf4\x8f\xff\x40\xa4\x78\x7f\xe5\x81\x82\x73\x41\x79\xe5\xfe\xd2\xfc\xc1\xeb\xa7\x06\x52\x92\x62\xf6\x6e\x0d\x30\x4d\x6b\x58\xc2\x18\x23\x1c\x98\x5c\x30\xd0\xbc\xff\xd9\xc0\xb0\xbb\xbf\x2b\x22\xff\xf0\x63\xb0\x7e\xbf\x0b\x4b\x68\xab\xb4\xcf\x85\x19\x42\xab\x8f\xca\x6e\x58\x09\xe0\x17\xcc\x7e\x59\x14\xa4\xf4\x0a\x44\x8a\x69\xca\xed\xa8\xb5\xdf\x8e\x90\x1d\x35\xd3\x11\x79\xb8\xdf\x90\x9f\xde\x66\x2b\xc8\x14\xc3\x77\x23\x38\xb2\x10\xa5\x10\x8c\x61\x63\x97\x9f\x7d\x09\x59\xd4\x23\x7e\x65\x6e\x91\xb9\x93\x22\x49\xa1\xd1\x20\x43\xc5\x19\xbe\x58\xbf\x62\x9b\xf9\x8c\xbf\x7e\x7e\xc3\x73\x68\xbb\xe2\x16\x23\x90\xa3\xe0\xf0\x74\x99\x9e\x14\x22\x27\x8e\x17\xf1\x6e\x56\x2e\x4f\x42\x69\xcd\xde\x40\x6b\xac\x0a\x01\x5d\x91\x77\x90\x52\x27\xc5\x1f\x28\xff\x82\x99\x39\xeb\xfa\x8c\xa0\x0e\x07\x74\xba\xad\xdd\xcb\x41\x79\xde\x95\xa5\x16\xf4\xec\x7e\x7b\x45\xca\x3e\xdd\xa7\xff\x6e\xcc\xb3\xa0\x06\x39\xb2\x32\xc6\xeb\xf2\xfc\x0e\x00\x00\xff\xff\x02\x3e\x63\xa0\x2e\x03\x00\x00")

func golangGetLimitoffsetTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetLimitoffsetTmpl,
		"golang.get-limitoffset.tmpl",
	)
}

func golangGetLimitoffsetTmpl() (*asset, error) {
	bytes, err := golangGetLimitoffsetTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-limitoffset.tmpl", size: 814, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetOneAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x93\xcd\x6a\xdc\x30\x10\x80\xcf\xd2\x53\x4c\x0c\x05\x19\x36\x7e\x80\x94\x3d\x94\x52\x7a\x69\x03\xc9\x3e\x80\x51\x56\x23\xa3\x46\x96\x9a\x91\xbc\x3f\x08\xbd\x7b\x91\xd6\x4e\xb6\x5d\xda\x2d\x39\xf8\x60\x79\xe6\xfb\x66\x34\xe3\x94\x6e\x41\xa1\x36\x0e\xa1\x09\x66\x70\x32\x4e\x84\x0d\xdc\xe6\xcc\xbf\x62\xec\x53\x82\x6e\x33\x69\x6d\x0e\x90\xb3\x48\x09\xb6\xf1\xf0\x53\x92\x1c\xa1\xfb\x44\x43\x80\x9c\x5b\x10\x9c\xa5\x04\xf3\xe9\xa3\xdf\x43\xce\x2b\x40\xa2\xf2\x78\x6a\x79\x51\xa0\x53\x95\xc9\xcf\x7d\xc6\xed\xfc\xf3\x15\x99\xa4\xe1\x4d\xf5\x77\xd4\x93\x57\xc7\x06\x72\xe6\x6c\xeb\x5d\x88\xd0\xf7\x21\x8e\x71\x5d\xea\x22\xe3\xa2\x86\xe6\xc3\x4b\x03\xdd\xe6\xe1\x5b\x0d\xf2\x4f\x3f\x3a\xeb\x87\x4d\x1c\xa3\x38\x85\xae\x20\x25\xd0\x06\xad\xda\x49\x3b\xe1\x99\x93\xb3\xbe\x27\xbf\x0f\xa7\x9e\xee\xd6\x50\x92\x15\x99\x1d\x52\xf7\x30\x21\x1d\xff\x45\x28\x00\x66\x74\x4d\xbd\x59\x83\x33\x16\x12\x67\x8c\x30\x4e\xe4\xca\xeb\xaa\xe2\x46\xf9\x8c\x5f\x88\x04\x12\xb5\x9c\x65\xce\x14\x6a\x24\x38\x89\xbb\xcf\xd6\x07\x14\xa5\x12\xa3\xe1\x66\x3e\xbc\xc7\x43\x14\x6d\xa5\xcd\xfc\xbb\xf5\x92\x50\x50\xed\xc7\x3f\xa5\x57\xac\x45\xfb\x5b\xc8\xf2\x39\xbc\xd8\x42\xbc\xf7\x8f\x7e\x1f\x6a\x79\x75\xe0\xc6\x99\xb8\xcc\x9b\xb3\xe2\x7a\xf5\x6f\xb6\xd2\x95\xf9\x49\xa5\xc8\x6b\x10\xda\xca\x18\xd1\xd5\xe8\x16\xde\x79\x27\x35\xe7\xb2\xf9\xf3\xb4\xe8\xfd\x77\xe9\x8e\xa5\x4e\x71\x31\xfa\x65\xb1\xde\x60\xff\x73\x69\xd7\xab\x9a\x23\x4a\xbb\x65\x57\x97\x1f\xc0\x19\xcb\x53\x7a\xdd\xd6\x5f\x01\x00\x00\xff\xff\xf3\x52\xc9\xaf\x68\x03\x00\x00")

func golangGetOneAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetOneAllTmpl,
		"golang.get-one-all.tmpl",
	)
}

func golangGetOneAllTmpl() (*asset, error) {
	bytes, err := golangGetOneAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-one-all.tmpl", size: 872, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetOneTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x90\x3d\x6e\xeb\x30\x10\x84\x6b\xf2\x14\xfb\x04\x3c\x40\x02\x6c\xdd\xc0\x45\x8a\x20\x4d\x1a\x5b\x07\x30\x68\x73\x29\x30\x96\xc8\x64\xb5\xf2\x4f\x16\xbc\x7b\x40\x26\x8e\xdd\x04\x2e\xd8\x10\x83\xef\xdb\x19\x91\x25\x58\x74\x3e\x20\x54\x93\xef\x83\xe1\x99\xb0\x82\x65\x4a\xfa\x05\x79\x2b\x02\x6d\x37\x3b\xe7\xcf\x90\x52\x2d\x02\x7b\x3e\xbf\x1b\x32\x23\xb4\x4f\xd4\x4f\x90\x52\x03\xb5\x56\x22\xf0\xf3\xbb\x89\x27\x48\x69\x01\x48\x94\x5f\xa4\x46\x67\x05\x06\x5b\x98\xfa\xde\xe7\xc3\x31\x1e\x1e\xc8\x0c\xf5\x37\xd5\xdf\xa8\x5d\xb4\x97\x0a\x52\xd2\x6a\x1f\xc3\xc4\xb0\xdd\x4e\x3c\xf2\x2a\xdf\x45\x3e\xb0\x83\xea\xff\x47\x05\x6d\xb7\x7e\x2d\xa1\xb8\x7b\x6b\x87\xd8\x77\x3c\x72\xfd\x1d\x5d\x80\x08\x38\x8f\x83\x3d\x9a\x61\xc6\x3b\x67\x69\xe7\x83\xe7\x6b\x39\xad\x72\xb9\x15\x64\x88\x25\x7f\x44\x6a\xd7\x33\xd2\x65\x13\x4f\x8f\x60\x6d\xb7\x37\x21\x37\x33\xd6\x52\x74\x50\xbb\xc1\x30\x63\x28\xe8\xa6\xe8\x94\x77\x65\xbc\x7f\x2b\x08\x7e\x00\xd1\x4a\x11\xf2\x4c\x21\x33\x3f\x91\xe2\x6d\xe3\x7c\xc0\x68\x0e\xf8\x4c\x54\x23\x51\xa3\x55\xd2\x77\xe1\x32\xdd\x35\x1b\xfc\xa0\x45\x7e\xc7\xfb\x0a\x00\x00\xff\xff\x65\x8f\x72\x77\xf7\x01\x00\x00")

func golangGetOneTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetOneTmpl,
		"golang.get-one.tmpl",
	)
}

func golangGetOneTmpl() (*asset, error) {
	bytes, err := golangGetOneTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-one.tmpl", size: 503, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetPagedTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x93\xdf\x8a\xdb\x3c\x10\xc5\xaf\xa5\xa7\x98\x4f\xf0\x81\x0d\x5e\xb3\xd7\x5b\x5c\x28\xa5\x77\x4b\xd9\x6d\x1e\x20\x68\xed\x91\x51\x63\x4b\xe9\x48\x4e\xb2\xa8\x7a\xf7\x22\xc9\xf9\x53\x5a\xda\xa5\x17\x81\xc4\x39\x9a\xf3\x3b\xc7\xa3\x10\xee\x60\x40\xa5\x0d\x82\x70\x7a\x34\xd2\x2f\x84\x02\xee\x62\xe4\x4f\x72\xc4\x61\x1b\x02\xb4\x9b\x45\x29\x7d\x82\x18\xab\x10\xa0\xf7\xa7\xbd\x24\x39\x43\xfb\x81\x46\x07\x31\x36\x9c\x4d\x7a\xd6\x1e\xb4\xf1\x0d\xf4\xde\xee\xd0\x80\xf3\xa4\xcd\x58\x43\xc5\x19\xd9\xa3\x83\x10\xc0\x4d\xba\x47\xab\xa0\xfd\x62\x8f\xe9\xd8\x2a\xb5\x8b\x5f\xd5\x0d\x20\x51\xfa\x58\xaa\x79\x02\x43\x33\x64\x12\x7e\x4b\xa9\xcd\xc1\xee\xfe\x8a\x28\x69\xbc\x02\x42\xe6\x3b\x1b\xfe\x61\xf6\x8b\x1d\x5e\x05\xc4\xc8\x99\x56\xe7\x24\x5d\x07\x42\x40\xe0\x8c\x9d\x1f\x80\xb8\x17\x9c\x45\xce\x59\x6f\x8d\xf3\xb0\xdd\x3a\x3f\xfb\x2e\x04\xd8\x93\x36\x5e\x81\xf8\xff\x9b\x80\x76\xf3\xfc\x98\x47\xd9\x97\xaf\xed\x64\xc7\x8d\x9f\x7d\x55\xa4\x4d\xaa\x43\x69\x9c\x86\x83\x9c\x16\x5c\x41\xbf\x43\x6f\xe7\x59\x42\x8c\xc5\x68\xc5\xae\x39\x67\xdb\x6d\x2a\xb1\xf4\xf3\xd0\x41\x9a\x38\x90\x3e\x20\xb5\xcf\x0b\xd2\xeb\x5b\xc6\xfe\x32\x35\x45\x4c\xf3\xfe\xeb\xc0\xe8\x29\x07\x24\xf4\x0b\x99\xf4\xb3\x01\x21\x9a\xec\x33\xcb\x1d\x7e\x22\xaa\x90\xa8\x4e\xa1\xd9\x80\x0a\x09\x0a\x51\xfb\x71\xb2\x0e\xab\x84\x18\x02\x68\xa3\xbd\xc1\x23\xb4\x8f\xd2\xf9\xa7\x5d\x0e\xaf\xec\x45\xfb\x19\x4f\xbe\xaa\xb3\xd1\xad\xb8\x6c\x03\x67\x2c\xc1\x74\x67\xf1\xa6\x97\x26\xbd\x4a\x39\x0c\x64\x15\x54\x6a\x92\xde\xa3\xc9\xf2\xfa\xa6\xaa\xab\xe4\xea\x5a\x73\xf6\x9b\x70\x6f\x48\x97\xe2\x95\x75\xed\x40\xee\xf7\x68\x86\xaa\xf4\x9e\x5c\xd2\x42\x15\xd6\xd2\xc3\xea\xf0\x70\x41\x4e\x73\xea\x77\xff\xd2\x69\x1e\x56\xee\xd0\x7b\xb8\xcf\xc7\xd2\x03\x34\xd9\xbe\x4e\x2b\x58\xfe\xcd\x39\xae\xd7\xa6\x03\x35\xfb\x76\x93\xb7\xae\x3a\x33\xfe\x54\x43\xe4\x2c\x02\x4e\x0e\x6f\x16\xb8\x9c\x2c\xdf\x8b\xfb\xca\x58\xb2\x5e\x44\x4d\x82\xe6\x21\x5c\xae\xca\x8f\x00\x00\x00\xff\xff\x80\x4d\xee\x52\x2c\x04\x00\x00")

func golangGetPagedTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetPagedTmpl,
		"golang.get-paged.tmpl",
	)
}

func golangGetPagedTmpl() (*asset, error) {
	bytes, err := golangGetPagedTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-paged.tmpl", size: 1068, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetScalarAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\xcd\x8a\xdb\x30\x10\x80\xcf\xd2\x53\xcc\x1a\x0a\x32\x64\xfd\x00\x5b\x7c\x28\xa5\x3d\xb5\x85\x8d\x1f\xc0\x28\xd1\xc8\xa8\xb1\xa5\x76\x2c\xe7\x07\xa1\x77\x2f\x52\xec\x24\x6d\x68\x53\xf6\xe0\x83\xc5\xcc\xf7\xcd\x5f\x08\xcf\xa0\x50\x1b\x8b\x50\x8c\xa6\xb3\xd2\x4f\x84\x05\x3c\xc7\xc8\x3f\x1b\xab\xda\x10\xa0\x6a\x26\xad\xcd\x11\x62\x14\x21\xc0\xd6\x1f\x7f\x48\x92\x03\x54\x1f\xa8\x1b\x21\xc6\x12\x04\x67\x21\xc0\xfc\xba\x76\x07\x88\x71\x05\x48\x94\x3e\x47\x25\x4f\x0e\xb4\x2a\x43\xf9\xad\xd0\xd8\xbd\xdb\x3d\xb2\x49\xea\xae\xae\xbf\xb3\x36\x4e\x9d\x0a\x88\x91\xb3\xad\xb3\xa3\x87\xb6\x1d\xfd\xe0\xeb\x54\x18\x19\xeb\x35\x14\xef\x7e\x16\x50\x35\xaf\x5f\x72\x90\xdb\x7c\xaf\x7a\xd7\x35\x7e\xf0\xe2\x1c\xba\x82\x10\x40\x1b\xec\xd5\x5e\xf6\x13\xde\x38\x39\x6b\x5b\x72\x87\xf1\xdc\xd4\x4b\x0d\x29\x59\x91\xd9\x23\x55\xaf\x13\xd2\xe9\x5f\x84\x04\x60\x46\xe7\xd4\xa7\x1a\xac\xe9\x21\x70\xc6\x08\xfd\x44\x36\xfd\xae\x32\x6e\x90\x3b\xfc\x44\x24\x90\xa8\xe4\x2c\x72\xa6\x50\x23\xc1\x59\x5c\x7d\xec\xdd\x88\x22\x55\x62\x34\x3c\xcd\x8f\xdf\xf0\xe8\x45\x99\x69\x33\xff\xa5\x5e\x12\x12\xaa\x7c\xff\xa7\xf4\x81\x35\x69\x7f\x0b\xb1\xa6\x4f\xb5\xe4\xf5\x1a\x6b\xfc\xb2\x5d\xce\x12\xf8\x22\x6b\xb6\xd2\xa6\x65\x49\xa5\xc8\x69\x10\xba\x97\xde\xa3\xcd\xd1\x25\xbc\x71\x00\x39\xe7\xbe\xd3\xdb\x34\xef\xdc\x57\x69\x4f\x6b\x77\x18\xc5\xdd\x9e\x97\x2b\xba\xc2\xfe\x67\x42\x8f\xab\x9a\x23\x52\xbb\xe9\x30\x97\x73\x4f\xa3\x0a\xe1\x72\x9a\xbf\x02\x00\x00\xff\xff\x50\x08\xa6\xc1\x57\x03\x00\x00")

func golangGetScalarAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetScalarAllTmpl,
		"golang.get-scalar-all.tmpl",
	)
}

func golangGetScalarAllTmpl() (*asset, error) {
	bytes, err := golangGetScalarAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-scalar-all.tmpl", size: 855, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetScalarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x90\x3d\x6e\xe3\x30\x10\x85\x6b\xf2\x14\xb3\x02\x16\x90\x00\x9b\x37\x50\xb1\x85\xb7\x5a\x2c\x60\xeb\x00\x06\x6d\x0e\x05\xc6\x12\x19\x8f\x28\xff\x64\xc0\xbb\x07\x64\x12\xdb\x4d\xe2\x82\x0d\x31\xf3\x7d\xf3\x1e\xf3\x12\x0c\x5a\xe7\x11\xaa\xc9\xf5\x5e\xc7\x99\xb0\x82\x65\x4a\xf2\xaf\xf3\x66\xcb\x0c\xaa\x9b\xad\x75\x17\x48\xa9\x66\x86\x7d\xbc\xbc\x6a\xd2\x23\xa8\x3f\xd4\x4f\x90\x52\x03\xb5\x14\xcc\xf0\xf9\xbb\x09\x67\x48\x69\x01\x48\x94\x5f\xa0\x46\x66\x07\x7a\x53\xa0\xf2\x51\xe8\xfc\x29\x1c\x9e\xd9\x34\xf5\x77\xd7\xf7\xac\x5d\x30\xd7\x0a\x52\x92\x62\x1f\xfc\x14\x61\xbb\x9d\xe2\x18\xdb\x7c\x18\x39\x1f\x2d\x54\xbf\x8f\x15\xa8\x6e\xfd\xaf\x0c\x85\xdd\x8b\x1a\x42\xdf\xc5\x31\xd6\x1f\xa3\x0b\x60\x06\xeb\x70\x30\x27\x3d\xcc\xf8\xe0\x2c\xf1\x9c\x77\xf1\x2b\x9d\x14\x39\x5d\x0b\x19\x62\xc8\x9d\x90\xd4\x7a\x46\xba\x6e\xc2\xf9\x19\x4c\x75\x7b\xed\x73\x32\x6d\x0c\x05\x0b\xb5\x1d\x74\x8c\xe8\x0b\xba\x29\x3a\xe1\x6c\x69\xaf\x6d\x61\x3a\x0e\x6a\x45\xf4\x3f\x6c\xc2\x79\x02\x96\x42\x10\xc6\x99\x7c\xa6\xbf\x21\x85\x7b\xdd\xde\x0d\x52\xa4\xdb\xee\xaf\x36\xff\xfc\xb8\x91\x8f\x1f\xf5\x01\x57\x44\x35\x12\x35\x65\xfd\x3e\x5c\x6a\x7f\xa4\x33\xdf\x8a\x7f\x0f\x00\x00\xff\xff\xc7\xa0\xa7\x80\x35\x02\x00\x00")

func golangGetScalarTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetScalarTmpl,
		"golang.get-scalar.tmpl",
	)
}

func golangGetScalarTmpl() (*asset, error) {
	bytes, err := golangGetScalarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-scalar.tmpl", size: 565, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x59\x61\x6f\xe3\xb8\xd1\xfe\x2c\xfd\x8a\x59\xbf\xbb\x0b\x29\xf0\x32\xf7\xe2\x8a\x02\xf5\x21\x05\x36\x71\xb6\x0d\x9a\x4d\xf6\x12\xe7\x0e\xc5\xdd\xc1\x47\x4b\x94\x57\x17\x99\x74\x48\xca\x56\xea\xea\xbf\x17\x43\x52\x12\x25\xdb\xd9\xdd\x36\x1f\x12\x8a\x9c\x19\xce\x3c\x33\x9c\x19\x32\xbb\xdd\x3b\x78\x2d\xd6\x3a\x17\x5c\xc1\xe4\x0c\xc8\xad\x1b\xbf\xab\xeb\x30\x3c\x3d\x85\xf7\x0f\xb3\xdb\xbf\x5d\xde\x5c\xde\xbd\x9f\x5d\x4e\xe1\xfc\x9f\xb0\x14\xeb\xc7\x25\xc9\xf9\xa9\x5a\xd3\x84\xad\x04\x7f\x64\xcf\x4b\x71\x9a\x2e\x2a\xb2\xf9\x7f\xe4\x98\xde\xc2\xcd\xed\x0c\x2e\xa7\x57\x33\x12\x86\x6b\x9a\x3c\xd2\x25\x83\xdd\x0e\xc8\x27\x37\x46\xd1\xf9\x6a\x2d\xa4\x86\x28\x0c\x46\x8b\x67\xcd\xd4\x28\x0c\x46\x89\xe0\x9a\x55\x1a\x87\x29\xd5\x74\x41\x15\x3b\x55\x4f\x05\x7e\x33\x29\x85\x34\x44\xd9\xca\x10\x48\x96\x15\x2c\x71\xc3\x25\xab\xd6\x38\x52\x5a\x26\x82\x6f\xdc\x30\xe7\x4b\xc3\xa1\xf3\x15\xc3\xbf\x25\xcf\x13\x91\x9a\xa1\x7a\xe6\xc9\x28\x0c\xd1\x7a\x49\xf9\x92\x01\xb9\xac\xb4\xa4\x57\x46\x29\x85\x0a\x06\xa8\x30\x0e\x90\x86\xf1\x14\x87\xb1\x41\xe4\x93\x64\x1b\xc6\x35\x24\x82\xa7\x39\x82\x45\x0b\xc8\x1d\x63\x26\xc5\x0a\x12\x5a\xaa\x9c\x2f\x61\x51\xe6\x45\x0a\x19\xcd\x8b\x52\x32\x15\x6e\xa8\x84\x39\x9c\x81\x53\x92\x5c\x69\x41\xfd\x49\x54\x97\x5c\x53\xa5\xaf\x78\xca\xaa\x76\x25\x5b\x69\x72\xbf\x96\x39\xd7\x6e\x0a\x75\x27\x1f\x4b\xcd\xaa\xd0\xcc\x44\x61\xf0\xb3\xa4\xeb\x4b\x29\x91\xba\xe4\x49\xc4\xa4\x84\x93\x4b\x44\x2c\x06\x03\x1c\xec\x24\xd3\xa5\xe4\xf8\x55\x87\xc1\xb5\x58\x2e\x99\xb4\xb4\x99\x90\x2b\xaa\xdd\xfe\x63\xa0\x72\xa9\x80\x10\x92\x73\xcd\x64\x46\x13\xb6\xab\xe3\x30\x0c\x98\x94\x33\x21\x3e\x52\xfe\x7c\x27\xb6\x0a\xce\xac\x58\x45\x6e\xd8\x36\x1a\x69\x21\x60\x45\xf9\x33\x48\xb1\x55\xa3\xd8\x50\x3f\x70\x55\xae\x11\x13\x96\x4e\x65\xbe\x61\x72\xc0\x53\x76\xeb\x90\x1a\x02\xc7\x78\xb9\x5a\xeb\xe7\x87\x75\x4a\x35\x1b\xb0\x30\x5c\x81\xd2\x2c\x8d\x62\x74\x06\x1a\x00\x85\x58\x1a\x53\xbf\xc6\x12\xd8\x85\x41\x9e\x81\xb3\xff\xd5\x19\xf0\xbc\xc0\x39\x87\x88\x13\x61\x79\x09\x21\x71\x18\xd4\x61\x1d\x86\xfa\x79\xcd\xc0\x6c\x72\x21\x52\x06\xe8\x8a\x30\x11\x5c\x99\xf0\x6d\xe7\xe7\x0f\xfc\x91\x8b\x2d\xf7\x28\xcf\x20\x17\x9a\xf6\x69\x06\xb8\xf8\x8b\x37\x02\xd1\xf5\x67\x66\xd5\x54\x70\xd6\x9b\xe9\xdc\xe0\x4f\x5f\xa0\x3a\x92\xe6\x5c\xff\x94\x8b\x82\x62\x58\xfa\xcb\x1e\xaa\x08\x5c\x67\x10\xc2\x55\x26\x1a\x41\xc0\x00\x32\x78\x87\x81\x51\xbe\xe5\x0e\x03\xe7\x42\x0b\x2d\x2e\x37\x9b\xb5\x53\x3f\x96\x4c\x3e\xdf\x97\x59\x96\x57\xcd\x5c\xed\x1c\x14\xb1\x36\x18\xad\xa3\x62\x47\x81\x9b\x36\x71\x49\x2e\xa5\x24\x6e\xb9\xe5\xdc\xda\xb0\xf6\x04\xb8\x68\x36\x5e\x6c\x83\xbe\x73\x63\x23\x0d\xfd\xd6\x7c\xfc\xdc\x08\xe9\xe4\xae\xe8\x23\x33\x53\x8d\xc5\x7d\xc1\xec\xa0\x50\x9e\x17\x46\x2c\xc3\x34\xf9\xd6\xe8\xb3\xbb\x94\x72\xe2\xce\x94\xda\xe6\x3a\xf9\x6c\x78\x77\x61\x90\x50\xc5\x40\x3d\x15\x68\x92\xf5\xea\x24\x0c\x02\x46\x5c\x54\xec\xbb\xdc\x67\xb0\x4e\x3f\xc2\xd0\x44\x44\x67\xe0\x76\xdf\xc0\x72\x18\x65\x51\xea\x7b\xd0\x33\x77\x20\xc3\xd9\x15\x06\x41\x63\xda\x5e\xc0\x8e\xc3\xc0\xc4\xc7\x04\x5e\x88\x6a\x24\xb2\xa3\x89\x3b\xde\xe3\x30\xa8\x3b\x05\x59\x17\x8f\xd1\xb7\x68\xe3\xc5\xf1\x21\x3d\xfa\xcb\xde\x7e\xba\x3b\x35\xd1\x13\x86\xea\x5c\xf9\xb1\xfa\x2d\x2a\x78\x07\xf0\x90\x0a\x83\x65\xef\x5c\x4c\xc0\xdf\xb9\xaf\x5f\xb2\x7f\x7c\xbb\xe8\x1c\x7b\xcb\xff\x85\xc2\x87\xb4\x3c\x90\x2e\x2c\x59\x33\x3d\xf1\xf6\x6c\x55\x35\x69\xc3\x45\x52\x9b\x56\x4d\xea\xa8\x58\x62\x71\x7d\x39\xfd\x46\x18\xe1\x77\x4c\x95\x85\x1e\xbb\x93\xe7\x52\xc7\x57\x71\x9f\x18\x76\x44\xb6\xcf\x7c\x27\xb6\x5f\xc3\xdf\xb0\xa3\x29\xae\x70\x72\xa1\xdf\x7f\x12\x86\x6a\x50\x6d\x52\xa6\x74\xce\x0d\x32\xc0\x85\x06\x0a\x6b\x4b\x87\x75\xaa\x10\x4a\x3d\x5f\x08\xbe\x61\x52\x21\x41\x9f\xd5\xac\x22\x7e\x6e\xd9\x16\x2b\x03\xde\xf4\xdc\x4b\xb8\x46\x9f\xe9\x79\x18\xa4\x8b\x8f\x4c\x7f\x16\xa9\x0a\xc3\xe0\xef\x42\x3c\x2a\x8f\x28\xb8\x11\x5b\x5b\xa9\x63\xc0\x46\x86\xcc\xf2\x15\x73\x75\xc9\x84\xce\xed\x9a\x71\x77\xbc\xc7\xa0\x44\x29\x13\xd6\x06\x49\x94\x2e\xe0\x64\x7a\x6e\xe0\x6a\x32\xdd\x2e\x0c\xd4\x53\x31\x4f\x17\x76\x76\x72\x66\xd2\xce\x01\x29\x71\x9b\x0c\x5f\x1d\x4a\x86\x63\x3f\x8d\x9a\x4a\x19\xa4\x2c\x6b\xda\x0a\xbb\x05\x38\x13\xcd\xae\x07\xa4\x39\x4d\xc8\x45\x21\x14\x8b\xe2\x30\x40\x29\xb5\x63\xc6\xbe\xc3\xb1\x58\x25\x91\xf2\x53\xce\x97\x51\xfc\xc3\xb7\xa8\x85\xf8\xc2\x19\xbc\x9d\x9e\x23\xe5\xf4\x7c\xe2\x64\x8d\xad\xce\x0b\x62\x20\x27\x88\xf3\x99\x85\xf8\x46\x6c\xc3\x36\xa3\xbb\x78\xdf\xf9\xcd\xe2\x34\xa7\xd8\x7c\xda\x46\xd1\xa4\x6e\xec\x16\x6f\xe8\x8a\xc1\xbf\xc1\xf4\x6a\x19\x8c\xde\x3c\x8d\xa0\xae\x31\x8d\xa7\x0b\xd2\xba\x18\xce\x80\xb3\x6d\x4b\x5e\xd7\x11\x5a\xda\x6b\x44\x59\x72\xcb\xd1\x1f\x46\x3a\x42\x30\x1f\xc3\x00\x06\x73\xe0\x76\xbb\xde\x5e\xd8\xad\xee\x23\xd3\x83\x26\x5d\x90\x3e\x3a\x41\xaf\xbf\xf5\x86\xe8\x4b\x5a\x16\x7a\x32\x00\xf7\x58\x65\x71\x48\x3b\x52\x0c\x2e\xac\x97\x6d\x0b\x20\x16\x7f\x60\x20\xc6\xe0\x3c\x0d\x51\x3f\x22\x1d\x9f\x58\xfc\xd1\x2a\x88\xe3\xe9\x79\x13\x1a\xf1\x01\x59\x26\x66\x13\x5d\x81\xbb\x37\x90\x0b\xfb\x17\x33\xc5\xac\x1a\x7b\xe2\x75\xd5\x06\xbb\x13\x7b\xce\x96\x39\x8f\xbe\x18\xe2\xbe\x42\x5d\x3c\x39\x8a\xb7\xb3\x0a\xe9\x75\x35\x01\x8d\xf9\x3c\xd0\x95\x73\xf2\xc4\x30\x62\x4a\x9e\x55\x91\xae\x62\x0c\xb5\x06\x91\xdd\x0e\xf2\xac\xbd\x73\x91\x7b\x0b\xe7\x5d\x85\xa8\x0f\x0c\xbc\x61\xdb\xbb\x2a\x8a\xe1\xe4\xae\xf2\x40\x7a\x7b\x57\xed\xd2\x85\xd9\xa2\xb6\xf2\x9c\xcf\x0c\xf7\x94\x15\x4c\xb3\xf7\x45\x71\x08\x19\x8c\x00\x2b\x3a\xca\xb9\xfe\xf3\x9f\x8e\x60\x94\x2e\x48\x83\xed\x4b\x08\x7d\x67\x18\x86\x27\xbf\x77\xd6\xbd\x36\x2a\x30\xdf\x7e\x08\xea\x8a\x5c\x88\xd5\x2a\xd7\xe8\xde\x36\x52\x4d\x50\xb6\x12\xe6\x52\x14\xc5\x82\x26\x8f\xa8\x97\xae\xc8\x9d\xfb\x74\x39\xa0\x5b\xf6\x43\xbe\xbd\x12\x8c\x52\x83\xc6\x3b\x5a\x14\x13\x68\x49\xf1\x46\xc6\xd2\x09\xbc\xd9\x8c\x86\x47\xa2\x95\x17\xb7\xc9\x28\x6e\x81\xd7\x15\x49\x7d\x74\xbb\x9a\x38\xab\xbc\x8c\xad\x2b\x9b\xf6\x66\x55\xd8\x45\x44\x57\x3e\x6d\xea\x38\xc6\xd1\x46\x39\xce\xb5\xb4\x31\x34\x40\x1d\x39\x38\x1e\xa4\x3d\x54\x8f\x89\xeb\x60\xfc\x2a\x81\x1d\xb9\x11\x79\x24\x13\x9a\xf9\xd7\xe9\xc2\xd8\x39\x39\xdb\x4f\x88\x6a\x7a\x3e\x32\x0f\x0b\x86\x50\x57\xc7\x09\x67\x95\x47\x98\xaf\xd6\xc5\x71\xd2\xab\xd5\xba\x18\x99\xed\x0d\xcd\x6e\xe7\x31\xd4\xb5\x87\x72\xba\x00\xfc\x39\x31\x15\xd7\x26\x75\xfb\x67\x90\x5a\x06\x12\x62\xbc\x61\xde\xeb\x95\x8e\x94\x5e\xf5\xaf\x97\x84\x10\x18\x5e\x2f\xbd\xcc\x7e\xed\xf1\x79\x77\xca\x2f\xec\xf6\xd2\xe5\xc4\xeb\xc9\x40\x3c\x36\xe9\x2c\x57\x5d\xdf\x66\xe3\xde\xa6\xaa\x3c\x43\x22\xef\xc0\x1e\xe9\x32\xfd\xfe\x32\xf6\x6f\x16\xbd\xcc\xe7\x03\xec\x7c\x3c\x84\xd7\x40\x3b\xb4\xa8\xb5\x77\xaf\xec\xd9\x4c\x74\xd2\x17\xe8\xe5\xb9\xde\xc2\xce\xd4\xd1\x09\x98\xba\x1d\x0c\xf6\x98\x58\x62\x6f\xc6\xe4\x01\xa4\xc7\x1f\xcb\xe3\x9c\x8e\x22\xc8\xf4\x1c\x67\xea\xb1\xdf\x48\x75\xfe\x68\x37\x8d\xe1\x3e\xf9\xcc\x56\xf4\xd0\x95\xf5\x77\x34\xc6\x2e\xdf\xff\x78\x0d\x75\xfd\xfb\xcb\x92\xda\x6a\xd0\x9c\xf5\x18\xda\xec\x30\xb4\xda\x1d\x0d\x67\x75\x73\x6c\x27\x5d\xf2\xd8\xd9\xa2\x53\x7f\x3b\x16\x18\x30\x03\x3c\x6c\xf1\x6a\xc1\x68\xbd\xdc\x6a\xe1\x7b\xb9\xd1\xe0\x05\x47\x1f\x39\x02\x5f\x7c\x99\x39\x3d\x85\xd9\xed\xf4\x76\x02\x92\xf1\x94\x49\x58\x17\x34\x61\x9f\x45\x91\x32\xa9\x8e\xbc\xdb\x88\x52\xe3\x29\xe8\xde\xc8\xb2\x68\x84\x7b\x4d\xe0\x8d\xfa\x95\xe3\x46\x98\xe6\x7f\xe5\xa3\x31\xd8\x53\xb8\x96\x4c\xeb\xe7\x08\x57\x4c\x8a\x77\x0f\x3f\xa2\xd4\xcd\x63\x8f\xd7\x04\x59\x28\x2c\x0b\xfc\xf2\x9b\xa7\x6f\xe3\xe8\xb5\x5b\x8d\xe1\x83\x79\x3a\x8a\x32\xab\x8b\xc6\x1b\x28\x24\x20\x4b\xce\x8c\x6d\x38\xfb\xc1\x68\x18\x65\x63\x18\xfd\x32\x8a\x43\xce\x2a\xbd\xa1\xc5\x24\x0c\x32\x21\x21\x1f\xc3\x86\x16\x68\x8c\xcd\xac\xeb\xa6\x8c\xe6\xf0\x57\xf8\xce\xd6\xb5\x81\x90\x31\x8c\x5c\x95\x0a\xe4\xc6\x70\xda\x37\x51\xf2\x13\x2d\x4a\x76\x9b\x45\x1b\x5a\xc4\x56\x88\xdc\x90\x7f\xe4\x3c\x8d\x62\xac\xc8\x0d\xd9\x27\x2d\xad\x5c\x4b\x70\xa5\x6e\xf2\xc2\x95\xef\xbd\xbd\x6e\x1e\xae\xaf\xcd\x6e\x01\x26\x21\x9d\xf3\x92\xe1\x47\x0d\xf8\x1b\x15\x3f\x43\x11\x97\x05\x5b\x45\x31\xb9\x6a\x80\x6a\x5a\xfa\xa6\x97\x36\x5a\x6e\x68\x41\x22\x44\xd6\x6e\x65\x5f\x3e\x4c\x68\x4c\xfa\x46\x66\x66\xe7\x37\x4f\xa3\x31\x6c\xe2\x86\xb2\xbd\x03\x1d\x26\x56\x48\x4c\x9c\x33\x0c\xed\xdd\x87\x8b\xef\xbf\xff\xfe\x2f\x37\x94\x8b\xb8\x95\xf2\xcb\x6f\x8b\x67\xed\x44\x08\x89\x0d\xf6\xa2\x83\x7e\xe3\x20\xc8\x33\x78\xe5\xde\x8c\xc9\x95\xfa\x64\xb0\x40\x87\x46\x8b\xb8\x41\x69\x5f\x81\xff\xab\x1a\x75\x3d\xa8\xc0\xf9\xda\xcc\xd6\x61\xf3\xeb\xb8\xa9\x5e\xf7\xbd\x4f\xb5\x69\xa8\x6a\x93\xac\x07\x9e\xfa\x6d\xe4\x6a\x74\x53\xa2\xef\xcd\xe1\x55\x4d\x83\xff\xda\x1d\xe6\xb6\x98\xb6\x75\x36\x91\x8c\x6a\xe6\x2d\x5f\x98\x09\xcb\xdf\x27\xb5\xaf\xb0\x1e\xa9\x7d\x74\xf1\x48\x7b\x05\xd9\x11\xfa\x99\xc4\xeb\x21\x3e\xe4\xac\x48\xbb\x47\x77\xc7\x6e\xd2\xc8\xcc\xa5\x96\xc1\x25\xe5\x40\x03\xfd\xa0\x98\x4c\xa9\xa6\x66\xe3\xa0\x74\x5f\xf3\x55\xe9\xbf\x97\xb7\xf3\x98\x09\xfd\xe3\xec\xe4\x7b\x49\x2c\xea\xe9\x1d\xc3\x7c\x46\x17\x05\xf3\x0a\x01\xb8\x84\x3d\x32\x7a\xe2\x22\xd4\xf5\x08\x5c\x06\xc9\xb3\xe6\x5f\x29\xb4\xb8\xe2\x8a\x49\xdd\x59\xd9\xe1\xd2\x43\xfc\x08\x3a\xc7\xa4\xec\x61\xd5\x07\xdf\x43\xec\x50\x52\xc3\xdd\x7b\x4e\x3c\xb2\xbb\xf1\x2b\x1a\xf7\x3f\x6c\xbc\xe7\x66\x13\x42\x99\x17\x3d\xfb\x12\x5e\x27\x5a\x98\xbb\x48\xd7\xe8\xcd\xdf\xa8\x11\x90\x8f\x22\x65\x85\xa1\x24\xfb\x71\x96\x1d\x30\x26\x98\x2b\xa6\x61\x21\x44\x11\x06\xf3\x0d\x66\xc6\x5e\x64\x79\x45\xcb\xee\x59\xd7\xd1\xc6\x50\x5c\x68\x21\x4d\x26\x35\xfe\x1f\x88\xdf\xb5\x5e\xfe\x58\x62\xb2\xff\x60\x6f\xeb\x1b\x38\x33\xbc\xde\x64\xb4\x89\x7b\x17\x6b\x17\x36\x7d\x79\x3b\x40\x2d\x27\xa0\x65\xc9\xc6\x60\xd5\x9c\x80\xbd\x2a\x92\x19\x7d\x64\xef\xd3\x14\x55\x7b\xdb\xde\xf6\x36\x50\xb7\x97\x49\x72\x53\x16\x85\x8b\xc0\x3d\x6b\xe6\x77\x74\xeb\x2c\x9a\x35\xbd\xc8\x9e\x31\x98\xeb\x36\x07\x1e\xbd\x7d\x39\xb8\x49\xd4\xeb\x0f\x7d\xcc\xf6\x75\x3d\xe9\x74\x8d\x0f\xc1\xec\x04\x1e\x50\xe6\x8b\x10\x41\xff\xe2\xeb\x4e\x6c\x36\xe0\x88\xc1\xe0\x18\xc5\xfe\x51\x07\xa3\xe7\xab\x8c\x98\xb0\x68\x4f\x31\xda\x5d\xff\xd0\x7c\x65\xc4\x45\x4a\x2f\x1b\xf8\x92\xe7\x17\xa2\x28\x57\xfc\x58\x3e\xb0\xab\x7e\x42\x40\x55\xdf\xf5\x8f\x47\xf3\x34\xfd\x30\xbb\x88\x74\x57\xd8\xbc\x77\x3e\x0f\x0c\x4d\x90\xcc\x7f\xd1\x9e\x52\xcd\x5e\xe0\x3b\x3d\x85\x47\xc6\xd6\x50\xae\x41\x7f\x66\xb0\xca\x79\xa9\x19\x60\xaa\xcc\x05\x07\x25\x40\x7f\xa6\x1a\xb4\xa4\x5c\xd9\xab\x80\x82\x05\xd3\x5b\xc6\xb8\x91\xf3\x2f\xc1\x99\x82\x6d\x5e\x14\x46\x54\x5b\xc9\xb4\x68\xfa\x07\x58\x4b\xb1\x66\xb2\x78\x26\x9e\x92\x33\x59\xf2\xc4\x28\x86\xba\x7c\x34\x9b\x1a\xa5\x4f\x4f\xb1\x19\xc2\x59\x70\x2f\x48\x80\x95\xd7\xfc\x8f\x14\xf1\x53\x4f\x05\x28\x3c\x34\x2b\xc6\xb5\x32\xf5\x8b\xdc\xff\x78\xed\xb2\xbb\x81\xeb\x3f\x01\x00\x00\xff\xff\xed\xfd\x7b\xf6\xac\x1e\x00\x00")

func golangHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangHeaderTmpl,
		"golang.header.tmpl",
	)
}

func golangHeaderTmpl() (*asset, error) {
	bytes, err := golangHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.header.tmpl", size: 7852, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangMiscTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8e\xc1\xca\x83\x30\x10\x84\xcf\xbf\x4f\x31\x04\xff\x5b\xf5\x01\x84\x5e\x7b\x29\xf4\x24\x3d\x1b\xea\x2a\x01\x1b\xac\x89\x07\xd9\xee\xbb\x97\x35\x25\x2d\xf4\x36\x99\xf9\x66\xb2\xcc\x15\x7a\x1a\x9c\x27\x98\x10\x97\xf5\x16\x0d\x44\x8a\xb8\xcd\x04\x66\xd4\x17\x7b\x27\x88\x20\x65\xe0\x82\x19\x8b\xf5\x23\xa1\x3e\x39\x9a\xfa\xa0\xf4\x1f\x33\xdc\x90\xe1\xef\x1e\x33\xc8\xf7\x6f\xb3\xd5\xd5\x5d\x2a\xdd\xda\x31\xa0\xd2\x7a\x97\x47\x4b\x77\x40\x19\xd1\x1c\x3f\x71\xa2\x4b\xf7\xb3\x76\xa6\x0d\x22\x8d\xca\xab\x9d\x56\xc2\x13\xf3\xe2\x7c\x1c\x60\xfe\x1f\x26\x41\x89\xee\xf4\xc2\x6a\x7f\xe8\x7f\xd9\x2f\xb2\x56\xfb\x15\x00\x00\xff\xff\x8e\x34\xcf\xa7\x0b\x01\x00\x00")

func golangMiscTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangMiscTmpl,
		"golang.misc.tmpl",
	)
}

func golangMiscTmpl() (*asset, error) {
	bytes, err := golangMiscTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.misc.tmpl", size: 267, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x55\xc1\x6e\xe3\x36\x10\x3d\x4b\x5f\x31\x15\x50\x80\x42\x1c\xa2\xe8\x71\x01\x1d\x82\x6d\xda\x06\x48\x8d\x24\xee\xf6\xb2\x58\x08\xb4\x34\x12\x98\x48\xa4\x4c\x52\x76\x02\x41\xff\x5e\x0c\x29\x3b\xf2\xda\x49\x8a\xf6\xd2\x83\x0f\x32\x67\xde\xbc\x99\x37\x7c\x1c\x86\x4b\x28\xb1\x92\x0a\x21\xb1\xb2\x56\xc2\xf5\x06\x13\xb8\x1c\xc7\xf8\x4b\x57\x0a\x87\xf9\x30\x00\x5f\xf5\x55\x25\x9f\x61\x1c\xd9\x30\x40\xe1\x9e\x3b\x61\x44\x0b\xfc\xca\xd4\x16\xc6\x71\x11\x47\xbd\x8f\x05\x1f\xeb\x4c\x5f\x38\x1e\xb2\xc3\xc7\x52\xb4\x08\xe3\x98\x02\x8b\xa3\x61\x80\x29\xfb\x01\x5d\x6f\x14\xe5\x03\x1a\x43\x3f\x6d\xd2\x98\x08\xa1\x2a\x3d\x83\x78\xce\x4e\xaa\xad\x7e\xfa\x98\x9a\x30\xf5\x2b\x31\x08\xbc\xde\x41\x5d\xeb\xf2\x25\x60\x46\x85\x56\xd6\x41\x9e\x5b\xd7\xba\xbc\x33\x58\xc9\xe7\x8c\xd8\x1a\xa9\x5c\x05\xc9\x8f\x9b\x04\xf8\xea\xfe\xf6\xce\x9f\xc0\x49\x86\xf5\x44\xce\x65\x1c\x28\xc6\x71\xb4\x15\x06\x36\x16\xbe\x7e\x5b\xbf\x38\x0c\x9f\x5b\xd1\xf4\x48\x7f\x49\xe5\xd0\x54\xa2\xc0\x81\x22\x87\x01\x64\x05\xfc\x4e\x5b\xe9\xa4\x56\xa2\xb9\x32\x75\xdf\xa2\x72\xd6\xd7\x7e\x84\x4f\x19\xcd\xbb\x41\x75\xe8\x97\xf0\x3c\x56\x06\xa2\xeb\x50\x95\x2c\x7c\x2f\x28\xb0\x92\xd8\x94\xfe\xfb\x10\x9f\xfa\x2a\x87\xb9\x44\xa2\x2c\xf7\x45\x08\xbd\xea\x55\xc1\x14\x69\x67\x9d\x91\xaa\x4e\x61\x88\xa3\x68\x33\x83\xdf\xd8\x05\x50\x00\xe7\x3c\x8d\xa3\x88\x06\xfb\x1e\xe7\xe8\xf1\xe2\xe2\x0c\x42\x02\xbe\x13\xbe\x0f\x3e\x4c\x38\x99\x70\xbf\x4f\xb0\xce\x14\x5a\x6d\xf9\x8d\xd3\x82\x3d\xa6\x6f\x44\x25\x0b\x48\x66\xc4\xb0\xb1\x18\x58\xfc\xe3\xfa\xdf\x01\xa8\xd2\xe7\x8f\x71\x94\x13\xc0\xeb\xb0\x82\x5a\x46\xa8\x1a\x8f\xf7\x5f\xac\x1b\xfc\x95\xe6\x1e\xfa\x97\xd5\xb4\x90\x9c\xca\x4d\xb7\x82\xe7\x16\x9d\x9f\xec\x0c\x91\x25\x14\xf1\x59\x37\x7d\x4b\x37\x24\x21\x0e\x6f\x69\x7b\x06\xd2\x1f\xb1\x34\xf5\x64\x27\x89\xc7\xb0\x54\x41\xa1\x25\x62\x69\x97\x7a\xe7\x69\xe5\xb9\xd2\x3b\x12\x5c\xaf\x1f\x79\xb9\xe6\xbf\x6b\xfd\x64\xf9\x52\xef\x58\xca\xbf\xfc\xf9\x99\x1d\xaf\xc9\xac\xd5\xab\xde\xe9\x59\x7b\x27\xfc\x27\x3a\xc4\xfe\x9d\xc5\xe4\x37\x4a\xba\xbf\x44\x73\xb4\x90\xe3\xeb\x15\x50\xda\x9d\x94\x92\x15\x2d\x3e\xdb\xd8\x14\xb2\x0c\x7e\xf2\xe3\x33\xc1\x4f\x94\x6c\x16\x80\x6d\xe7\x5e\x82\x4b\xb0\x73\x53\x38\xe0\x9e\x5b\xd5\xcb\xff\x72\x93\x7c\x81\x60\x09\x34\xd2\x23\x3b\x81\x8b\xe9\x26\xb1\x8d\xfd\xfa\x69\x6a\xe0\xf2\xe7\x6f\x29\x5c\x1c\xbb\x48\x1c\x91\x14\x8d\xae\x57\xae\x75\x2c\x1c\x2d\x26\xa3\xf0\x1b\x19\x7a\x50\xd2\xcd\x6c\xf4\x60\x19\xab\xbe\xeb\xb4\x71\x36\x9c\x48\x55\xfb\x43\xf2\xd8\x49\x62\x23\xb7\x68\xf8\x7d\x8f\xe6\xe5\x41\xef\xce\xe0\xf3\x55\x21\x14\x19\xaa\x28\x4b\xa3\x2b\x60\x55\x23\x9c\x23\xa7\x09\x98\x69\x68\x59\x56\xde\xb9\xb3\x0c\xec\xa6\xe1\xd7\xc6\x2c\xf5\x83\xde\xd9\x13\x35\x94\x6c\xbc\x06\x53\xfc\x0f\x19\xfd\x73\x12\x45\xd4\x5a\xf1\x84\xd7\xc6\x30\x34\xe6\x55\x36\xba\xb8\x5e\x93\x3c\xbc\x14\x47\x5d\x5c\x3f\x63\x71\x6e\x42\xff\xa6\xd8\xde\xcf\x6b\x74\x1e\xf0\xc4\xcc\x7f\x43\xb7\xba\xbf\xf5\xe3\x9c\x0b\x94\xb0\x9b\x3f\xee\x6e\x6f\xae\x7f\x49\x21\xf1\x52\xee\x01\xde\x5e\x97\xf7\xf5\xf8\x30\xff\xff\x25\xd0\xde\x19\xa6\x60\xa2\x45\xaf\xf0\xec\x81\xa7\x02\xf3\x37\xf8\xef\x00\x00\x00\xff\xff\xeb\x1e\x39\x83\x77\x08\x00\x00")

func golangUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangUpdateTmpl,
		"golang.update.tmpl",
	)
}

func golangUpdateTmpl() (*asset, error) {
	bytes, err := golangUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.update.tmpl", size: 2167, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"golang.create-raw.tmpl": golangCreateRawTmpl,
	"golang.create.tmpl": golangCreateTmpl,
	"golang.decl.tmpl": golangDeclTmpl,
	"golang.delete-all.tmpl": golangDeleteAllTmpl,
	"golang.delete-world.tmpl": golangDeleteWorldTmpl,
	"golang.delete.tmpl": golangDeleteTmpl,
	"golang.dialect-postgres.tmpl": golangDialectPostgresTmpl,
	"golang.dialect-sqlite3.tmpl": golangDialectSqlite3Tmpl,
	"golang.footer.tmpl": golangFooterTmpl,
	"golang.get-all.tmpl": golangGetAllTmpl,
	"golang.get-count.tmpl": golangGetCountTmpl,
	"golang.get-first.tmpl": golangGetFirstTmpl,
	"golang.get-has.tmpl": golangGetHasTmpl,
	"golang.get-last.tmpl": golangGetLastTmpl,
	"golang.get-limitoffset.tmpl": golangGetLimitoffsetTmpl,
	"golang.get-one-all.tmpl": golangGetOneAllTmpl,
	"golang.get-one.tmpl": golangGetOneTmpl,
	"golang.get-paged.tmpl": golangGetPagedTmpl,
	"golang.get-scalar-all.tmpl": golangGetScalarAllTmpl,
	"golang.get-scalar.tmpl": golangGetScalarTmpl,
	"golang.header.tmpl": golangHeaderTmpl,
	"golang.misc.tmpl": golangMiscTmpl,
	"golang.update.tmpl": golangUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"golang.create-raw.tmpl": &bintree{golangCreateRawTmpl, map[string]*bintree{}},
	"golang.create.tmpl": &bintree{golangCreateTmpl, map[string]*bintree{}},
	"golang.decl.tmpl": &bintree{golangDeclTmpl, map[string]*bintree{}},
	"golang.delete-all.tmpl": &bintree{golangDeleteAllTmpl, map[string]*bintree{}},
	"golang.delete-world.tmpl": &bintree{golangDeleteWorldTmpl, map[string]*bintree{}},
	"golang.delete.tmpl": &bintree{golangDeleteTmpl, map[string]*bintree{}},
	"golang.dialect-postgres.tmpl": &bintree{golangDialectPostgresTmpl, map[string]*bintree{}},
	"golang.dialect-sqlite3.tmpl": &bintree{golangDialectSqlite3Tmpl, map[string]*bintree{}},
	"golang.footer.tmpl": &bintree{golangFooterTmpl, map[string]*bintree{}},
	"golang.get-all.tmpl": &bintree{golangGetAllTmpl, map[string]*bintree{}},
	"golang.get-count.tmpl": &bintree{golangGetCountTmpl, map[string]*bintree{}},
	"golang.get-first.tmpl": &bintree{golangGetFirstTmpl, map[string]*bintree{}},
	"golang.get-has.tmpl": &bintree{golangGetHasTmpl, map[string]*bintree{}},
	"golang.get-last.tmpl": &bintree{golangGetLastTmpl, map[string]*bintree{}},
	"golang.get-limitoffset.tmpl": &bintree{golangGetLimitoffsetTmpl, map[string]*bintree{}},
	"golang.get-one-all.tmpl": &bintree{golangGetOneAllTmpl, map[string]*bintree{}},
	"golang.get-one.tmpl": &bintree{golangGetOneTmpl, map[string]*bintree{}},
	"golang.get-paged.tmpl": &bintree{golangGetPagedTmpl, map[string]*bintree{}},
	"golang.get-scalar-all.tmpl": &bintree{golangGetScalarAllTmpl, map[string]*bintree{}},
	"golang.get-scalar.tmpl": &bintree{golangGetScalarTmpl, map[string]*bintree{}},
	"golang.header.tmpl": &bintree{golangHeaderTmpl, map[string]*bintree{}},
	"golang.misc.tmpl": &bintree{golangMiscTmpl, map[string]*bintree{}},
	"golang.update.tmpl": &bintree{golangUpdateTmpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

