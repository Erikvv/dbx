// Code generated for package templates by go-bindata DO NOT EDIT. (@generated)
// sources:
// golang.create-raw.tmpl
// golang.create.tmpl
// golang.decl.tmpl
// golang.delete-all.tmpl
// golang.delete-world.tmpl
// golang.delete.tmpl
// golang.dialect-cockroach.tmpl
// golang.dialect-postgres.tmpl
// golang.dialect-sqlite3.tmpl
// golang.footer.tmpl
// golang.get-all.tmpl
// golang.get-count.tmpl
// golang.get-first.tmpl
// golang.get-has.tmpl
// golang.get-last.tmpl
// golang.get-limitoffset.tmpl
// golang.get-one-all.tmpl
// golang.get-one.tmpl
// golang.get-paged.tmpl
// golang.get-scalar-all.tmpl
// golang.get-scalar.tmpl
// golang.header.tmpl
// golang.misc.tmpl
// golang.update.tmpl
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _golangCreateRawTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xcd\x8a\xdb\x3e\x10\x3f\x5b\x4f\x31\xff\x9c\x6c\xc8\xea\x01\xfe\xb0\x87\x52\xb6\xb0\x50\x0a\x4d\x7a\x17\x8a\x35\x76\xd5\xc8\x92\x77\xac\x7c\x21\xf4\xee\x45\x96\xe3\xf5\x12\x12\x0a\xed\x6d\x98\xb1\x7e\x5f\x1a\x39\x84\x27\x50\xd8\x68\x8b\xb0\xb2\xb2\xc3\x15\x3c\xc5\xc8\x36\xf2\xf4\x99\x50\x7a\x0c\x01\x74\x03\xd6\x79\xe0\x1b\xf4\x07\xb2\x10\xe3\x37\x97\xcb\x10\x00\xad\x82\x18\x45\x08\xc0\xb7\x87\xa6\xd1\x67\x88\x91\x25\xc8\x34\x48\x40\x6c\x89\x3f\xe8\xd6\x4a\x7f\xa0\x89\x24\x8d\x3c\x76\xbd\x91\x7e\x26\xe7\x10\x63\x19\x02\xd4\xfe\xdc\x4b\x92\x1d\xf0\x4f\xd4\x42\x8c\x15\x94\xac\xc8\x62\xde\x85\x84\x00\xd3\x47\x73\x6b\x0d\xb3\x2a\x24\x02\x24\x72\x54\xdd\x57\xa4\xed\xd1\xed\xff\x4c\x8e\xa4\x76\x16\xc3\x26\x92\x1b\xbc\x9d\x53\x97\x8c\x36\x8a\xb5\xda\x5b\x3c\x01\xff\xa2\xd1\xa8\x21\x65\x33\xf6\xb1\xdb\xa1\xea\x8d\xac\xf1\xa7\x33\x0a\x69\x00\xfe\x6a\x1b\x07\xd3\xb1\x71\x3c\xbc\x99\xa9\xbb\x12\x62\xec\x88\xc1\x77\x7e\x95\x41\x8e\x92\x40\x8c\x0d\x78\x4e\xc5\x9b\xd9\x1d\xac\x32\x28\x36\x68\x15\x52\xe9\x76\xbf\xb8\xd2\xd2\x60\xed\xd7\xb0\x3c\x5f\xb1\x22\xcd\x8c\x6b\xb7\xbe\xf3\x65\xc6\x18\x43\x1b\xfd\xcd\x42\x2b\x76\x8d\xfb\xe3\xdd\xb3\x42\xac\x53\xaa\xf0\x0c\x23\x07\xe9\x23\x12\x7f\x39\x63\x7d\x07\x2b\x41\x15\xba\x19\xcf\xfc\xf7\x0c\x56\x1b\x08\xac\x28\x28\x03\x26\x8c\x4e\xee\xf1\x85\xa8\x44\xa2\x8a\x15\x91\x5d\x67\x56\x9b\x1c\x87\x19\xf0\x3d\xd2\x26\x6d\x5a\xdf\x3b\xf2\x43\x16\xa5\x6d\x0b\x8b\xbc\x3f\x68\xbd\x11\xfa\xfd\x80\x74\xd9\xb8\xd3\x03\xe3\x7c\x5b\x4b\x9b\xee\x5c\x2a\x45\xae\x81\xb2\x31\xd2\x7b\xb4\x57\xe0\x0a\x1e\x5b\xb2\xda\xac\x1f\xfa\xba\x52\x2e\x76\xf6\xd6\xaa\x10\x84\x43\x4e\xfa\xff\x7f\x13\xf5\x7d\x5d\x42\xf4\xfb\x99\x6a\x24\xe6\x5f\xe5\xe0\x5f\xed\x80\xe4\x5f\x55\xf9\x57\x6e\xd3\xac\x45\x9f\x00\xd3\x5f\x22\x9b\xe6\x3f\x2e\x3d\xa6\xa7\x55\xfb\x73\xda\xcf\x7e\x5f\x65\xff\xd3\x9b\x5a\xd6\x8b\xf2\x77\x00\x00\x00\xff\xff\xa6\x7b\x5d\x9d\xac\x04\x00\x00")

func golangCreateRawTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangCreateRawTmpl,
		"golang.create-raw.tmpl",
	)
}

func golangCreateRawTmpl() (*asset, error) {
	bytes, err := golangCreateRawTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.create-raw.tmpl", size: 1196, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xcd\x6a\x1b\x3f\x10\x3f\xaf\x9e\x62\xfe\x3e\xed\x82\xa3\x07\x08\xe4\xf0\x27\xa4\x34\x50\x0c\x4d\xd2\xb3\x90\x57\xb3\x5b\xd5\x5a\x69\x33\x92\x63\x1b\xa1\x77\x2f\xda\x0f\xdb\xc1\xd8\x14\xda\xdb\x30\xb3\xfa\x7d\x69\xb4\x31\xde\x81\xc2\x46\x5b\x84\x85\x95\x1d\x2e\xe0\x2e\x25\xf6\x48\x28\x03\xc6\x08\xba\x01\xeb\x02\xf0\x17\x0c\x5b\xb2\x90\xd2\xca\x8d\x65\x8c\x80\x56\x41\x4a\x22\x46\xe0\xaf\xdb\xa6\xd1\x7b\x48\x89\x65\xbc\x3c\xc8\x28\xec\x1c\xdc\xeb\xd6\xca\xb0\xa5\x89\x21\x8f\x02\x76\xbd\x91\xe1\xc8\xcc\x21\xa5\x32\x46\xa8\xc3\xbe\x97\x24\x3b\xe0\xff\x53\xeb\x21\xa5\x0a\x4a\x56\x8c\x6a\x4e\x4a\x62\x84\xe9\xab\x63\x6b\x09\x47\x59\x48\x04\x48\xe4\xa8\xba\x2e\x49\xdb\x0f\xb7\xf9\x33\x3d\x92\xda\x93\x1a\x36\xb1\x5c\x00\xae\x9d\x3a\x8c\x70\x45\x6e\x67\xb9\x2b\x44\xe5\x57\x6e\x97\xb3\x29\x84\xb0\x6e\x07\xf7\x0f\xe0\xd6\xbf\xb8\x5a\xf3\xaf\xce\x6d\x3c\x5f\xb9\x5d\x59\xf1\x1f\x6f\x8f\x65\x35\xb8\x9c\xa1\x07\xc7\x56\x07\x8b\x3b\xe0\x5f\x34\x1a\x95\xd9\xd9\xf8\x4d\xb7\x46\xd5\x1b\x59\xe3\x4f\x67\x14\x92\x07\xfe\x6c\x1b\x07\xd3\xb1\x61\xec\xdf\xcd\xd4\x5d\x08\x31\x74\x84\x0f\x5d\x58\x8c\x20\x1f\x92\x40\x0c\x0d\x78\xc8\xc5\xbb\x59\x6f\xad\x32\x28\x5e\xd0\x2a\xa4\x72\x90\xa8\xa5\xc1\x3a\x2c\xe1\xfc\x7c\xc5\x8a\x3c\x33\xae\x7d\x0d\x5d\x28\x47\x8c\x21\xf9\x21\xa4\xa3\xd0\x8a\xcd\x77\xf6\x79\x83\x58\x21\x96\xf9\x6a\x60\x8a\x81\xf4\x07\x12\x7f\xda\x63\x7d\x05\x2b\x43\x15\xba\x19\xce\xfc\xf7\x00\x56\x1b\x88\xac\x28\x68\x04\xcc\x18\x9d\xdc\xe0\x13\x51\x89\x44\x15\x2b\x12\x9b\x67\x56\x9b\x31\x0e\xe3\xf1\x14\x69\x93\xf7\xb5\xef\x1d\x05\x3f\x8a\xd2\xb6\x85\xb3\xbc\x3f\x69\xbd\x10\xfa\x7d\x8b\x74\x78\x71\xbb\x1b\xc6\xf9\x6b\x2d\x6d\x5e\x1c\xa9\x14\xb9\x06\xca\xc6\xc8\x10\xd0\xce\xc0\x15\xdc\xb6\x64\xb5\x59\xde\xf4\x35\x53\x9e\x2d\xfe\xa5\x55\x21\x08\xfd\x98\xf4\xfd\xbf\x89\xfa\xba\x2e\x21\xfa\xcd\x91\x6a\x20\xe6\xdf\xa4\x0f\xcf\xd6\x23\x85\x67\x55\xfe\x95\xdb\x3c\x6b\x31\x64\xc0\xfc\xaf\x19\x4d\xf3\xb7\x43\x8f\xf9\x7d\xd6\x61\x9f\xf7\xb3\xdf\x5c\x3e\x9e\xb9\x3e\x2b\x7f\x07\x00\x00\xff\xff\xc0\xb8\xac\xa4\xef\x04\x00\x00")

func golangCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangCreateTmpl,
		"golang.create.tmpl",
	)
}

func golangCreateTmpl() (*asset, error) {
	bytes, err := golangCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.create.tmpl", size: 1263, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeclTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\x55\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x49\x4d\xce\x51\x52\xa8\xad\xe5\x4a\x2b\xcd\x4b\x56\xd0\xc8\x4f\xca\x52\xd0\xaa\xae\x56\xd0\x0b\x4a\x4d\x4e\xcd\x2c\x4b\x2d\x72\x4a\x2c\x4e\x55\xa8\xad\xf5\xcc\x2d\xc8\xd1\x54\x00\x49\x04\x67\xa6\xe7\x25\x96\x94\x16\x81\x44\x15\xaa\xb9\x40\x42\x4e\xf9\x29\x95\x20\x23\x6a\x41\xbc\xd4\xbc\x14\x05\xdd\xda\x5a\x2e\x40\x00\x00\x00\xff\xff\x9b\x28\x5e\xfd\x65\x00\x00\x00")

func golangDeclTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeclTmpl,
		"golang.decl.tmpl",
	)
}

func golangDeclTmpl() (*asset, error) {
	bytes, err := golangDeclTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.decl.tmpl", size: 101, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x8b\xdb\x30\x10\x85\xcf\xd6\xaf\x98\x0d\x39\xd8\xe0\x15\x3d\x94\x1e\x16\x7c\x08\x74\x0f\xbd\xec\x61\x73\x2c\x45\x28\xd6\x38\x55\x77\x2c\x65\x47\x72\x9a\x22\xfc\xdf\x8b\x14\x37\x78\x61\x69\xa1\x07\x83\x3d\xf3\xfc\xbd\x99\xc7\xa4\x74\x0f\x06\x07\xeb\x10\x36\xc1\x1e\x9d\x8e\x13\xe3\x06\xee\xe7\x59\x7c\x46\xc2\x88\x2a\x25\x90\xfb\x69\x18\xec\x05\xe6\xb9\x4e\x09\xfa\x78\x39\x69\xd6\x23\xc8\x1d\xd1\x8e\x8f\x01\xe6\xb9\x81\x5a\x54\xbd\x9f\x5c\x04\xeb\xe2\xa7\x8f\x2d\x20\x73\x7e\x3c\x37\x22\x7b\xa0\x33\x05\x2a\xd6\x86\xd6\x9d\xfd\xcb\xbf\xdd\x34\x1f\xdf\x78\x89\x94\xde\xe7\x1d\xbc\xf9\x75\xa5\x55\x59\x32\x1e\xd0\x9c\x48\xf7\xf8\xdd\x93\x41\x0e\x20\xbf\xb8\xc1\xc3\xba\x1d\x5e\x69\xa9\x6e\x94\x2a\x15\x15\xe2\x18\x37\x59\x24\xaa\xb3\x66\x50\xea\xac\x69\xc2\x00\x5f\xbf\x59\x17\x91\x07\xdd\x63\x9a\x45\x75\xab\x77\xa0\x4f\x27\x74\xa6\xfe\x53\x69\x21\x25\x18\x2c\x92\x29\xdf\x20\xf7\x51\x47\xdb\xdf\xa6\x2f\xee\xac\xdd\x11\x61\x6b\x5b\xd8\xe6\xf5\x1e\x3a\x90\x4f\x13\x91\x3e\x10\x2e\x42\x51\xd9\x01\xee\x52\x2a\x02\xf9\xa4\x47\x84\x79\x96\x36\xb8\x89\xa8\x6e\x20\x89\xaa\x52\xaa\xf7\xce\xe4\xcc\xb6\x36\x37\x33\x01\x3a\x18\x34\x05\x2c\xed\xbf\x8e\xf8\x86\x5b\xea\x75\xd3\x88\x6a\x49\xc7\x99\x75\x06\x39\x14\xe8\xf2\xcb\x2b\x1d\x26\x67\x08\xd5\x33\x3a\x83\x5c\xfb\xc3\x0f\x69\xac\x26\xec\x63\x0b\xeb\x0c\x1b\x51\xe5\x1e\xf9\xe3\x3e\x8e\xb1\xbe\x32\xda\x5b\x9e\x52\xca\x1c\x85\x52\x9c\xc7\xc9\xd7\xf2\xd0\x41\x81\xb1\x3d\x23\xcb\xc7\x0b\xf6\xef\xff\x94\x73\xc9\xfa\xbb\x0e\x9c\xa5\x12\x04\x63\x9c\xd8\xc1\x87\xb6\x10\x46\xfd\x82\x8f\xcc\x35\x32\x97\x7d\x96\xcb\xbc\xba\xe4\x25\x18\x83\x7c\xf6\x3f\xc3\x6e\x18\xb0\x8f\x68\xea\xff\x82\x2e\xfd\x85\xed\x2c\xad\xef\xf2\x77\x00\x00\x00\xff\xff\x5a\xc7\x38\xe5\x58\x03\x00\x00")

func golangDeleteAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteAllTmpl,
		"golang.delete-all.tmpl",
	)
}

func golangDeleteAllTmpl() (*asset, error) {
	bytes, err := golangDeleteAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete-all.tmpl", size: 856, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteWorldTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xb1\x6a\xc3\x30\x10\x86\x67\xe9\x29\xae\x86\x82\x4d\x13\xd1\xa1\x74\xf3\x10\x4a\xb6\x2e\x4d\x1f\x20\x38\xd6\x39\xa8\x55\x4f\xcd\xe9\x9c\xba\x08\xbf\x7b\xb1\x5c\x87\xcc\x19\x84\x40\xe8\xff\xbe\xbb\x3f\xa5\x35\x58\xec\x1c\x21\x14\xd1\x1d\xa9\x91\x9e\xb1\x80\xf5\x38\x6a\x8b\x1e\x05\x37\xde\x97\xad\x0c\xd0\x06\x12\x1c\xc4\xbc\xcc\x77\x05\x65\x1b\x7a\x12\x70\x24\xcf\x4f\x2b\x40\xe6\xe9\x04\xae\xf4\x84\x44\xb2\x99\xa1\xaf\xf9\x87\x60\x7f\x67\xb4\x3a\x37\x0c\xfb\x3d\x63\x84\x78\xf2\x66\x87\xb1\xf7\xb2\xbc\x5e\x71\xe7\x3c\x37\x74\x44\x30\xef\x6f\xaf\x11\xa6\x70\x0e\xce\xca\x1a\xc2\xe1\xc3\x58\x76\x67\x64\xb3\x1d\xb0\x2d\x53\x82\x6f\x76\x24\x1d\x14\xf7\xa7\x02\x0c\x8c\x63\xa5\x95\xeb\xf2\xf7\xbb\x1a\xc8\x79\x48\x5a\x29\x46\xe9\x99\xe0\x71\x95\x09\x5f\xcd\x27\x6e\x99\x4b\x64\xae\xb4\x1a\xf5\x24\xc9\x73\x2c\x9a\xec\x34\xbb\xf0\x13\x37\x5d\x87\xad\xa0\x2d\x6f\xc0\xaa\x79\xb7\x87\x7a\x59\xf3\x52\xd6\xd4\xd5\x12\xfe\x17\x93\xf3\x3a\xa5\x4b\x95\x7f\x01\x00\x00\xff\xff\xab\x74\xf7\x3d\xaa\x01\x00\x00")

func golangDeleteWorldTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteWorldTmpl,
		"golang.delete-world.tmpl",
	)
}

func golangDeleteWorldTmpl() (*asset, error) {
	bytes, err := golangDeleteWorldTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete-world.tmpl", size: 426, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x4f\x8b\xdb\x30\x10\xc5\xcf\xd6\xa7\x98\x0d\x39\xd8\xe0\x15\x3d\x2f\xb8\x10\xe8\x1e\x7a\xd9\xc3\xe6\x58\x8a\x90\xad\x51\xaa\xee\x58\xca\x8e\xe5\x34\x45\xf8\xbb\x17\x29\x6e\xc8\x42\xff\xc0\x1e\x02\xf1\xcc\x9b\xf7\x66\x7e\x28\xa5\x7b\x30\x68\x9d\x47\xd8\x4c\xee\xe0\x75\x9c\x19\x37\x70\xbf\x2c\xe2\x13\x12\x46\x54\x29\x81\xdc\xcf\xd6\xba\x33\x2c\x4b\x9d\x12\x0c\xf1\x7c\xd4\xac\x47\x90\x3b\xa2\x1d\x1f\x26\x58\x96\x06\x6a\x51\x99\x32\x60\xa0\x0f\x81\x5a\x40\xe6\xfc\x0b\xdc\x88\x1c\x82\xde\x14\x57\x71\x9b\xe8\xfc\x29\xbc\xfc\x3f\x4e\xf3\xe1\x4d\xd8\xdf\x0d\xfb\x60\x7e\x5e\xec\xaa\x94\x00\xc7\x1e\xcd\x91\xf4\x80\xdf\x02\x19\xe4\x09\xe4\x67\x6f\x03\xdc\xb6\xa7\x57\x5a\xab\x1b\xa5\x4a\x45\x4d\x71\x8c\x9b\x2c\x12\xd5\x49\x33\x28\x75\xd2\x34\xe3\x04\x5f\xbe\x3a\x1f\x91\xad\x1e\x30\x2d\xa2\xba\xd6\x3b\xd0\xc7\x23\x7a\x53\xff\xae\xb4\x90\x12\x58\x87\x64\xca\x37\xc8\x7d\xd4\xd1\x0d\xd7\xf5\x4b\x3a\x6b\x7f\x40\xd8\xba\x16\xb6\xf9\xbe\x87\x0e\xe4\xd3\x4c\xa4\x7b\xc2\x55\x28\x2a\x67\xe1\x2e\xa5\x22\x90\x4f\x7a\x44\x58\x16\xe9\x26\x3f\x13\xd5\x0d\x24\x51\x55\x4a\x0d\xc1\x9b\x0c\x6d\xeb\x72\x33\x3b\x40\x07\x56\xd3\x84\xa5\xfd\xcf\x15\xdf\xf8\x96\x7a\xdd\x34\xa2\x5a\xe9\x78\x73\xcb\x20\x43\x81\x2e\xff\x79\xa5\x7e\xf6\x86\x50\x3d\xa3\x37\xc8\x75\xe8\xbf\x4b\xe3\x34\xe1\x10\x5b\xb8\x65\xd8\x88\x2a\xf7\x28\x1c\xf6\x71\x8c\xf5\xc5\xa3\xbd\xf2\x94\x52\x66\x14\x4a\x71\x5e\x27\x3f\x97\x87\x0e\x8a\x19\xbb\x13\xb2\x7c\x3c\xe3\xf0\xe7\xa1\xcc\x25\xeb\xef\x3a\xf0\x8e\x0a\x08\xc6\x38\xb3\xbf\x1c\xde\x16\x97\x51\xbf\xe0\x23\x73\x8d\xcc\xe5\x26\x51\x60\xcd\x3e\x5e\xb3\x4a\xb2\x7c\x0e\x3f\xa6\x9d\xb5\x38\x44\x34\xf5\xbb\xbd\x57\xcd\x1a\x01\x1f\xe1\x43\x9b\xe7\xc5\x0a\x32\xbf\xc8\x5f\x01\x00\x00\xff\xff\x94\xcf\x73\x61\x6b\x03\x00\x00")

func golangDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteTmpl,
		"golang.delete.tmpl",
	)
}

func golangDeleteTmpl() (*asset, error) {
	bytes, err := golangDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete.tmpl", size: 875, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDialectCockroachTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcd\xae\x9b\x30\x10\x85\xd7\xf8\x29\x4e\xbd\x82\x2b\x42\xa4\x76\xd7\x2a\x9b\xa6\x5d\x57\xea\x1b\x38\x66\x00\xeb\x12\x9b\xcc\x98\x56\x15\xe2\xdd\x2b\x3b\xe4\x6f\x71\x25\x36\xcc\xcc\x37\x67\xce\xf1\xb2\xec\xd0\x52\xe7\x3c\x41\xbb\xf3\x14\x38\x6a\xac\xab\x2a\x74\xef\xe2\x30\x9f\x1a\x1b\xce\xfb\xd1\x9d\xf6\xd3\x45\xab\x65\x01\xf9\x16\xbb\x75\x55\xea\x85\x93\x9d\x0d\x5e\x22\x1b\xe7\xe3\x8e\x98\x03\xe7\x25\xdd\xec\x2d\x4a\x77\x9e\x46\x2c\x0b\x9a\xdf\x64\xc9\xfd\x21\xc6\xba\x56\x70\x72\xbc\x23\x3f\x13\x51\x12\x33\x32\x5b\xa1\x54\xc5\x63\x21\x24\xb2\xf3\x7d\x8d\xf0\x8e\x53\x08\x63\x85\x45\x15\xae\x03\xe5\xca\xd7\x43\x82\x9a\xf2\x6d\xba\x34\x79\x4f\xf5\x2d\x95\x17\x55\x14\x79\xa8\x39\x86\x96\x9a\xe3\x68\x44\xca\x0a\x87\x03\xf4\xe7\x2f\xfa\xda\x2e\x98\xe2\xcc\x3e\xcf\xdc\xc4\x6a\x44\x9e\x29\x75\x57\x95\xbe\x6d\x44\xeb\x1a\x9d\x19\x85\xd4\xfa\x61\x0a\x61\x22\xff\xb0\x9d\xfe\x6c\xb0\xef\x1c\x8c\x1d\x4a\x09\x33\x5b\xda\x9c\x54\x28\xdf\xe4\x32\x36\x3f\xbe\xd7\x37\xc3\x8b\x2a\xf6\x7b\x44\xfe\x87\xce\xb1\x44\xfc\x75\x71\x80\xbe\xf3\x1a\x46\x60\xd0\x72\x8e\xcf\x79\x58\x23\x04\x09\x67\x0a\x9e\x30\x18\x01\x53\xef\x24\x12\x53\x9b\x37\xa5\x16\x64\x22\xeb\xcc\x08\x89\x73\xd7\x35\x70\x1d\xe2\x60\x22\x3a\xe3\x46\xa9\x11\x07\xf2\x59\xd1\xf4\xc6\xf9\x4d\x71\x0a\x12\x7b\x26\x49\x82\xd7\x93\x06\xda\x64\x1b\x55\xb4\xa7\x7c\x70\xca\x3c\xdd\xff\x6b\x22\x5f\x3e\x1d\x59\xe3\x6a\xb3\xba\x3e\x0f\x33\x3e\x1d\xe0\xdd\x98\xd3\xbe\xb1\xcf\xe8\x5d\xed\x89\x7c\x64\xbe\x11\xaf\x89\xff\x0f\x00\x00\xff\xff\x62\xb9\xbc\x1a\xaf\x02\x00\x00")

func golangDialectCockroachTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDialectCockroachTmpl,
		"golang.dialect-cockroach.tmpl",
	)
}

func golangDialectCockroachTmpl() (*asset, error) {
	bytes, err := golangDialectCockroachTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.dialect-cockroach.tmpl", size: 687, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDialectPostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x31\x6f\xc3\x20\x14\x84\x67\xf8\x15\x4f\x4c\x10\xd9\x44\x6a\xb7\x56\x59\x9a\x76\xae\xd4\x7f\x90\x38\xcf\x29\x2a\x06\xfc\xc0\x5d\x10\xff\xbd\x82\xc4\x89\x32\x54\xf2\xe2\x77\xf7\xdd\xe9\xc8\xb9\x87\x13\x8e\xc6\x21\x08\x33\x05\x4f\x49\x40\x29\x9c\x89\xb3\x49\xdf\xcb\x51\x0f\x7e\xda\x5a\x73\xdc\x86\x59\xf0\x9c\x01\xdd\x09\xfa\x52\x38\x7f\xe0\x62\x3f\x78\x17\x13\x1d\x8c\x4b\x3d\x12\x79\x6a\x21\xe3\xe2\x06\x90\x66\x0a\x16\x72\x06\xfd\x85\x03\x9a\x5f\x24\x28\x45\x81\x89\xfb\x1b\xf2\x51\x09\x89\x44\xd0\x58\x05\x92\xb3\x7b\x20\xc4\x44\xc6\x9d\x3b\xf0\x3f\x70\xf4\xde\x2a\xc8\x9c\x99\x11\xb0\x5d\x5e\x76\x15\xd2\x72\x13\x66\xdd\x72\xd4\x6b\x3d\x67\xce\x58\x33\xe9\xbd\x3f\xa1\xde\xdb\x43\x8c\x52\xc1\x6e\x07\xe2\xe9\x59\x5c\x64\x46\x98\x16\x72\xcd\xb3\x96\x75\x90\x68\xc1\xaa\x16\x5e\xbf\xab\x45\x88\x0e\xc6\x83\x8d\xc8\xcb\xbf\xaf\xe0\x03\xba\xfb\xec\xfa\x17\x7c\x4c\x67\xc2\x28\xa3\x5f\x68\xc0\xeb\x10\x05\x72\x13\x67\xab\xdf\xdf\xba\x75\x6f\xbe\x15\x55\xe1\x33\xa0\x93\x62\x85\x45\x07\x17\x5c\x3d\x74\xff\x05\x00\x00\xff\xff\xc1\x0a\x5b\x7f\xb8\x01\x00\x00")

func golangDialectPostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDialectPostgresTmpl,
		"golang.dialect-postgres.tmpl",
	)
}

func golangDialectPostgresTmpl() (*asset, error) {
	bytes, err := golangDialectPostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.dialect-postgres.tmpl", size: 440, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDialectSqlite3Tmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x62\x96\xc0\x2e\xc4\x5d\x59\x46\x10\x60\x0f\x2e\x74\x48\x93\xa0\x1f\xc8\x47\x6b\x17\xe8\x21\x08\x0c\x5a\x1a\xc9\xac\x29\x52\x21\xa9\xc4\x86\xa0\xff\x5e\x90\x92\x13\xbb\x4d\x0b\x14\xd0\x45\x7c\x33\x6f\x3e\xde\x9b\xae\x9b\x40\x81\xa5\x50\x08\x54\xd4\x8d\x36\x8e\x42\xdf\x93\x88\xd6\xdc\xad\xa7\x86\xab\x82\x92\x88\x56\xc2\xad\xdb\x55\x9a\xeb\x7a\x5a\x73\xe7\xd4\xb4\xd2\x13\xfb\x20\x85\xc3\x53\x4a\xba\x0e\x50\x15\x30\xe9\x7b\x42\x8e\xe8\xec\x24\xd7\xca\x3a\xc3\x85\x72\x13\x34\x46\x9b\xc0\x5d\xb6\x2a\x87\x58\xd4\x8d\x84\xae\x83\x74\x8e\x39\x8a\x47\x34\xd0\xf7\x0c\x84\x3d\x7f\x4e\xb9\xf4\x19\x31\x1a\x03\x21\x97\x41\x4c\xa2\x17\x42\xb0\xce\x08\x55\x25\xa0\x37\xb0\xd2\x5a\x32\xe8\x48\x24\x4a\xc0\xf0\x32\xcb\x7c\x52\x1a\x8f\x4d\xa6\x81\x8b\xbd\xf1\x50\x47\xa2\x28\x04\xa6\xe7\xba\x40\xc8\x32\x38\x08\x7a\xa9\x3e\xc4\x45\xb5\xad\xf6\x64\x43\x3f\x2c\x3c\xe7\x5a\x6a\xe5\x81\xa1\x0b\x9b\x5e\x71\xeb\x3e\xa8\x02\xb7\x71\x6d\xab\x04\xe8\x8c\x0e\x81\xa2\x84\x21\xf6\xaf\x0c\x26\x27\x23\x69\x64\xd0\xb5\x46\x3d\x27\x7f\x31\xa2\x5e\x34\x3c\x47\x9f\x7c\x17\xe2\x67\xf7\x2c\x01\x67\x5a\x0c\x09\x3d\x39\xc8\xa2\xf4\x05\xe9\x89\xff\x0e\x80\x92\x4b\x8b\xa4\xff\xa5\x28\xba\x41\x15\x54\x78\xe4\x66\x3f\xf8\x85\xf1\xfb\xbf\xe1\x35\x42\x06\x5e\x9d\x98\x8d\xad\xf9\x7e\x7d\xa0\x28\xe0\xee\xe4\xff\xfb\xd5\xce\x21\x89\xbc\x29\xd2\x39\xf2\x22\x16\xc5\xdd\xec\x9e\x3d\xd7\x2f\x6b\x97\x2e\x1a\x23\x94\x2b\x63\x3a\x72\x2f\xff\xde\xd2\x64\x64\x1b\xe3\x19\xe9\x63\x46\x06\x1b\x08\x25\x5c\x1c\xa4\xb3\x0f\x32\x9d\x63\x25\xac\x43\x13\xff\xd4\x58\x02\xff\xec\x55\x5a\x7c\xbe\x12\x0e\x07\xc8\xaf\xf3\x5c\x2b\x85\xb9\x7b\xaf\xf5\x66\xb6\x9f\x68\x81\xae\x6d\x3c\x90\x90\xa8\x67\xa4\x27\x64\x3a\x85\x21\xf1\xf4\xa3\x6e\x8d\xe2\xf2\xda\x8b\x9f\x6b\xe5\x8c\x96\x16\xdc\x1a\xe1\xdb\x00\x2c\x6b\x8f\x34\x86\x57\x35\x87\x52\x1b\xe0\x52\x82\xc2\x27\x1f\xec\x0b\x09\xad\x6c\x1a\xf8\x84\xca\x11\x84\x03\x61\xc1\x20\x2f\xe0\x49\xb8\xb5\x6e\x1d\x70\xa8\x5b\x87\xdb\xc4\x63\x75\x6b\x1d\xac\x10\xf2\x35\x57\x15\x16\xe0\x74\xa8\xf5\xc8\x65\x8b\xb0\xd3\x2d\x3c\x71\xe5\x3c\xdb\x0a\x4b\x6d\x10\xb8\xda\xc1\x6d\x83\x0a\x72\x2e\xa5\x4d\x83\x4c\xaf\x34\x9e\x01\xfd\x7a\x76\x45\xc7\x2d\xfe\x38\x75\xec\x5b\x85\x7f\x8f\x37\xe6\x01\x06\x87\xf7\xd4\x91\x68\x99\xf8\x1f\xc8\xc2\x70\xe9\xe5\x16\xf3\x98\x7e\x9a\x9f\xbd\xbb\x3e\xf3\xa3\xa3\xa8\xd4\x72\x83\x3b\x0b\x19\xdc\xde\xd0\x04\x94\x90\x6c\xb8\x32\x63\xbc\xa3\x95\x90\xc1\xd2\xa3\x01\x6a\xbe\xc1\x4b\x13\x6e\x96\x05\x63\xfe\x86\xfe\x68\xdb\x19\x50\xf8\xef\x95\x39\xff\xbc\xe2\xf8\xae\x84\xf4\xaa\x87\xed\x78\xcb\x8f\xab\x88\xad\x6e\x4d\x8e\xa3\x1f\x19\xc4\x7e\x47\xe9\xc5\xdb\xe4\x60\x25\xfb\xdb\x7c\x90\xa9\x17\xe2\x35\x2f\x0e\x2c\xec\xe8\xcc\xbe\x07\x00\x00\xff\xff\xee\x90\xf0\xb1\x49\x05\x00\x00")

func golangDialectSqlite3TmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDialectSqlite3Tmpl,
		"golang.dialect-sqlite3.tmpl",
	)
}

func golangDialectSqlite3Tmpl() (*asset, error) {
	bytes, err := golangDialectSqlite3TmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.dialect-sqlite3.tmpl", size: 1353, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x3f\x8f\x9b\x40\x10\xc5\xeb\x9d\x4f\x31\xe9\xc0\xba\x50\x45\x29\x12\xb9\xc8\xdd\xa5\x48\x11\x45\xb2\x49\x1d\xf1\x67\xf0\xad\x8c\x17\x6e\x19\x2e\x1b\xad\xf8\xee\xd1\xf2\xdf\x80\x63\xa5\x38\xc1\x0d\x3b\xef\xfd\x1e\x33\xd8\x5a\x94\x19\x06\xc7\xba\x2c\x0b\xcd\x07\x83\x4d\x03\xfc\xa7\x24\x3c\x18\xac\x58\xd7\x09\xa3\x05\x91\xc6\xb8\x7b\x7e\x04\xc1\x06\x77\xa1\x81\x06\x20\xab\x55\x82\x9e\x36\xb8\x3b\x18\x1f\x7f\xaa\x2a\xca\x28\x34\x5e\xc2\x06\x93\x42\x31\x19\x0e\x9e\xba\xab\x8f\x5e\xdd\x3e\xfe\xe5\xba\xab\xd7\x3c\x08\xcd\x03\x92\xd6\xee\xaf\xd0\xbe\xd3\xe7\xbe\xf2\x69\x8f\xda\x04\x27\xe2\x4e\xca\x07\x21\xb3\xf6\xc1\xbb\x3d\x2a\x99\xbb\xa3\x42\x13\xd7\x5a\xb9\x7f\xdb\x1e\x10\x0d\x0c\x35\x36\xad\xb6\x92\xf9\x1a\x71\x14\xdd\xe0\xeb\x62\x2d\xa1\x64\xe6\x60\xd8\xe0\x7e\x32\x1f\x6a\xdd\xd9\x96\x36\x8d\x83\x1f\x25\xa9\x96\xf7\xf3\x12\x76\x4d\xeb\x70\x27\xe2\x5e\x6c\x93\xf8\x40\xb1\x54\xa9\x57\xb9\x39\x48\x75\xf2\xfb\xab\xd3\x9d\xba\xd3\x38\x18\xce\xf9\x6b\x89\xa7\xe2\x72\x91\xec\xf9\xe8\xdd\x88\x36\x43\x1d\x03\xb1\x09\x86\x3e\xf7\xba\xbb\x57\xd0\x22\xce\xc0\x5d\x96\x35\x71\x91\xe7\x71\x94\x9c\xff\xdf\x70\xea\xbc\x6b\x69\x2d\xea\x48\x9d\x08\x83\xef\xc4\x2f\x45\x5a\xb9\x95\xbd\xe6\xb0\x16\x83\xa3\x3c\xa9\x88\x6b\x4d\xd8\x34\xce\xee\x2d\xd2\xd8\xaf\xaf\xa3\xb9\x1a\xe1\xb4\x70\xab\x01\xf6\xde\x8b\x2d\x73\x06\xdf\xd4\x5b\x71\x76\xea\xd0\x38\x26\x52\xa9\xbb\x9f\xee\xba\xcf\x68\x60\x94\x8a\x49\x67\x51\x42\x68\xc1\xda\xf7\x1b\x11\xc4\x92\x7a\xa6\x35\xa8\x85\x66\x4b\x4f\xf4\x45\x00\x71\x63\x67\x40\x8c\x9b\xd0\xce\x04\xc4\x6c\x54\x5d\x65\xb0\xe0\x6d\x8b\xd1\x19\x40\xa4\x94\x13\xd3\x97\x3c\xbf\xf1\x39\x49\xc5\x1f\x3f\x3c\xf4\xd3\x07\x71\x89\xce\xf4\x55\xeb\xf9\x46\x5c\x5b\x3e\x3f\xde\x49\x75\x4c\x5e\xe8\x12\x79\x53\x9a\x21\xe6\x6b\xbe\x0c\x3a\x68\xa6\xf1\xa6\xe6\x68\x05\x20\x7e\xeb\xa8\x0c\x8d\x37\xfd\x2a\xf9\x53\xf8\x7f\x52\xff\x0d\x00\x00\xff\xff\x20\xf7\x92\xb8\x34\x05\x00\x00")

func golangFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangFooterTmpl,
		"golang.footer.tmpl",
	)
}

func golangFooterTmpl() (*asset, error) {
	bytes, err := golangFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.footer.tmpl", size: 1332, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x41\x6b\xdc\x3c\x10\x3d\x4b\xbf\x62\xb2\xe4\x60\xc3\x46\x3f\x20\x1f\x3e\x84\x8f\x1e\x7a\x09\x34\x7b\x2c\xc5\x68\xad\xd1\x56\xcd\xac\xb4\x91\xe5\x4d\x82\xd0\x7f\x2f\x23\x3b\x26\x0b\x69\x43\x0f\x06\x6b\x66\xf4\xde\x9b\xa7\x99\x9c\x6f\xc0\xa0\x75\x1e\x61\x33\xba\x83\xd7\x69\x8a\xb8\x81\x9b\x52\xe4\x1d\x51\x9f\x33\xa8\xdd\x64\xad\x7b\x81\x52\x9a\x9c\x61\x48\x2f\x27\x1d\xf5\x11\xd4\x1d\xd1\x5d\x3c\x8c\x50\x4a\x0b\x8d\x14\x31\x3c\x8f\x90\x33\x8c\xe4\x06\x0c\x16\xd4\x43\x78\x86\x52\xb6\x80\x31\xf2\x17\x62\x2b\x99\x0c\xbd\xa9\xe8\xf2\x3d\xb3\xf3\xe7\xf0\xf8\x09\xad\x8e\x87\x0b\xd2\x3f\xa3\xed\x83\x79\xdd\x40\x29\x52\xe4\x0c\x78\xdc\xa3\x39\x91\x1e\xf0\x67\x20\x83\x71\x04\xf5\xd5\xdb\x70\x91\x1e\x9f\x68\x89\x6e\xfa\xbe\x46\xfa\x31\x1d\x53\xc5\x90\xe2\xac\x23\xf4\xfd\x59\xd3\x84\x23\x7c\xff\xe1\x7c\xc2\x68\xf5\x80\xb9\x48\xb1\xc6\x3b\xd0\xa7\x13\x7a\xd3\xbc\x45\xb6\x6c\x86\x75\x48\xa6\x9e\x41\xed\x92\x4e\x6e\x58\xd5\x57\xf6\xa8\xfd\x01\xe1\xda\x6d\xe1\x9a\xdb\xbb\xed\x40\xdd\x4f\x44\x7a\x4f\xb8\x14\x4a\xe1\x2c\x5c\xe5\x5c\x0b\xd4\xbd\x3e\x22\x94\xa2\xdc\xe8\x27\xa2\xa6\x85\x2c\x85\xe8\xfb\x21\x78\xc3\x9e\x5d\x3b\x4e\x32\x02\x74\x60\x35\x8d\x58\xd3\x7f\x95\x78\x81\x5b\xe3\x4d\xdb\x4a\xb1\xb8\xe3\xcd\x7b\x0f\xd8\x14\xe8\xf8\xe7\x89\xf6\x93\x37\x84\xfd\x03\x7a\x83\xb1\x09\xfb\x5f\xca\x38\x4d\x38\xa4\x2d\xbc\xf7\xb0\x95\x82\x73\x14\x0e\xbb\x74\x4c\xcd\x8c\xb1\x5d\xfd\x54\x4a\xb1\x15\x7d\xcf\xe3\x33\xcf\xca\x6d\x07\x15\x2d\xba\x33\x46\xf5\x6d\xc2\xf8\xfa\xf1\x35\x76\x86\x2f\x5c\x75\xe0\x1d\x55\x2b\x22\xa6\x29\x7a\x3e\x6e\x2b\xc8\x51\x3f\xe2\x97\x18\x1b\x8c\x71\xee\xc9\xa0\x45\xee\x84\xe9\xd4\xff\x14\x46\x6c\x98\xdf\x86\x35\x78\x8f\x2f\x69\x31\x36\x67\x70\xde\x25\x8f\xcf\x6f\xd3\x2c\x85\x60\xc6\xee\xad\x78\x37\x68\xcf\xe3\xa9\x8d\x89\xc1\x42\x63\x49\xa7\x84\xbe\x96\xb7\xf5\x99\xc5\x07\x2a\x3f\x91\xc9\x3a\xe7\x75\x5a\x5f\x6c\x76\x87\x89\x78\x09\x66\x2d\x73\x43\x0b\xfa\xed\x2a\x89\x71\xda\xff\xfe\xd9\x98\xa5\x60\x26\xf2\x8e\xe4\xf2\xfa\xbc\x5c\xbf\x03\x00\x00\xff\xff\x8d\x17\xe9\xb7\x24\x04\x00\x00")

func golangGetAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetAllTmpl,
		"golang.get-all.tmpl",
	)
}

func golangGetAllTmpl() (*asset, error) {
	bytes, err := golangGetAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-all.tmpl", size: 1060, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetCountTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\x4d\x6b\xdc\x30\x10\x3d\x5b\xbf\x62\xb2\x2c\xc5\x06\x47\xf4\x50\x7a\x28\xf8\x10\x4a\x0f\xbd\x04\x9a\x3d\x96\x62\xb4\xd6\xd8\x55\x33\x1e\x6d\xc6\xf2\x36\x41\xe8\xbf\x17\xa9\x9b\x65\x17\xfa\x71\x30\x58\xef\xcd\xbc\x37\xf3\x98\x18\x6f\xc1\xe2\xe8\x18\x61\xb3\xb8\x89\x4d\x58\x05\x37\x70\x9b\x92\xfa\xe8\x57\x0e\x7d\x8c\xa0\x77\xeb\x38\xba\x67\x48\xa9\x8e\x11\x86\xf0\x7c\x30\x62\x66\xd0\x77\x44\x77\x32\x2d\x90\x52\x03\xb5\xaa\x86\x5c\x0f\x8e\xc3\xfb\x77\x2d\xa0\x48\xfe\xbc\x34\x2a\x5b\x20\xdb\xa2\xa9\x2e\xfd\x1c\x1f\xfd\xe3\x7f\xcd\x8c\x4c\x57\x56\x7f\xd7\xdb\x7b\xfb\xb2\x81\x94\x54\x15\x23\xe0\xbc\x47\x7b\x20\x33\xe0\x77\x4f\x16\x65\x01\xfd\x99\x47\x7f\x45\x2f\x4f\x74\x42\x37\x7d\x5f\x90\x7e\x09\x73\x28\x1a\xaa\x3a\x1a\x81\xbe\x3f\x1a\x5a\x71\x81\xaf\xdf\x1c\x07\x94\xd1\x0c\x18\x93\xaa\xce\x78\x07\xe6\x70\x40\xb6\xf5\x2b\xd2\x42\x8c\x30\x3a\x24\x5b\xde\xa0\x77\xc1\x04\x37\x9c\xa7\x2f\xee\x62\x78\x42\xd8\xba\x16\xb6\x79\xbd\x0f\x1d\xe8\xfb\x95\xc8\xec\x09\x4f\x85\xaa\x72\x23\xdc\xc4\x58\x0a\xf4\xbd\x99\x11\x52\xd2\x6e\xe1\x95\xa8\x6e\x20\xaa\xaa\xea\xfb\xc1\xb3\xcd\x99\x6d\x5d\x26\xb3\x02\x74\x30\x1a\x5a\xb0\xd0\xff\x1c\xf1\x4a\xb7\xe0\x75\xd3\xa8\xea\x94\x0e\xdb\xcb\x0c\x72\x28\xd0\xe5\x9f\x27\xda\xaf\x6c\x09\xfb\x07\x64\x8b\x52\xfb\xfd\x0f\x6d\x9d\x21\x1c\x42\x0b\x97\x19\x36\xaa\xca\x1c\xf9\x69\x17\xe6\x50\xff\xd6\x68\xcf\x79\x6a\xad\x73\x14\xf9\x4a\x3a\x28\x22\xe2\x8e\x28\xfa\xcb\x8a\xf2\xf2\xe0\x7f\xfe\xb1\x41\xef\x06\xc3\xf5\x9b\x72\x67\x4d\x09\x28\xf7\xdf\x74\xc0\x8e\x4a\x22\x82\x61\x15\x86\xb7\x6d\x91\x9c\xcd\x23\x7e\x12\xa9\x51\xa4\x2c\xa6\x5e\xf9\x22\xd0\xe6\x2e\x75\xda\x35\x9f\xd2\xaf\x00\x00\x00\xff\xff\x6b\x43\x21\x7d\x0a\x03\x00\x00")

func golangGetCountTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetCountTmpl,
		"golang.get-count.tmpl",
	)
}

func golangGetCountTmpl() (*asset, error) {
	bytes, err := golangGetCountTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-count.tmpl", size: 778, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetFirstTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x51\x6b\xdb\x30\x10\xc7\x9f\xad\x4f\x71\x0d\x7d\xb0\xc1\xd5\x07\xe8\xf0\x43\x19\x1b\xec\xa5\xb0\xe6\x71\x0c\xa3\x58\xe7\x4c\xab\x2c\xa5\x27\x39\x4d\x11\xfa\xee\xe3\x14\x27\x24\x63\x5b\x61\x0f\x81\xe8\xee\xf4\xff\x9f\x7e\xbe\x4b\xe9\x0e\x34\x8e\xc6\x21\xac\x82\xd9\x3a\x15\x67\xc2\x15\xdc\xe5\x2c\x3e\x1b\x0a\xb1\x4f\x09\xe4\x7a\x1e\x47\x73\x80\x9c\xeb\x94\x60\x88\x87\x9d\x22\x35\x81\x7c\xb0\xf6\x81\xb6\x01\x72\x6e\xa0\x16\x55\x4a\xb0\x24\x9e\xfc\x2b\xe4\xdc\x02\x12\xf1\xcf\x53\x23\xd8\x07\x9d\x2e\xc2\xe2\xd2\xd4\xb8\xbd\x7f\x7e\xd7\x51\xd1\xf6\xca\xef\xef\x7a\x1b\xaf\xdf\x56\x90\x73\xe9\x07\xa7\x0d\xea\x9d\x55\x03\xfe\xf0\x56\x23\x05\x90\x5f\xdc\xe8\xaf\xd2\xe1\xc5\x2e\xd1\x55\xdf\x97\x48\x1f\xe2\x14\x8b\x86\xa8\xf6\x8a\xa0\xef\xf7\xca\xce\x18\xe0\xdb\x77\xe3\x22\xd2\xa8\x06\x4c\x59\x54\xe7\x78\x07\x6a\xb7\x43\xa7\xeb\x53\xa4\x85\x94\x60\x34\x68\x75\x39\x83\x5c\x47\x15\xcd\x70\xee\xbe\xb8\x93\x72\x5b\x84\x5b\xd3\xc2\x2d\x3f\xef\xbe\x03\xf9\x38\x5b\xab\x36\x16\x97\x42\x51\x99\x11\x6e\x52\x2a\x05\xf2\x51\x4d\x08\x39\x4b\x13\xdc\x6c\x6d\xdd\x40\x12\x55\xd5\xf7\x83\x77\x9a\x99\xdd\x1a\x4e\xb2\x02\x74\x30\x2a\x1b\xb0\xa4\xff\xd9\xe2\x95\x6e\x89\xd7\x4d\x23\xaa\x85\x8e\xd3\x97\x0c\x18\x0a\x74\xfc\xe7\xc5\x6e\x66\xa7\x2d\xf6\x4f\xe8\x34\x52\xed\x37\x3f\xa5\x36\xca\xe2\x10\x5b\xb8\x64\xd8\x88\x8a\x73\xd6\x6f\xd7\x71\x8a\xf5\x51\xa3\x3d\xf3\x94\x52\x32\x8a\xbe\x27\xff\x1a\x8e\xd3\x72\xdf\x41\x51\x23\xb3\x47\x92\x5f\x67\xa4\xb7\x3f\x5f\x63\x32\x7c\xe1\xa6\x03\x67\x6c\x41\x41\x18\x67\x72\x7c\x6c\x8b\xc8\xa4\x9e\xf1\x13\x51\x8d\x44\xc7\x37\x69\x1c\x91\x5f\xc2\x76\xf2\xa3\xf5\x01\x6b\xf6\x67\xc6\x4b\xf0\x11\x0f\x71\x01\xbb\xe8\xdf\x77\xa7\x0b\x2c\xd5\x7c\xf8\xdd\xf4\x1d\x57\xb6\xbd\x2a\x71\xc6\x72\x2f\x05\xb0\x71\x26\x9e\x96\x45\x54\x2c\x7c\x36\x5b\x0f\xca\xf1\xe8\x2b\xad\xc9\x8f\x50\x8f\x56\xc5\x88\xae\x54\x37\x65\x84\xfe\x03\x80\x38\x55\xb0\x30\x2f\xd4\x69\x4f\xb9\xa9\xe5\x83\xf3\x3e\xfd\x0a\x00\x00\xff\xff\x82\xd1\x12\x31\x14\x04\x00\x00")

func golangGetFirstTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetFirstTmpl,
		"golang.get-first.tmpl",
	)
}

func golangGetFirstTmpl() (*asset, error) {
	bytes, err := golangGetFirstTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-first.tmpl", size: 1044, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetHasTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xcd\x6a\xdc\x30\x10\x80\xcf\xd6\x53\x4c\x96\x50\x6c\x70\xf4\x00\x05\x1f\x72\x28\xb4\x97\x40\xb3\xc7\x52\xcc\xd8\x1a\x7b\xd5\xc8\xd2\x66\x24\x6f\x13\x84\xde\xbd\x48\xeb\x2e\xbb\xd0\x9f\x83\xc1\x9a\x9f\x6f\x34\x1f\x8a\xf1\x01\x14\x4d\xda\x12\xec\xbc\x9e\x2d\x86\x95\x69\x07\x0f\x29\x89\xcf\xe8\xfb\x18\x41\xee\xd7\x69\xd2\x6f\x90\x52\x1d\x23\x8c\xe1\xed\x88\x8c\x0b\xc8\x47\x63\x1e\x79\xf6\x90\x52\x03\xb5\xa8\x0e\xe8\x61\x70\xce\xb4\x40\xcc\xf9\x73\xdc\x88\x4c\x27\xab\x0a\x4e\x5c\x8f\xd2\xf6\xe4\x5e\xfe\x33\x07\x79\xbe\x99\xf2\x77\xda\xe0\xd4\xfb\x0e\x52\x12\x55\x8c\x40\xcb\x40\xea\x68\x70\xa4\x83\x33\x8a\xd8\x83\xfc\x62\x27\x77\x93\xf6\xaf\x66\x8b\xee\xfa\xbe\x44\x7a\x1f\x96\x50\x18\xa2\x3a\x21\x43\xdf\x9f\xd0\xac\xe4\xe1\xdb\x77\x6d\x03\xf1\x84\x23\xc5\x24\xaa\x4b\xbc\x03\x3c\x1e\xc9\xaa\xfa\x77\xa4\x85\x18\x61\xd2\x64\x54\x39\x83\xdc\x07\x0c\x7a\xbc\xdc\xbe\x4c\x67\xb4\x33\xc1\xbd\x6e\xe1\x3e\xaf\xf7\xb1\x03\xf9\xb4\x1a\x83\x83\xa1\xad\x50\x54\x7a\x82\xbb\x18\x4b\x81\x7c\xc2\x85\x20\x25\xa9\xbd\x5d\x8d\xa9\x1b\x88\xa2\xaa\xfa\x7e\x74\x56\x65\x67\xf7\x3a\x27\x33\x01\x3a\x98\xd0\x78\x2a\xe9\x7f\x5e\xf1\x86\x5b\xe2\x75\xd3\x88\x6a\xb3\x63\xd5\xb5\x83\x2c\x05\xba\xfc\xf3\x6a\x86\xd5\x2a\x43\xfd\x33\x59\x45\x5c\xbb\xe1\x87\x54\x1a\x0d\x8d\xa1\x85\x6b\x87\x8d\xa8\x72\xce\xb8\x79\x1f\x96\x50\x9f\x19\xed\xc5\xa7\x94\x32\xab\xc8\x6f\xa4\x83\x02\x61\x7d\x22\x96\x5f\x57\xe2\xf7\x67\xf7\xf3\x8f\x0d\x72\x3f\xa2\xad\x3f\x1c\xd0\x37\x45\x4f\xee\xbe\xeb\xc0\x6a\x53\x7c\x30\x85\x95\xed\x79\xff\xb6\x40\x17\x7c\xa1\x4f\xcc\x35\x31\x9f\x57\xdb\x4a\x0e\xe8\xdb\xdc\x26\xb6\x55\xf3\x4b\xfa\x15\x00\x00\xff\xff\x00\x39\xc5\xaf\x02\x03\x00\x00")

func golangGetHasTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetHasTmpl,
		"golang.get-has.tmpl",
	)
}

func golangGetHasTmpl() (*asset, error) {
	bytes, err := golangGetHasTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-has.tmpl", size: 770, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetLastTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x41\x6f\xa3\x30\x10\x85\xcf\xf6\xaf\x98\xe5\x04\x12\xe1\xb4\xda\x5b\x4e\xab\x1e\x2a\xf5\xd2\xa4\x77\x64\xf0\x40\xdd\x18\x9b\x0c\x43\x9a\xd4\xf2\x7f\xaf\x0c\x89\x44\x0e\x96\xad\x99\x79\xef\xf3\xbc\x10\x76\xa0\xb1\x33\x0e\x21\x9b\x4c\xef\x14\xcf\x84\x19\xec\x62\x94\x3d\xf2\x9b\x9a\x38\x04\xa8\x0e\xc8\x33\xb9\xea\xe3\x36\x22\xc4\x98\xb7\x7c\x85\xd6\x3b\xc6\x2b\x57\xff\xd7\xbb\x94\x62\x3c\x81\x71\xfc\xef\x6f\x01\xb9\x14\x21\xc0\xa8\x48\x0d\x0f\x2d\xc4\x58\x02\x12\xa5\xe3\xa9\x90\x89\x8b\x4e\x2f\x20\xb9\xfd\x44\xe3\xf5\x6d\xe5\x27\x0f\x1c\x1a\xd4\xa3\x55\x2d\x7e\x7a\xab\x91\x26\xa8\x5e\x5d\xe7\x61\xdb\x9e\xce\xf6\x5e\xcd\xea\x7a\xa9\xd4\x13\x0f\x9c\xa5\x21\x29\x2e\x8a\xa0\x5e\x0a\xb0\x4f\x8f\xb3\x6d\x66\xa7\x2d\xd6\x07\x74\x1a\x29\xf7\xcd\x57\xa5\x8d\xb2\xd8\x72\x09\x5b\x7d\x21\x45\xea\x59\xdf\x1f\x79\xe0\x7c\xf5\x28\x61\x3c\x15\x72\x61\x1b\x67\x78\xb3\x9d\x14\x69\xbb\x3d\x2c\x7e\x64\x2e\x48\xd5\xfb\x8c\x74\x3b\xf8\xef\xad\xb6\x3a\xb6\xca\xe5\x21\x80\xd2\x9a\x7c\x07\x79\x67\x15\x33\xba\x87\x53\x01\x31\x16\x52\x98\x6e\x09\xeb\xcf\x1e\x9c\xb1\x10\xa4\x10\xb4\x82\x42\x80\x1f\x24\xff\x14\x6b\x42\x0e\xea\x84\x2f\x44\x39\x12\x15\x52\x44\xb9\x99\x57\xd4\x3f\x8d\x3b\x63\x65\xca\xee\x9e\xfe\x6f\x00\x00\x00\xff\xff\x3a\xb2\xd4\xf6\x02\x02\x00\x00")

func golangGetLastTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetLastTmpl,
		"golang.get-last.tmpl",
	)
}

func golangGetLastTmpl() (*asset, error) {
	bytes, err := golangGetLastTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-last.tmpl", size: 514, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetLimitoffsetTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xc1\x6a\xdc\x30\x10\x3d\x4b\x5f\x31\x59\x72\xb0\xc1\xd1\xa9\xf4\x90\xe2\x43\x28\x3d\x14\x4a\xa0\xd9\x63\x29\x46\x6b\x8d\xb6\x6a\x64\x69\x23\xc9\x9b\x0d\xc2\xff\x5e\x46\xf6\x2e\xbb\x21\xa4\xed\xc1\x60\xcd\x8c\xde\x7b\xf3\x34\x93\xf3\x0d\x28\xd4\xc6\x21\xac\xa2\xd9\x3a\x99\xc6\x80\x2b\xb8\x99\x26\xfe\xcd\x0c\x26\xa1\xea\x72\x06\xb1\x1e\xb5\x36\x07\x98\xa6\x2a\x67\xe8\xd3\x61\x27\x83\x1c\x40\xdc\x59\x7b\x17\xb6\x11\xa6\xa9\xe1\xcc\x52\x3d\x18\x97\x1a\xf0\x5a\x47\x2c\xff\x1f\x3f\xd4\x50\x71\x16\xfc\x73\x84\x9c\x21\x5a\xd3\xa3\xd7\x20\x1e\xfc\x33\xdd\x02\x0c\x81\x3e\x1f\x6a\x4e\x52\xd0\xa9\xc2\xcd\xf9\xb9\x30\xe3\xf6\xfe\xf1\x1f\x54\xc9\xb0\xbd\xd0\x04\x45\xd2\x51\xce\x2b\x86\x73\x82\x8d\x57\x2f\x2b\x98\x26\xce\x72\x06\x1c\x36\xa8\x76\x56\xf6\xf8\xcb\x5b\x85\x21\x82\xf8\xea\xb4\xbf\x48\xc7\x27\xbb\x44\x57\x5d\x57\x22\x5d\x4c\x43\x2a\x18\x9c\xed\x65\x80\xae\xdb\x4b\x3b\x62\x84\x1f\x3f\x8d\x4b\x18\xb4\xec\x31\x4f\x9c\x9d\xe2\x2d\xc8\xdd\x0e\x9d\xaa\x8e\x91\x86\x0c\xd2\x06\xad\x2a\x67\x10\xeb\x24\x93\xe9\x97\x66\x6a\x5e\xd8\x83\x74\x5b\x84\x6b\xd3\xc0\x35\x75\x7b\xdb\x82\xb8\x1f\xad\x95\x1b\x8b\x4b\x21\x67\x46\xc3\x55\xce\xa5\x40\xdc\xcb\x01\x61\x9a\x84\x89\x6e\xb4\xb6\xaa\x21\x73\xc6\xba\xae\xf7\xae\x58\x78\x6d\x28\x49\x08\xd0\x82\x96\x36\x62\x49\xbf\x2b\xf1\x02\xb7\xc4\xab\xba\xe6\x6c\x71\xc7\xa9\xd9\x83\xf7\x40\x5e\x3d\xcb\xd1\x30\x72\x10\x5a\xfa\x79\xb2\x9b\xd1\x29\x8b\xdd\x03\x3a\x85\xa1\xf2\x9b\xdf\x42\x19\x69\xb1\x4f\x0d\x9c\x1b\x5e\x73\x46\x39\xeb\xb7\xeb\x34\xa4\x6a\xc6\x68\x4e\xe6\x0b\x21\xea\xa2\x85\xe6\x6f\x1e\xb6\xdb\x16\x0a\x5a\x30\x7b\x0c\xe2\xfb\x88\xe1\xe5\xed\x6b\x64\x23\x5d\xb8\x6a\xc1\x19\x5b\x7c\x0b\x98\xc6\xe0\xe8\xd8\x14\x90\x41\x3e\xe2\x97\x10\x2a\x0c\x61\x36\x40\xa1\x46\xea\x84\xe8\xc4\x67\xeb\x23\x56\xc4\xaf\xfd\x29\x78\x8f\x87\xb4\xbc\x42\xce\x60\x9c\x49\x0e\x9f\x8f\xeb\xc0\x19\x23\xc6\xf6\x58\xbc\xee\xa5\xa3\xd1\x96\x4a\x05\xaf\xa1\xd2\x56\xa6\x84\xae\x94\xd7\x65\x26\xd8\x1b\x2a\xff\x22\x93\x74\xce\xfb\x78\x7a\x99\xd9\x1d\x22\xa2\x05\x9a\xb5\xcc\x0d\x2d\xe8\xb7\x27\x49\x84\x53\x7f\xfa\x6f\x63\x96\x82\x99\xc8\x19\xcb\x97\x51\xa1\x4d\xfc\x13\x00\x00\xff\xff\xed\x93\x86\x3b\x83\x04\x00\x00")

func golangGetLimitoffsetTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetLimitoffsetTmpl,
		"golang.get-limitoffset.tmpl",
	)
}

func golangGetLimitoffsetTmpl() (*asset, error) {
	bytes, err := golangGetLimitoffsetTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-limitoffset.tmpl", size: 1155, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetOneAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\xdd\x6a\x1b\x3d\x10\x86\x8f\x77\xaf\x62\x62\xf2\xc1\x2e\x38\xba\x80\x7c\xec\x41\x28\xa5\xf4\xa0\x86\xc6\x87\xa5\x2c\xf2\x6a\xe4\xaa\xd1\x4a\xf6\x48\xeb\x24\x08\xdd\x7b\x19\x65\xed\xda\xfd\x4b\xe9\x41\x20\x3b\x3f\xef\x3b\xf3\xa0\x71\x4a\x37\xa0\x50\x1b\x87\xb0\x08\x66\xeb\x64\x9c\x08\x17\x70\x93\x73\xfd\x0e\x63\x9f\x12\x88\xf5\xa4\xb5\x79\x82\x9c\x9b\x94\x60\x88\x4f\x3b\x49\x72\x04\x71\x67\xed\x1d\x6d\x03\xe4\xdc\x42\x53\x57\x29\xc1\x9c\xb8\xf7\x8f\x90\xf3\x12\x90\x88\xff\x3c\xb5\x35\xbb\xa0\x53\x45\xb6\x3e\xb7\x34\xee\xe0\x1f\x5e\xf1\x93\xb4\xbd\x70\xfb\xbd\xda\xc6\xab\xe7\x05\xe4\x5c\xa6\xc1\x71\x83\x6a\x67\xe5\x80\x5f\xbc\x55\x48\x01\xc4\x7b\xa7\xfd\x45\x3a\xec\xed\x1c\x5d\xf4\x7d\x89\xf4\x21\x8e\xb1\x68\xd4\xd5\x41\x12\xf4\xfd\x41\xda\x09\x03\x7c\xfa\x6c\x5c\x44\xd2\x72\xc0\x94\xeb\xea\x14\xef\x40\xee\x76\xe8\x54\x73\x8c\x2c\x21\x25\xd0\x06\xad\x2a\xdf\x20\xd6\x51\x46\x33\x9c\xa6\x2f\xee\x24\xdd\x16\xe1\xda\x2c\xe1\x9a\xd7\xbb\xed\x40\xac\x26\x6b\xe5\xc6\xe2\x5c\x58\x57\x46\xc3\x55\x4a\xa5\x40\xac\xe4\x88\x90\xb3\x30\xc1\x4d\xd6\x36\x2d\xa4\xba\xaa\xfa\x7e\xf0\x4e\x31\xb3\x6b\xc3\x49\x56\x80\x0e\xb4\xb4\x01\x4b\xfa\x8f\x23\x5e\xe8\x96\x78\xd3\xb6\x75\x35\xd3\x71\xea\x9c\x01\x43\x81\x8e\xff\xd9\xdb\xcd\xe4\x94\xc5\xfe\x1e\x9d\x42\x6a\xfc\xe6\xab\x50\x46\x5a\x1c\xe2\x12\xce\x19\xb6\x75\xc5\x39\xeb\xb7\xeb\x38\xc6\xe6\x45\x63\x79\xe2\x29\x84\x60\x14\x7d\x4f\xfe\x31\xbc\xbc\x95\xdb\x0e\x8a\x1a\x99\x03\x92\xf8\x38\x21\x3d\xff\xba\x8d\xc9\x70\xc3\x55\x07\xce\xd8\x82\x82\x30\x4e\xe4\xf8\x73\x59\x44\x46\xf9\x80\x6f\x89\x1a\x24\x7a\xd9\x49\xa1\x46\xde\x84\xed\xc4\x1b\xeb\x03\x36\xec\xcf\x8c\xe7\xe0\x0a\x9f\xe2\x0c\x76\xd6\xbf\xed\x8e\x0d\x2c\xd5\xfe\xff\xa3\xe9\x2b\xae\x6c\x7b\x51\x72\x4c\x87\xbd\x65\xc5\x95\xbf\xf7\x8f\xa1\x8c\x57\x98\x1b\x67\xe2\xf1\x7a\xea\x8a\xbd\x4e\xfe\xeb\x41\x3a\xbe\x06\xa9\x14\x79\x0d\x8d\xb6\x32\x46\x74\xa5\xba\x2d\xaf\xea\x1f\x98\x94\x9e\x9f\x97\x3f\x6f\x8b\xde\x7f\x90\xee\x99\xe7\x64\xfb\x1d\x19\x17\x35\x2c\xfe\xdb\x2f\xce\xce\xf4\xbb\xd8\xdf\x40\x7b\x7d\xaa\xb9\x82\xd7\xe5\xcb\x3f\xfe\x9c\x38\x63\xeb\xf9\x65\xf2\xe1\x7f\x0b\x00\x00\xff\xff\x2f\xa6\x55\x23\xb9\x04\x00\x00")

func golangGetOneAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetOneAllTmpl,
		"golang.get-one-all.tmpl",
	)
}

func golangGetOneAllTmpl() (*asset, error) {
	bytes, err := golangGetOneAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-one-all.tmpl", size: 1209, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetOneTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xcf\x6e\xdb\x3c\x10\xc4\xcf\xe2\x53\x6c\x0c\x1f\x24\xc0\xe1\x03\x7c\x80\x0e\x39\x7c\x28\x7a\x09\x50\xfb\x58\x14\x02\x25\x2e\x55\x36\x2b\xd2\x59\x51\x4e\x52\x82\xef\x5e\x90\x91\x1d\x1b\xe8\x9f\x83\x00\x69\x67\x31\xb3\xfa\x61\x62\xbc\x07\x8d\xc6\x3a\x84\xcd\x6c\x47\xa7\xc2\xc2\xb8\x81\xfb\x94\xc4\x27\x0c\x5d\x8c\x20\x0f\x8b\x31\xf6\x15\x52\xaa\x63\x84\x21\xbc\x1e\x15\xab\x09\xe4\x03\xd1\x03\x8f\x33\xa4\xd4\x40\x2d\xaa\x18\x61\x15\xf6\xfe\x05\x52\xda\x01\x32\xe7\xc7\x73\x23\x72\x0a\x3a\x5d\x6c\xc5\x75\xa4\x75\x27\xff\xf4\x8f\x3c\xc5\xe3\x4d\xda\x9f\xdd\x7a\xaf\xdf\x36\x90\x52\xb9\x06\xa7\x1e\xf5\x91\xd4\x80\xdf\x3d\x69\xe4\x19\xe4\x67\x67\xfc\x8d\x3c\x3f\xd3\x3a\xdd\x74\x5d\x99\x74\x73\x98\x42\xf1\x10\xd5\x49\x31\x74\xdd\x49\xd1\x82\x33\x7c\xfd\x66\x5d\x40\x36\x6a\xc0\x98\x44\x75\x99\xb7\xa0\x8e\x47\x74\xba\x3e\x4f\x76\x10\x23\x18\x8b\xa4\xcb\x37\xc8\x43\x50\xc1\x0e\x97\xeb\x4b\x3a\x2b\x37\x22\x6c\xed\x0e\xb6\xf9\xf7\xfe\x6b\x41\x3e\x2e\x44\xaa\x27\x5c\x17\x45\x65\x0d\xdc\xc5\x58\x16\xe4\xa3\x9a\x10\x52\x92\x76\x76\x0b\x51\xdd\x40\x14\x55\xd5\x75\x83\x77\x3a\x33\xdb\xda\x2c\x66\x07\x68\xc1\x28\x9a\xb1\xc8\x7f\x3d\xf1\xc6\xb7\xcc\xeb\xa6\x11\xd5\x4a\xc7\xe9\x6b\x06\x19\x0a\xb4\xf9\xe5\x99\xfa\xc5\x69\xc2\x6e\x8f\x4e\x23\xd7\xbe\xff\x21\xb5\x55\x84\x43\xd8\xc1\x35\xc3\x46\x54\x59\x23\x3f\x1e\xc2\x14\xea\x77\x8f\xdd\x85\xa7\x94\x72\x45\x61\x9d\x0d\xe7\xd2\x88\x2a\x97\xa6\x85\xe2\xca\xf6\x84\x2c\xbf\x2c\xc8\x6f\x7b\xff\xf2\x5b\x07\x79\x18\x94\xcb\x35\x51\x5a\xb3\x37\x50\x1b\x52\x21\xa0\x2b\x7e\x4d\xc1\x9d\x31\x66\xd3\xbb\x16\x9c\xa5\xc2\x8d\x31\x2c\xec\x32\x83\x9f\xc8\xfe\xa3\xb0\x39\x75\x52\x4f\xf8\x3f\x73\x8d\xcc\xef\x30\x3e\x96\x4b\x0f\xcf\xbb\xce\x92\x58\x39\xe5\x1a\xfe\x0a\x00\x00\xff\xff\x87\x4f\x2c\x01\x47\x03\x00\x00")

func golangGetOneTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetOneTmpl,
		"golang.get-one.tmpl",
	)
}

func golangGetOneTmpl() (*asset, error) {
	bytes, err := golangGetOneTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-one.tmpl", size: 839, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetPagedTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xdd\x6e\xdb\x3c\x0c\xbd\xb6\x9e\x82\x0d\x8a\xc2\xfe\xe0\xea\x01\xfa\xc1\x17\x45\xb1\x01\xbb\x29\xb6\x66\x77\xc3\x60\x28\x16\x9d\x69\x95\xa5\x54\x92\xd3\x14\x9a\xdf\x7d\xa0\xac\xa4\xcd\xba\xb6\x43\x2f\x12\x40\xf4\x21\x79\x78\xf8\x13\xe3\x39\x48\xec\x95\x41\x58\x78\xb5\x36\x22\x8c\x0e\x17\x70\x3e\x4d\xec\xb3\x58\xa3\x6c\x63\x04\xbe\x1c\xfb\x5e\xed\x60\x9a\xca\x18\xa1\x0b\xbb\x8d\x70\x62\x00\x7e\xa9\xf5\xa5\x5b\x7b\x98\xa6\x9a\x15\x5a\x0d\x2a\x80\x32\xa1\x06\x1f\x84\x0b\xf0\x1f\x79\x5e\x59\x13\x94\x19\x45\x50\xd6\xf0\xaf\x0f\x1b\x84\x69\xaa\xa0\x64\x85\xb3\xf7\x1e\x62\x04\xaf\x55\x87\xb6\x07\x7e\x63\xef\x29\x10\x18\xdc\xbd\xe2\x5b\x03\x3a\x47\x3f\xeb\x2a\x46\xdc\xd1\xc8\x44\x96\x3d\x2d\x44\x99\xad\xbd\x7d\xb3\x0a\xe1\xd6\x47\x35\x40\x2a\x21\xd3\x7f\x25\xfa\xca\xca\x87\x05\x4c\x13\x2b\x62\x04\x1c\x56\x28\x37\x5a\x74\xf8\xc3\x6a\x89\xce\x03\xff\x64\x7a\x7b\xf4\xd9\xdf\xe9\x6c\x5d\xb4\x6d\xb2\xb4\x3e\x0c\x61\xf1\x1c\xf4\x51\x39\x1f\x8e\x91\x3d\x99\x1e\xf1\xac\xd8\x0a\x07\x6d\xbb\x15\x7a\x44\x0f\xdf\xbe\x2b\x13\xd0\xf5\xa2\xc3\x38\xb1\xe2\x60\x6f\x40\x6c\x36\x68\x64\xb9\xb7\xd4\x24\x76\xaf\x50\xcb\xf4\x06\xbe\x0c\x22\xa8\x2e\xd7\x5e\xb1\x44\xc4\x09\xb3\x46\x38\x55\x35\x9c\x92\x38\x17\x0d\xf0\xeb\x51\x6b\xb1\xd2\x98\x81\xac\x50\x3d\x9c\xc4\x98\x00\xfc\x5a\x0c\xd4\x14\xae\xbc\x19\xb5\x2e\x2b\x88\xac\x28\xda\xb6\xb3\x26\x29\x7e\xaa\xe8\x23\x45\x80\x06\x7a\xa1\x3d\xa6\xcf\xaf\x52\x3c\x8a\x9b\xec\x65\x55\xb1\x22\x0b\x65\xe4\x53\x0d\x48\x14\xf0\xc1\x29\xb3\x4e\xbc\xe6\xb9\x3b\x69\xc0\x28\x0d\x67\x67\xf3\x9b\xb7\x1e\x43\x26\xf6\x72\xe6\x0c\x4d\xcf\x3c\x08\x55\x72\x49\x39\x1a\x4a\x76\xa7\x57\xa3\x91\x1a\xdb\x1b\x34\x12\x5d\x69\x57\x3f\xb9\x54\x42\x63\x17\x6a\x78\xda\x57\xa2\x0b\xa8\x3d\xbe\x99\xf5\xfd\x79\x1e\xa7\x62\x16\x87\x40\xda\xae\x97\x61\x08\xe5\x1c\xac\x3e\x0c\x09\xe7\x9c\xfa\xdb\xb6\xb4\x73\xf3\x02\x5d\x34\x90\xc2\x3a\xb5\x45\xc7\xbf\x8c\xe8\x1e\xfe\xee\x46\xb2\x92\x43\x16\x95\x0a\x72\x18\x46\x67\xe8\x59\xcf\x7f\x14\x69\x10\xb7\xf8\xc1\xb9\x12\x9d\x9b\x09\x49\xec\x91\x7a\x44\x39\xf9\x95\xb6\x1e\xcb\x3c\x64\x12\x3b\x2d\x1c\x1e\xef\xf7\x7e\x15\x8e\x97\x7e\x3f\x07\xa9\x85\x0d\x04\x37\x22\x63\x45\x6f\x0f\x81\xaf\x71\x17\xf2\xd8\xc5\x08\xca\xa8\x60\xf0\x7e\x7f\x4b\x58\x51\x10\xf5\x66\x0f\x5e\x76\xc2\xd0\xea\x0b\x29\x9d\xed\xa1\xec\xb5\x08\x01\x4d\x82\x57\xf0\x0b\x3a\x3b\x0c\x02\xa6\xe9\x11\xf2\x27\xc5\x3c\x20\xd4\xb1\xe7\xba\xfc\x8b\x30\xa4\xcc\x7c\xfa\x0e\xd3\x30\x37\x85\x72\xd2\x39\x9a\x99\x13\x32\xdd\xc1\x06\x5e\x26\x93\x64\xce\x34\x2e\x0e\x45\x52\xae\xea\xff\x77\xf5\x8c\xed\x61\x33\x25\x22\x90\xd0\x2c\x6f\x1e\x1d\xc2\xdf\x01\x00\x00\xff\xff\x64\x2d\x17\xc2\x2f\x06\x00\x00")

func golangGetPagedTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetPagedTmpl,
		"golang.get-paged.tmpl",
	)
}

func golangGetPagedTmpl() (*asset, error) {
	bytes, err := golangGetPagedTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-paged.tmpl", size: 1583, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetScalarAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\xdd\x8a\xdb\x3c\x10\x86\x8f\xed\xab\x98\x35\xfb\x81\x0d\x5e\x5d\xc0\x7e\xf8\x60\x29\x2d\xf4\xa0\x0b\xdd\x1c\x96\x62\x14\x6b\x94\xaa\x2b\x4b\xd9\xb1\x9c\xdd\x45\xe8\xde\xcb\x28\x4e\x9a\xf4\x2f\xa5\x07\x81\x68\x7e\xde\x77\xe6\x41\x72\x8c\x37\xa0\x50\x1b\x87\x50\x4d\x66\xe3\x64\x98\x09\x2b\xb8\x49\xa9\x7c\x67\x9c\xea\x63\x04\xb1\x9a\xb5\x36\x2f\x90\x52\x1d\x23\x0c\xe1\x65\x2b\x49\x8e\x20\xee\xac\xbd\xa3\xcd\x04\x29\x35\x50\x97\x45\x8c\xb0\x24\x1e\xfc\x33\xa4\xd4\x02\x12\xf1\xcf\x53\x53\xb2\x0d\x3a\x95\x75\xcb\x53\x4f\xe3\x76\xfe\xf1\x92\xa1\xa4\xcd\x99\xdd\xef\xe5\xd6\x5e\xbd\x56\x90\x52\x1e\x07\xc7\x35\xaa\xad\x95\x03\x7e\xf1\x56\x21\x4d\x20\xde\x3b\xed\xcf\xd2\xd3\x93\x5d\xa2\x55\xdf\xe7\x48\x3f\x85\x31\x64\x8d\xb2\xd8\x49\x82\xbe\xdf\x49\x3b\xe3\x04\x9f\x3e\x1b\x17\x90\xb4\x1c\x30\xa6\xb2\x38\xc6\x3b\x90\xdb\x2d\x3a\x55\x1f\x22\x2d\xc4\x08\xda\xa0\x55\xf9\x0c\x62\x15\x64\x30\xc3\x71\xfa\xec\x4e\xd2\x6d\x10\xae\x4d\x0b\xd7\xbc\xde\x6d\x07\xe2\x7e\xb6\x56\xae\x2d\x2e\x85\x65\x61\x34\x5c\xc5\x98\x0b\xc4\xbd\x1c\x11\x52\x12\x66\x72\xb3\xb5\x75\x03\xb1\x2c\x8a\xbe\x1f\xfc\x9e\xd9\xb5\xe1\x24\x2b\x40\x07\x5a\xda\x09\x73\xfa\x8f\x23\x9e\xe9\xe6\x78\xdd\x34\x65\xb1\xd0\x71\xea\x94\x01\x43\x81\x8e\xff\x3c\xd9\xf5\xec\x94\xc5\xfe\x01\x9d\x42\xaa\xfd\xfa\xab\x50\x46\x5a\x1c\x42\x0b\xa7\x0c\x9b\xb2\xe0\x9c\xf5\x9b\x55\x18\x43\xbd\xd7\x68\x8f\x3c\x85\x10\x8c\xa2\xef\xc9\x3f\x4f\xfb\xcb\x72\xdb\x41\x56\x23\xb3\x43\x12\x1f\x67\xa4\xd7\x5f\xb7\x31\x19\x6e\xb8\xea\xc0\x19\x9b\x51\x10\x86\x99\x1c\x1f\xdb\x2c\x32\xca\x47\x7c\x4b\x54\x23\xd1\x7e\x27\x85\x1a\x79\x13\xb6\x13\x6f\xac\x9f\xb0\x66\x7f\x66\xbc\x04\xef\xf1\x25\x2c\x60\x17\xfd\xdb\xee\xd0\xc0\x52\xcd\xff\x3f\x9a\x5e\x70\x65\xdb\xb3\x12\x67\x2c\xcf\x92\x01\x1b\x67\xc2\xe1\xad\x94\x05\x0b\x1f\xcd\x56\x83\x74\x7c\xf5\xa5\x52\xe4\x35\xd4\xda\xca\x10\xd0\xe5\xea\x26\x5f\xa1\x7f\x00\x90\x7b\x7e\xde\xf4\xb4\x2d\x78\xff\x41\xba\xd7\x07\xff\x3c\xb1\xfd\x96\x8c\x0b\x1a\xaa\xff\x9e\xaa\x93\x37\xf9\x5d\xec\x6f\x08\x5d\x9e\x6a\xa9\xe0\x75\xf9\x99\x1f\x3e\x1e\x8c\x6a\xb9\x86\xfc\xca\xbf\x05\x00\x00\xff\xff\x62\x10\xdc\x10\xa8\x04\x00\x00")

func golangGetScalarAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetScalarAllTmpl,
		"golang.get-scalar-all.tmpl",
	)
}

func golangGetScalarAllTmpl() (*asset, error) {
	bytes, err := golangGetScalarAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-scalar-all.tmpl", size: 1192, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetScalarTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xc1\x8a\xdb\x3c\x10\xc7\xcf\xd6\x53\xcc\x86\x1c\x6c\xc8\xea\x01\x3e\xf0\x61\x0f\xfb\x41\x2f\x81\x26\xc7\x52\x8c\x62\x8d\x53\x75\xc7\x52\x32\x92\x93\xdd\x0a\xbd\x7b\x91\xe2\xcd\x26\xd0\x6e\x0f\x06\x7b\x46\xfa\xcd\xf8\xc7\x3f\xc6\x47\xd0\x38\x18\x8b\xb0\xf0\x66\x6f\x55\x98\x18\x17\xf0\x98\x92\xf8\xdf\x58\xdd\xc5\x08\x72\x3b\x0d\x83\x79\x85\x94\xea\x18\xa1\x0f\xaf\x07\xc5\x6a\x04\xf9\x44\xf4\xc4\x7b\x0f\x29\x35\x50\x8b\x2a\x46\x98\x1b\x1b\x77\x86\x94\x56\x80\xcc\xf9\x71\xdc\x88\x3c\x06\xad\x2e\x5c\x71\x3b\xd3\xd8\x93\x7b\xf9\xd7\x40\xc5\xfb\xbb\x71\x7f\xc7\xed\x9c\x7e\x5b\x40\x4a\x65\x1d\x1c\x77\xa8\x0f\xa4\x7a\xfc\xe1\x48\x23\x7b\x90\x5f\xec\xe0\xee\xda\xfe\x48\x73\x75\xd1\x75\xa5\xd2\xf9\x30\x86\xc2\x10\xd5\x49\x31\x74\xdd\x49\xd1\x84\x1e\xbe\x7d\x37\x36\x20\x0f\xaa\xc7\x98\x44\x75\xad\xb7\xa0\x0e\x07\xb4\xba\x7e\xaf\xac\x20\x46\x18\x0c\x92\x2e\xdf\x20\xb7\x41\x05\xd3\x5f\xb7\x2f\xd3\x59\xd9\x3d\xc2\xd2\xac\x60\x99\x7f\xef\xbf\x16\xe4\x7a\x22\x52\x3b\xc2\xf9\xa0\xa8\xcc\x00\x0f\x31\x96\x03\x72\xad\x46\x84\x94\xa4\xf1\x76\x22\xaa\x1b\x88\xa2\xaa\xba\xae\x77\x17\x67\x4b\x93\x9b\x99\x00\x2d\x0c\x8a\x3c\x96\xf6\xa7\x2b\xde\x71\x4b\xbd\x6e\x1a\x51\xcd\x76\xac\xbe\x75\x90\xa5\x40\x9b\x5f\x8e\xb4\x9b\xac\x26\xec\x36\x68\x35\x72\xed\x76\x3f\xa5\x36\x8a\xb0\x0f\x2b\xb8\x75\xd8\x88\x2a\xf7\xc8\xed\xb7\x61\x0c\xf5\x85\xb1\xba\xfa\x94\x52\xce\x2a\x8c\x35\xe1\x3d\x35\xa2\xca\xa9\x69\xa1\x50\xd9\x9c\x90\xe5\xd7\x09\xf9\x6d\xe3\xce\x7f\x24\xc8\x6d\xaf\x6c\x8e\x89\xd2\x9a\xdd\x00\xf5\x40\x2a\x04\xb4\x85\xd7\x14\xdd\x59\x63\x81\xb6\xe0\x8f\x24\x9f\x99\xd7\x6e\xe3\xce\xbe\x18\x64\x0c\x13\xdb\x6c\xe3\x17\xb2\xfb\xc8\xae\x35\x54\x4c\xcc\x77\x1f\xda\x5c\xf9\xf4\x46\xde\x78\x54\x2f\xf8\xcc\x5c\x23\xf3\x45\xe4\xc7\xe1\x92\xe1\x5b\xfa\xec\x38\x47\xf8\x77\x00\x00\x00\xff\xff\x74\x62\xde\x03\x85\x03\x00\x00")

func golangGetScalarTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetScalarTmpl,
		"golang.get-scalar.tmpl",
	)
}

func golangGetScalarTmpl() (*asset, error) {
	bytes, err := golangGetScalarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-scalar.tmpl", size: 901, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x59\x6d\x6f\xdc\x36\xb6\xfe\x2c\xfd\x8a\x93\xb9\x49\x20\x19\x13\xba\x40\x2f\x2e\x70\x55\xcc\x02\xb1\xc7\xd9\x35\xd6\xb1\x53\x7b\xdc\x62\xd1\x16\x53\x8d\x44\x39\xaa\x39\xe4\x98\xa4\x66\xe4\x9d\xea\xbf\x2f\x0e\x49\x49\xd4\xbc\xb8\x49\xbb\xf9\x12\x0d\x79\x5e\x9f\x73\xf8\xf0\xc5\xdb\xed\x3b\x78\x2d\x56\xba\x14\x5c\x41\x32\x01\x72\xe3\xbe\xdf\x35\x4d\x18\x9e\x9e\xc2\xfb\xfb\xd9\xcd\xdf\x2f\xae\x2f\x6e\xdf\xcf\x2e\xa6\x70\xf6\x2f\x50\x5a\xc8\xdf\x48\x29\x4e\xf3\x45\x8d\x02\xd3\x1b\xb8\xbe\x99\xc1\xc5\xf4\x72\x46\xc2\x70\x95\x66\x8f\xe9\x03\x85\xed\x16\xc8\x27\xf7\x8d\x96\xca\xe5\x4a\x48\x0d\x51\x18\x8c\x16\xcf\x9a\xaa\x51\x18\x8c\x32\xc1\x35\xad\x35\x7e\xe6\xa9\x4e\x17\xa9\xa2\xa7\xea\x89\xe1\x6f\x2a\xa5\x90\x46\xa8\x58\x1a\x01\x49\x0b\x46\x33\xf3\xa9\xb4\xcc\x04\x5f\xbb\xcf\x92\x3f\x18\x39\x5d\x2e\x29\xfe\x5f\xf1\x32\x13\xb9\xf9\x54\xcf\x3c\x1b\x85\x21\xa6\x28\x53\xfe\x40\x81\x5c\xd4\x5a\xa6\x97\x26\x14\x85\x61\x05\x18\x26\x7e\xa0\x0c\xe5\x39\x7e\xc6\x26\xed\x4f\x92\xae\x29\xd7\x90\x09\x9e\x97\x88\x48\xca\xa0\x74\x8a\x85\x14\x4b\xc8\xd2\x4a\x95\xfc\x01\x16\x55\xc9\x72\x28\xd2\x92\x55\x92\xaa\x70\x9d\x4a\x98\xc3\x04\x5c\x90\xe4\x52\x8b\xd4\x1f\xc4\x70\xc9\x55\xaa\xf4\x25\xcf\x69\xdd\xcd\x14\x4b\x4d\xee\x56\xb2\xe4\xda\x0d\x61\xec\xe4\x63\xa5\x69\x1d\x9a\x91\x28\x0c\x7e\x94\xe9\xea\x42\x4a\x94\xae\x78\x16\x51\x29\xe1\xe4\x02\x71\x8a\xc1\xc0\x05\x5b\x49\x75\x25\x39\xfe\x6a\xc2\xe0\x4a\x3c\x3c\x50\x69\x65\x0b\x21\x97\xa9\x76\xfe\xc7\x90\xca\x07\x05\x84\x90\x92\x6b\x2a\x8b\x34\xa3\xdb\x26\x0e\xc3\x80\x4a\x39\x13\xe2\x63\xca\x9f\x6f\xc5\x46\xc1\xc4\x9a\x55\xe4\x9a\x6e\xa2\x91\x16\x02\x96\x29\x7f\x06\x29\x36\x6a\x14\x1b\xe9\x7b\xae\xaa\x15\x62\x42\xf3\xa9\x2c\xd7\x54\xee\xe8\x54\xfd\x3c\xe4\x46\xc0\x29\x5e\x2c\x57\xfa\xf9\x7e\x95\xa7\x9a\xee\xa8\x50\x9c\x81\xca\x4c\x8d\x62\x2c\x06\x26\x00\x4c\x3c\x98\x54\xbf\x24\x13\xd8\x86\x41\x59\x80\xcb\xff\xd5\x04\x78\xc9\x70\xcc\x21\xe2\x4c\x58\x5d\x42\x48\x1c\x06\x4d\xd8\x84\xa1\x7e\x5e\x51\x30\x4e\xce\x45\x4e\x01\x4b\x11\x66\x82\x2b\xd3\xb4\xdd\xf8\xfc\x9e\x3f\x72\xb1\xe1\x9e\xe4\x04\x4a\xa1\xd3\xa1\xcc\x0e\x2e\xfe\xe4\xb5\x40\x74\xfd\x91\x59\x3d\x15\x9c\x0e\x46\xfa\x32\xf8\xc3\xe7\x18\x8e\x4c\x4b\xae\x7f\x28\x05\x4b\xb1\x2d\xfd\x69\x0f\x55\x04\xae\x4f\x08\xe1\xaa\x32\x8d\x20\x60\x03\x19\xbc\xc3\xc0\x04\xdf\x69\x87\x81\x2b\xa1\x85\x16\xa7\x5b\x67\xdd\xd0\xf7\x15\x95\xcf\x77\x55\x51\x94\x75\x3b\xd6\xb8\x02\x45\xb4\x6b\x46\x5b\xa8\xd8\x49\xa0\xd3\xb6\x2f\xc9\x85\x94\xc4\x4d\x77\x9a\x1b\xdb\xd6\x9e\x01\xd7\xcd\xa6\x8a\x5d\xd3\xf7\x65\x6c\xad\x61\xdd\xda\x1f\x3f\xb6\x46\x7a\xbb\xcb\xf4\x91\x9a\xa1\x36\xe3\xa1\x61\x7a\xd0\x28\x2f\x99\x31\x4b\x91\x0b\xdf\x9a\x78\xb6\x17\x52\x26\x6e\x4d\xa9\x4d\xa9\xb3\xcf\x46\x77\x1b\x06\x59\xaa\x28\xa8\x27\x86\x29\xd9\xaa\x26\x61\x10\x50\xe2\xba\x62\xbf\xe4\xbe\x82\x2d\xfa\x11\x85\xb6\x23\xfa\x04\x37\xfb\x09\x56\xbb\x5d\x16\xe5\x7e\x05\xbd\x74\x77\x6c\xb8\xbc\xc2\x20\x68\x53\xdb\x6b\xd8\x71\x18\x98\xfe\x48\xe0\x85\xae\x46\x21\xfb\x95\xb8\xe5\x3d\x0e\x83\xa6\x0f\x90\xf6\xfd\x18\x7d\x4d\x34\x5e\x1f\x1f\x8a\x63\x38\xed\xf9\xd3\xfd\xaa\x89\x9e\xb0\x55\xe7\xca\xef\xd5\xaf\x09\xc1\x5b\x80\x87\x42\xd8\x99\xf6\xd6\x45\x02\xbe\xe7\x61\x7c\xd9\xfe\xf2\xed\xbb\x73\xec\x4d\xff\x89\x80\x0f\x45\x79\x80\x2e\xac\x58\x3b\x9c\x78\x3e\xbb\x50\x0d\x6d\xb8\x4e\xea\x68\xd5\x50\x47\x4d\x33\x8b\xeb\xcb\xf4\x1b\x61\x87\xdf\x52\x55\x31\x3d\x76\x2b\xcf\x51\xc7\x17\x69\x9f\x18\x75\x44\x76\xa8\x7c\x2b\x36\x5f\xa2\xdf\xaa\x63\x2a\x6e\xe3\xe4\x42\xbf\xff\x24\x8c\xd4\xce\x6e\x93\x53\xa5\x4b\x6e\x90\x01\x2e\x34\xa4\xb0\xb2\x72\xb8\x4f\x31\xa1\xd4\xf3\xb9\xe0\x6b\x2a\x15\x0a\x0c\x55\xcd\x2c\xe2\xe7\xa6\xed\x66\x65\xc0\x9b\x9e\x79\x84\x6b\xe2\x99\x9e\x85\x41\xbe\xf8\x48\xf5\x67\x91\xab\x30\x0c\xfe\x21\xc4\xa3\xf2\x84\x82\x6b\xb1\xb1\x3b\x75\x0c\x78\x90\x21\xb3\x72\x49\xdd\xbe\x64\x5a\xe7\x66\x45\xb9\x5b\xde\x63\x50\xa2\x92\x19\xed\x9a\x24\xca\x17\x70\x32\x3d\x33\x70\xb5\x4c\xb7\x0d\x03\x4c\x5e\x3d\xb1\x39\xce\xb6\x31\x38\xfe\x72\xd5\xdd\xfa\x47\xa3\x69\x99\xe2\x01\xcb\x1e\x8b\x0c\x51\xe1\xd9\xe8\x3a\x5d\x52\xf8\x1d\xcc\xc9\xa4\x80\xd1\x9b\xa7\x11\x34\x0d\x92\x96\xb5\x6c\x7d\x4e\x40\xac\x28\xef\xc4\x9b\x26\xb2\x11\xc6\xfe\xb1\x2a\xc8\x69\x91\x56\x4c\x27\x03\xb2\x1d\x1f\x65\x31\xb3\x2d\xb7\x44\xfd\xea\x10\x51\x8f\x7d\x8a\xb7\xe2\x39\x2d\xda\x23\xcf\x30\x75\x83\xc8\x01\x6b\x2e\x0f\x72\xce\x84\xa2\x51\x1c\x06\x68\xa5\x71\xca\x78\x26\x72\x2a\xc9\xc4\x61\x49\x3e\x95\xfc\x21\x8a\xbf\xfb\x9a\xb0\xb0\xf6\x30\x81\xb7\xd3\x33\x94\x9c\x9e\x25\xce\xd6\xd8\xc6\xbc\x20\xa6\x1d\x08\xf6\xc0\xc4\x96\xff\x5a\x6c\xc2\xff\x66\xb5\xf2\x05\xe9\xda\x0f\x26\xc0\xe9\xc6\xaf\x16\x66\xfa\x57\x2b\xd5\x51\x14\x36\x05\xee\xa2\xdd\xc1\x40\x2c\x7e\xc3\xf6\x8c\xc1\x61\x0c\xd1\xb0\x4f\x9d\x9e\x58\xfc\x46\x5a\xe0\xf0\x7b\x7a\xd6\x16\x25\x3e\x60\xcb\xac\x87\x4c\xd7\xe0\xee\x10\xe4\xdc\xfe\x8f\xfc\x31\xab\xc7\x9e\x79\x6d\x7f\x61\x05\x9d\xd9\x33\xfa\x50\x72\xac\xf5\xcb\xcd\xe5\x07\xd4\x57\xd2\x49\xbc\x9d\xd5\x28\x3f\xab\x13\xd0\xc8\xf2\x81\xae\x1d\xbc\x89\x51\x44\xa2\x9e\xd5\x91\xae\x63\x2c\x72\x8b\xc8\x76\x0b\x65\xd1\x5d\xb7\xc8\x9d\x85\xf3\xb6\x46\xd4\x77\x12\xbc\xa6\x9b\xdb\x3a\x8a\xe1\xe4\xb6\xf6\x40\x7a\x7b\x5b\x6f\xf3\x85\x71\xd1\x58\x7b\xae\x66\x46\x7b\x4a\x19\xd5\xf4\x3d\x63\x87\x90\x19\x83\xa5\x89\x18\xa2\x92\xeb\xff\xfb\xdf\x23\x18\xe5\x0b\xd2\x62\xfb\x12\x42\xdf\x18\x85\xdd\x35\x37\x58\x65\xde\xe1\x2a\xb0\x2c\x91\x2f\x3a\x40\x75\x4d\xce\xc5\x72\x59\x6a\x2c\x6f\xd0\x9a\x35\xcb\xaf\xb3\x30\x97\x82\xb1\x45\x9a\x3d\x62\x5c\xba\x26\xb7\xee\xa7\x5b\x7d\xfd\xb4\xbf\x9e\xbb\x8b\xc2\x28\x37\x68\xbc\x4b\x19\x4b\xa0\x13\xc5\x7b\x1a\xcd\x13\x78\xb3\x1e\x8d\xfd\x78\x7c\x7b\x71\x47\x03\x71\x07\xbc\xae\x49\xee\xa3\xdb\xef\x94\xb3\xda\xe3\xf1\x59\x6d\x09\x67\x56\x87\x7d\x47\xf4\x9b\xaa\x5d\xb4\x03\x0d\xdd\x6b\x74\x5d\x8e\x63\x9d\x6c\x0c\x2d\x50\x47\x16\x8e\x07\xe9\x00\xd5\x63\xe6\x7a\x18\xbf\xc8\x60\x2f\x6e\x4c\x1e\xe1\x20\x33\xfe\x3a\x5f\x98\x3c\x93\xc9\x3e\x15\xa9\xe9\xd9\xc8\xbc\x29\x18\x41\x5d\x1f\x17\x9c\xd5\x9e\x60\xb9\x5c\xb1\xe3\xa2\x97\xcb\x15\x1b\x19\xf7\x46\x66\xbb\xf5\x14\x9a\xc6\x43\x39\x5f\x80\xf9\x77\x62\x36\x62\x1b\x37\xcc\xe7\xea\x89\x2d\x2a\x9e\x33\x3a\xf7\xe8\x30\x0c\x1c\xe1\x3a\xe2\xdd\x61\x9f\x1d\x27\x31\xdc\xd2\x45\xc9\xf3\x48\x75\xfb\xf1\xde\xbd\x07\x09\xc1\x39\x25\xad\xf4\x2e\xa9\xed\x99\x65\xe2\xe1\x4e\x2f\x75\xa4\xf4\x72\x78\xdd\x25\x84\xc0\xee\x75\xd7\x0b\xff\xca\xd3\xf3\xee\xb8\x7f\xe0\xed\xa5\xcb\x92\x77\x46\x04\xf1\xd8\x12\x69\xa9\xfa\x73\xa4\x5d\x71\x96\x24\xcb\x02\x85\x3c\xaa\x38\x72\xea\xf5\xcf\xbb\xb1\x7f\xd3\x19\x70\xae\x5f\x5a\xd7\x5d\xbb\x85\x35\x35\xdd\xcd\xa8\xcb\x77\x6f\xab\xb3\x1c\x78\x32\x34\xe8\x31\xec\x60\x62\x6b\xf6\xce\x04\xcc\x5e\x1d\xec\xf8\x48\xac\xb0\x37\x62\x18\x08\xe5\xcd\x3f\xab\xe4\xba\x29\xc1\xdf\x64\x7a\x86\x43\xcd\xd8\x3f\xda\xf5\x15\xe9\xdc\xc6\x70\x97\x7d\xa6\xcb\xf4\xd0\x25\xfa\x57\x4c\xc7\x4e\xdf\x7d\x7f\x05\x4d\xf3\xeb\xcb\x96\xba\x9d\xa8\xe5\x99\x18\x3a\x66\xda\xcd\xdb\x2d\x4b\x97\x77\x4b\x19\x49\x4f\x5c\x5b\x6d\x36\xbc\xe6\x4f\xa0\x61\x16\xc1\x0e\x22\x76\xeb\xec\xe0\xe8\x2a\xdd\xc5\xe1\x57\xba\x8d\xe1\x85\x62\x1f\x59\x06\x7f\xf8\x5a\x74\x7a\x0a\xb3\x9b\xe9\x4d\x02\x92\xf2\x9c\x4a\x58\xb1\x34\xa3\x9f\x05\xcb\xa9\x54\x47\xde\x92\x44\xa5\x71\x25\xf4\xef\x76\x45\x34\x42\x5f\x09\xbc\x51\x3f\x73\x74\x84\x9b\xcc\xcf\x7c\x34\x06\xbb\x12\x57\x92\x6a\xfd\x1c\xe1\x8c\xd9\x60\xdc\x63\x94\xa8\x74\xfb\x00\xe5\x1d\xc1\x2c\x14\x56\x05\x7e\xfa\xc5\x8b\xb7\x2d\xf5\xca\xcd\xc6\xf0\xc1\x3c\x67\x45\x85\x8d\x45\xe3\xad\x18\x32\x90\x15\xa7\x26\x37\x1c\xfd\x60\x22\x8c\x8a\x31\x8c\x7e\x1a\xc5\x21\xa7\xb5\x5e\xa7\x2c\x09\x83\x42\x48\x28\xc7\xb0\x4e\x19\x26\x63\x79\x7d\xd5\x6e\xe2\x25\xfc\x0d\xbe\xb1\xbb\xea\x8e\x91\x31\x8c\xdc\x1e\x19\xc8\xb5\xd1\xb4\xaf\xb3\xe4\x87\x94\x55\xf4\xa6\x88\xd6\x29\x8b\xad\x11\xb9\x26\xff\x44\xc2\x8b\xf1\x3c\xd0\x8a\x7d\xd2\xd2\xda\xb5\x02\x97\xea\xba\x64\xee\xf0\xb0\xe7\xeb\xfa\xfe\xea\xca\x78\x0b\x90\x88\x74\xc9\x2b\x8a\x3f\xd0\x77\x80\x71\x4f\xd0\xc2\x05\xa3\xcb\x28\x26\x97\x2d\x4e\xed\x49\xbe\x3d\x42\x9b\x20\xd7\x29\x23\x11\x02\x6b\x3d\xd9\xc7\x18\xd3\x19\xc9\x30\xc7\xc2\x38\x7e\xf3\x34\x1a\xc3\x3a\x6e\x25\xbb\x6b\xd9\x61\x61\x85\xc2\xc4\xd5\xc2\xc8\xde\x7e\x38\xff\xf6\xdb\x6f\xff\xff\x3a\xe5\x22\xee\xac\xfc\xf4\xcb\xe2\x59\x3b\x13\x42\xc2\x7c\x0c\x8b\x1e\xf9\xb5\x43\xa0\x2c\xe0\x95\x7b\xc6\x26\x97\xea\x93\x81\x02\xeb\x19\x2d\xe2\x16\xa4\xfd\x00\xfe\xa7\x6e\xc3\xf5\x90\x02\x57\x6a\x33\xda\x74\xb8\x1d\x4f\xd5\x3b\xfa\xef\x4b\xad\x5b\xa9\xc6\xf0\xf5\x4e\xa1\x7e\x19\xb9\x03\x42\x7b\x3e\xb8\x33\x6b\x57\xb5\xcf\xeb\xaf\xdd\x5a\xee\x76\xf2\x6e\x93\xcf\x24\x4d\x35\xf5\xa6\xcf\xcd\x80\xd5\x1f\x8a\xda\x87\x61\x4f\xd4\xbe\x03\x79\xa2\x83\xd3\x80\x13\xf4\x89\xc4\x3b\xc0\x7c\x28\x29\xcb\xfb\xbf\x03\x38\x75\xc3\x22\x33\xc7\x2c\xde\x9a\xc4\xcf\x03\xa7\xf7\x7b\x45\x65\x9e\xea\xd4\x38\x0e\x2a\xf7\x6b\xbe\xac\xfc\x27\xfc\x6e\x1c\x99\xd0\x5f\xcd\xce\xbe\xc7\x61\xd1\x20\xee\x18\xe6\xb3\x74\xc1\xa8\xb7\x13\x80\x63\xec\x91\x89\x13\x27\xa1\x69\x46\xe0\x08\xa4\x2c\xda\x3f\xe1\xa4\xec\x92\x2b\x2a\x75\x9f\x65\x8f\xcb\x00\xf1\x23\xe8\x1c\xb3\xb2\x87\xd5\x10\x7c\x0f\xb1\x43\x9c\x86\xde\x07\x45\x3c\xe2\xdd\xd4\x15\x93\xfb\x0b\x8e\xf7\xca\x6c\x5a\xa8\xf0\xba\x67\xdf\xc2\xeb\x4c\x0b\x73\x11\xea\x4f\x99\xf3\x37\x6a\x04\xe4\xa3\xc8\x29\x33\x92\x64\xbf\xcf\x8a\x03\xc9\x04\x73\x45\x35\x2c\x84\x60\x61\x30\xe7\x15\x63\xed\xf7\x1a\x49\x72\xd0\x65\xde\xfe\x65\xfd\x37\x4d\xb4\x36\x12\xe7\x5a\x48\x43\xaa\xa6\x17\x76\x5c\x6d\xbb\x8a\x7f\xac\x90\xf7\x3f\x70\x03\xd3\x1a\x26\x46\xd7\x1b\x8c\xd6\xc3\x1b\xbe\x6b\xa1\xa1\xbd\x2d\x60\xc4\x09\x68\x59\xd1\x31\xd8\x30\x13\xb0\x77\x56\x32\x4b\x1f\xe9\xfb\x3c\xc7\xd0\xde\x76\xd7\xce\x35\x34\xdd\xad\x96\x5c\x57\x8c\xb9\x6e\xdc\xcb\x66\x7e\x9b\x6e\x5c\x46\xb3\xf6\x60\xb2\x97\x0c\xf2\xde\xfa\xc0\x9b\xbc\x6f\x07\x9d\x44\x83\xe3\xa2\x8f\xd9\x7e\xac\x27\x7d\xac\xf1\x21\x98\x9d\xc1\x03\xc1\x7c\x09\x44\x58\x55\xfb\x03\xbc\x05\x5c\xec\x28\xc5\x50\x2a\x6e\xdd\x60\x07\xc0\xb6\xb5\xfd\xaa\x20\xa6\x47\x7e\xff\x1d\x0a\x62\x5b\xc4\x7e\xda\x0e\x71\x48\xf8\xd7\xfc\xa3\x1e\x8c\x46\x14\xfb\xdc\x02\x06\x8c\x03\x3e\x3a\x06\x31\xd6\xbf\x6b\x7f\x75\x7e\x07\x4c\xe4\x3b\x99\x9f\x0b\x56\x2d\xf9\x31\x2e\xb2\xb3\x3e\x19\x61\xd4\xef\x86\x4b\xb3\x7d\xa9\xbf\x9f\x9d\x47\xba\xdf\x54\xbd\x67\x4f\x0f\x7c\x4d\x50\xcc\x7f\xe0\x9f\xa6\x9a\xbe\xa0\x77\x7a\x0a\x8f\x94\xae\xa0\x5a\x81\xfe\x4c\x61\x59\xf2\x4a\x53\x40\x9a\x2e\x05\x07\x25\x40\x7f\x4e\x35\x68\x99\x72\x65\x6f\x22\x0a\x16\x54\x6f\x28\xe5\xc6\xce\xbf\x05\xa7\x0a\x36\x25\x63\xc6\x54\xb7\x8b\x6a\xd1\x1e\x5d\x60\x25\xc5\x8a\x4a\xf6\x4c\xbc\x20\x67\xb2\xe2\x99\x09\x0c\x63\xf9\x68\x9c\x9a\xa0\x4f\x4f\xc3\xd3\x53\x3c\x8a\xe1\x04\xb8\xd7\x33\xc0\x8d\xdf\xfc\xd5\x18\x21\x54\x4f\x0c\x14\xae\xd3\x25\xe5\x5a\xa1\x46\x68\xa8\xed\xfb\x2b\xb7\xbf\x40\xd3\x19\x42\x08\xbf\xd2\xd8\x7f\x02\x00\x00\xff\xff\x76\x3a\x90\x45\xdf\x1f\x00\x00")

func golangHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangHeaderTmpl,
		"golang.header.tmpl",
	)
}

func golangHeaderTmpl() (*asset, error) {
	bytes, err := golangHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.header.tmpl", size: 8159, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangMiscTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xc1\xca\x83\x30\x10\x84\xcf\xbf\x4f\x31\x04\xff\x5b\xf5\x01\x84\x5e\x7b\x29\xf4\x24\x3d\x1b\xea\x2a\x01\x1b\xac\x89\x07\xd9\xee\xbb\x97\x35\x25\x2d\xf4\x36\x99\xf9\x66\xb2\xcc\x15\x7a\x1a\x9c\x27\x98\x10\x97\xf5\x16\x0d\x44\x8a\xb8\xcd\x04\x66\xd4\x17\x7b\x27\x88\x20\x65\xe0\x82\x19\x8b\xf5\x23\xa1\x3e\x39\x9a\xfa\xa0\xf4\x1f\x33\xdc\x90\xe1\xef\x1e\x33\xc8\xf7\x6f\xb3\xd5\xd5\x5d\x2a\xdd\xda\x31\xa0\xd2\x7a\x97\x47\x4b\x77\x40\x19\xd1\x1c\x3f\x71\xa2\x4b\xf7\xb3\x76\xa6\x0d\x22\x8d\xca\xab\x9d\x56\xc2\x13\xf3\xe2\x7c\x1c\x60\xfe\x1f\x26\x41\x89\xee\xf4\xc2\x6a\x7f\xe8\x7f\xd9\x2f\xb2\x56\xfb\x15\x00\x00\xff\xff\x8e\x34\xcf\xa7\x0b\x01\x00\x00")

func golangMiscTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangMiscTmpl,
		"golang.misc.tmpl",
	)
}

func golangMiscTmpl() (*asset, error) {
	bytes, err := golangMiscTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.misc.tmpl", size: 267, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x41\x6f\xac\x36\x10\x3e\x2f\xbf\x62\x1e\xca\x01\x54\x62\xf5\x1c\x09\x55\xd1\x6b\xda\xa6\x4a\x57\x7d\xd9\xbe\x5e\xaa\x0a\x79\x61\xd8\xba\x31\x36\x35\x26\x9b\x08\xf1\xdf\xab\xb1\xbd\x2c\xec\xdb\x4d\x5b\x29\x87\xde\xc0\x33\xfe\xfc\x7d\x33\xdf\x18\x86\xe1\x1a\x2a\xac\x85\x42\x88\x15\x6f\x30\x86\xeb\x71\x8c\x3e\xb7\x15\xb7\x38\x0c\x20\x6a\x50\xda\x02\x7b\x44\xdb\x1b\x05\xe3\xb8\xd6\xfe\x71\x18\x00\x55\x05\xe3\x58\x0c\x03\xb0\x4d\x5f\xd7\xe2\x05\xc6\x31\x22\x3c\x0a\x10\x4a\x34\x07\xef\xc4\x4e\x71\xdb\x9b\x70\x02\x85\x2c\x36\xad\xe4\x76\x3a\x99\xc1\x38\x26\xc3\x00\xa5\x7d\x69\xb9\xe1\x0d\xb0\x5b\x29\x6f\xcd\xae\x83\x71\xcc\xa2\x55\xef\x48\x81\x3b\xcf\x9a\xbe\xb4\xcc\xd3\xf4\x2f\x6b\xde\x20\x8c\x63\x0a\x49\xb4\xf2\xc4\x8f\xa4\x87\x01\x02\xe0\xb4\x94\xc1\xa4\x00\x8d\x01\x34\x46\x9b\xf4\x32\x7b\xa1\x9e\xf5\xd3\xbf\xa3\xce\xcd\x6e\x41\x1c\x3c\xef\x37\xc0\xb7\xba\x7a\xf5\xd0\xc4\x1c\x9b\x2d\x56\xad\xe4\x25\xfe\xa1\x65\x85\xa6\x03\x76\xaf\x6a\x0d\xf3\x70\xf7\x97\x0c\xab\x71\x51\xb8\x95\xa2\xb3\x8d\x8d\x29\x29\x5a\x15\x45\x87\xb6\x2b\x28\xe9\x26\x87\x82\x1e\xb6\xbd\xaa\x24\x16\x0f\xc2\xa2\xe1\xb2\x1b\x7e\xd4\x42\xdd\x40\x9c\x41\x3c\x46\xab\x67\x6e\xa0\x28\x9e\xb9\xec\xb1\x83\xdf\x7e\x17\xca\xa2\xa9\x79\x89\xc3\x14\xe3\xa4\x65\x19\x71\x64\x0c\x57\x3b\x5c\xb6\x83\x6f\x25\x7e\x27\x50\x56\x9d\x63\x2c\xea\xa0\x9f\x51\xdf\x42\x93\x18\x11\x84\x21\x5a\xad\xa6\x63\x73\xe0\x6d\x8b\xaa\x4a\x0e\x2b\xd9\xb9\x7d\x2e\x94\xa4\xa9\xdb\x79\x10\xc9\x36\x9f\x1e\x16\x00\x8b\x40\x76\xae\x00\x49\x4c\xa8\x1f\xb5\xec\x1b\x32\x03\xe4\xf0\x4d\x4c\xa8\xa1\xc4\xce\x16\x4e\xe1\xb5\x33\xd2\x1a\xb1\xea\xd6\x7a\xef\x14\x15\x85\xd2\x7b\x2a\xac\xde\xfe\xc9\xaa\x2d\xfb\x41\xeb\xa7\x8e\xad\xf5\x3e\x49\xd9\xe7\x5f\x3e\x26\xe9\x84\x71\xe8\x68\xa8\xd2\x6d\x6f\xf5\xac\x32\x6f\x49\x27\x76\xf7\x4a\xd8\x5f\xb9\x24\x4f\x47\xef\xa1\x36\xd4\x70\xd2\xba\x14\x3a\x4d\xfa\x09\x4b\x51\x83\x44\x75\x7a\x4c\x0a\x79\x0e\x5f\xbb\x0e\x1e\x6a\x34\x4d\x56\xb4\x5a\x19\xff\xac\x84\xcc\x00\x9b\xd6\xbe\xfa\x41\xa5\xd2\xb8\x7c\x94\x1d\x2e\x32\xcf\x26\x79\x72\xa7\x3d\x09\x66\x9c\x15\x80\xde\x5d\xc9\x6a\xa2\xed\x4a\x48\x96\xe4\x56\x94\x61\x06\xd3\xb9\x5b\xaf\x44\x06\x57\x34\xa4\x37\x39\xb0\x75\x2f\x25\x39\x36\x24\x3a\xbd\x1f\x86\xc1\x25\x4c\xae\x13\x9d\xea\xa5\x4c\xd2\xe0\xd8\x52\xab\x8a\x6e\xbd\x2b\x41\x41\x42\x80\x1c\x6a\x2e\x3b\x74\xe1\x8b\xf4\x16\x98\x47\x27\x7f\xa1\xef\xb2\x2d\x3c\x18\x63\x6c\x72\x04\x75\x03\xdc\x8c\x87\xf6\x44\x87\x91\xa5\xfb\x00\x96\xd3\xff\x88\xaa\x42\x93\x38\xdf\x0a\x2e\xb1\xb4\x04\x79\xbc\x3e\xd2\x68\x45\x31\xa9\x77\x1b\xdb\xd8\xc4\x63\x64\xd3\xd5\xe0\xcf\x0d\xfd\x5e\x7e\x15\x88\x77\x46\x97\x28\x84\xb1\x30\xe2\x19\x0d\xbb\x7b\xc1\xf2\x02\x8c\xa8\x5d\xfa\x87\x9c\x5c\xe2\x0a\x1b\xac\x40\xdb\x1b\xfe\x84\x77\xc6\x24\x68\x8c\x2f\xd0\xd1\x50\xd1\xc2\x40\xde\xb9\x4a\x2c\xb8\x4c\x96\xdc\xf4\x6d\xab\x8d\xed\x7c\x48\xa8\x9d\x8b\x7e\xc1\xf2\x53\x8f\xe6\xf5\x51\xef\xcf\x32\x65\x9b\x92\x2b\xba\xd9\x79\x55\x19\x5d\x43\x52\x4b\x6e\x2d\xaa\xc3\x81\xa9\x9f\xcf\x20\x27\xcf\x81\x46\xe4\xce\x98\xb5\x7e\xd4\xfb\x6e\x2e\xcc\x4d\x83\x53\x30\xbe\x21\xdf\x65\x9d\xad\xc1\x62\x70\xde\xab\xda\x17\x8f\x3b\xf3\xad\xf9\x1e\xed\xf2\x73\x53\xec\xd0\x7f\x72\x66\x96\xa3\xb5\xff\x68\x3b\xda\x72\x62\xbd\x38\xb9\xff\xe9\xe7\x87\xfb\xbb\x6f\x53\x88\xe1\xab\x19\xf4\x62\x06\xfe\xb9\x97\xa7\x5b\xfe\x67\xdd\x0c\x37\x5c\x48\x26\x5a\xf4\xef\x30\xfb\x47\x39\x1a\xde\xa7\xce\x7f\x21\xfe\x0e\x00\x00\xff\xff\x06\x66\x45\x4a\xba\x09\x00\x00")

func golangUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangUpdateTmpl,
		"golang.update.tmpl",
	)
}

func golangUpdateTmpl() (*asset, error) {
	bytes, err := golangUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.update.tmpl", size: 2490, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"golang.create-raw.tmpl":        golangCreateRawTmpl,
	"golang.create.tmpl":            golangCreateTmpl,
	"golang.decl.tmpl":              golangDeclTmpl,
	"golang.delete-all.tmpl":        golangDeleteAllTmpl,
	"golang.delete-world.tmpl":      golangDeleteWorldTmpl,
	"golang.delete.tmpl":            golangDeleteTmpl,
	"golang.dialect-cockroach.tmpl": golangDialectCockroachTmpl,
	"golang.dialect-postgres.tmpl":  golangDialectPostgresTmpl,
	"golang.dialect-sqlite3.tmpl":   golangDialectSqlite3Tmpl,
	"golang.footer.tmpl":            golangFooterTmpl,
	"golang.get-all.tmpl":           golangGetAllTmpl,
	"golang.get-count.tmpl":         golangGetCountTmpl,
	"golang.get-first.tmpl":         golangGetFirstTmpl,
	"golang.get-has.tmpl":           golangGetHasTmpl,
	"golang.get-last.tmpl":          golangGetLastTmpl,
	"golang.get-limitoffset.tmpl":   golangGetLimitoffsetTmpl,
	"golang.get-one-all.tmpl":       golangGetOneAllTmpl,
	"golang.get-one.tmpl":           golangGetOneTmpl,
	"golang.get-paged.tmpl":         golangGetPagedTmpl,
	"golang.get-scalar-all.tmpl":    golangGetScalarAllTmpl,
	"golang.get-scalar.tmpl":        golangGetScalarTmpl,
	"golang.header.tmpl":            golangHeaderTmpl,
	"golang.misc.tmpl":              golangMiscTmpl,
	"golang.update.tmpl":            golangUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"golang.create-raw.tmpl":        &bintree{golangCreateRawTmpl, map[string]*bintree{}},
	"golang.create.tmpl":            &bintree{golangCreateTmpl, map[string]*bintree{}},
	"golang.decl.tmpl":              &bintree{golangDeclTmpl, map[string]*bintree{}},
	"golang.delete-all.tmpl":        &bintree{golangDeleteAllTmpl, map[string]*bintree{}},
	"golang.delete-world.tmpl":      &bintree{golangDeleteWorldTmpl, map[string]*bintree{}},
	"golang.delete.tmpl":            &bintree{golangDeleteTmpl, map[string]*bintree{}},
	"golang.dialect-cockroach.tmpl": &bintree{golangDialectCockroachTmpl, map[string]*bintree{}},
	"golang.dialect-postgres.tmpl":  &bintree{golangDialectPostgresTmpl, map[string]*bintree{}},
	"golang.dialect-sqlite3.tmpl":   &bintree{golangDialectSqlite3Tmpl, map[string]*bintree{}},
	"golang.footer.tmpl":            &bintree{golangFooterTmpl, map[string]*bintree{}},
	"golang.get-all.tmpl":           &bintree{golangGetAllTmpl, map[string]*bintree{}},
	"golang.get-count.tmpl":         &bintree{golangGetCountTmpl, map[string]*bintree{}},
	"golang.get-first.tmpl":         &bintree{golangGetFirstTmpl, map[string]*bintree{}},
	"golang.get-has.tmpl":           &bintree{golangGetHasTmpl, map[string]*bintree{}},
	"golang.get-last.tmpl":          &bintree{golangGetLastTmpl, map[string]*bintree{}},
	"golang.get-limitoffset.tmpl":   &bintree{golangGetLimitoffsetTmpl, map[string]*bintree{}},
	"golang.get-one-all.tmpl":       &bintree{golangGetOneAllTmpl, map[string]*bintree{}},
	"golang.get-one.tmpl":           &bintree{golangGetOneTmpl, map[string]*bintree{}},
	"golang.get-paged.tmpl":         &bintree{golangGetPagedTmpl, map[string]*bintree{}},
	"golang.get-scalar-all.tmpl":    &bintree{golangGetScalarAllTmpl, map[string]*bintree{}},
	"golang.get-scalar.tmpl":        &bintree{golangGetScalarTmpl, map[string]*bintree{}},
	"golang.header.tmpl":            &bintree{golangHeaderTmpl, map[string]*bintree{}},
	"golang.misc.tmpl":              &bintree{golangMiscTmpl, map[string]*bintree{}},
	"golang.update.tmpl":            &bintree{golangUpdateTmpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
