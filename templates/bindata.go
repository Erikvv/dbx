// Code generated for package templates by go-bindata DO NOT EDIT. (@generated)
// sources:
// golang.create-raw.tmpl
// golang.create.tmpl
// golang.decl.tmpl
// golang.delete-all.tmpl
// golang.delete-world.tmpl
// golang.delete.tmpl
// golang.dialect-cockroach.tmpl
// golang.dialect-postgres.tmpl
// golang.dialect-sqlite3.tmpl
// golang.footer.tmpl
// golang.get-all.tmpl
// golang.get-count.tmpl
// golang.get-first.tmpl
// golang.get-has.tmpl
// golang.get-last.tmpl
// golang.get-limitoffset.tmpl
// golang.get-one-all.tmpl
// golang.get-one.tmpl
// golang.get-paged.tmpl
// golang.get-scalar-all.tmpl
// golang.get-scalar.tmpl
// golang.header.tmpl
// golang.misc.tmpl
// golang.update.tmpl
package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _golangCreateRawTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\xcf\x8a\xdb\x30\x10\xc6\xcf\xf6\x53\x4c\x73\xb2\x21\xeb\x07\x28\xec\xa1\x2c\x5b\x08\x94\x42\x93\xde\x8d\x62\x8d\x5d\x35\xb2\xe4\x1d\x4f\xfe\x21\xf4\xee\x45\x92\x63\xbc\xa4\xbb\x2c\xb4\xb7\xc9\x8c\xe7\x9b\xdf\x7c\x52\xe4\xdc\x03\x48\x6c\x95\x41\x58\x19\xd1\xe3\x0a\x1e\xbc\xcf\xb7\xe2\xec\x1c\xa8\x16\xaa\x2d\x0e\x5a\x34\x08\xde\x4f\x91\x73\x80\x7a\x0c\x89\x27\x42\xc1\xf1\xb7\x91\xe0\x7d\x6a\x30\x96\x43\x13\x1f\xc9\x80\xf7\xdf\x6d\x0a\xe7\x8f\x6a\xe7\xa0\xda\x1d\xdb\x56\x5d\xc0\xfb\x3c\x4c\x0f\x85\x30\x33\x5f\xa2\x8c\xaa\x33\x82\x8f\x34\xf1\x84\x12\x63\x3f\x68\xc1\x33\x67\x05\xde\x17\xce\x41\xc3\x97\x41\x90\xe8\xa1\xfa\x42\x1d\x78\x5f\x42\x91\x67\x33\xfd\x04\xe2\x1c\x4c\x1f\xcd\xa9\x35\xcc\x54\x48\x04\x48\x64\xa9\x7c\x9b\x48\x99\x93\x3d\x7c\x0c\x47\x50\x37\xc3\xe4\xd3\x90\x3b\xbd\xbd\x95\xd7\xa4\x16\x61\x8d\x62\x83\x67\xa8\xbe\x2a\xd4\x72\x0c\xde\xc4\x3c\xf6\x7b\x94\xd1\xf7\x5f\x56\x4b\xa4\x11\xaa\x8d\x69\x2d\x4c\x6d\xb1\x3c\xbe\xe8\x29\xbb\xaa\xeb\x98\xa9\x47\xee\x79\x95\x44\x4e\x82\xa0\x8e\x09\x78\x0c\xc1\x8b\xde\x1f\x8d\xd4\x58\x6f\xd1\x48\xa4\xc2\xee\x7f\x57\x52\x09\x8d\x0d\xaf\x61\xd9\x5f\xe6\x59\xa8\x69\xdb\xed\xb8\xe7\x22\x69\x44\xd3\xe2\x7e\x33\x68\x99\xdf\xec\x7e\x7d\xf6\x79\x56\xaf\x83\xab\xf0\x08\x71\x06\xa9\x13\x52\xf5\x7c\xc1\xe6\xc9\x1a\xc6\x0b\x17\x0d\x5f\xd6\xf0\x77\xdd\x20\x9b\xa9\x36\xf6\x7f\x7a\x04\xa3\x34\xb8\x3c\xcb\x28\x89\x07\xbd\x5e\x1c\xf0\x99\xa8\x40\xa2\x32\xcf\x7c\x7e\xab\x19\xa5\x93\x35\xe1\x92\xce\xf6\xb6\xe1\xd6\x0d\x83\x25\x1e\x13\xa0\x32\x1d\x2c\xbc\x7f\xc5\x7d\x07\xfd\xe3\x88\x74\xdd\xda\xf3\x07\xc0\x83\x21\xd5\xae\x11\x26\xdc\x05\x21\x25\xd9\x16\x8a\x56\x0b\x66\x34\xb7\x21\x25\xbc\xbf\x9e\x51\x7a\xfd\xee\x8e\xb7\x91\x8b\xbb\x7c\xbf\x76\x5d\x13\x8e\xe9\x04\x3e\xff\xff\x23\x78\x9b\xb1\xae\x87\xc3\x3c\x36\x42\x54\xdf\xc4\xc8\x1b\x33\x22\xf1\x46\x16\xff\xb4\x79\xa8\x75\xc8\x41\x30\xbc\x24\xc9\x80\xea\xe7\x75\x08\x0f\xd2\x6d\x9b\xe1\x50\x26\x2f\xa6\xff\xdd\x32\x5e\x84\x7f\x02\x00\x00\xff\xff\x2b\xe7\xe2\xf3\xfb\x04\x00\x00")

func golangCreateRawTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangCreateRawTmpl,
		"golang.create-raw.tmpl",
	)
}

func golangCreateRawTmpl() (*asset, error) {
	bytes, err := golangCreateRawTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.create-raw.tmpl", size: 1275, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\xcd\x6e\xdb\x30\x0c\xc7\xcf\xf6\x53\x70\x39\xd9\x40\xa2\x07\x28\xd0\xc3\x50\x74\x58\x81\x21\xc0\xda\xee\x2c\x28\x16\xed\x69\x91\x25\x97\x52\x9a\x14\x82\xde\x7d\x90\xfc\xb1\x14\x59\x8b\x02\xdb\x8d\x26\xc5\x3f\x7f\x24\x65\x85\xb0\x01\x89\xad\x32\x08\x2b\x23\x7a\x5c\xc1\x26\xc6\x32\x04\x50\x2d\xb0\x7b\x1c\xb4\x68\x10\x62\x9c\xac\x10\x00\xb5\x4b\x8e\x1b\x42\xe1\xf3\xb7\x91\x10\xe3\x98\x60\xac\x4f\x49\xfe\x40\x06\x62\xdc\xda\xd1\x5c\x0e\xf1\x10\x80\x3d\x1c\xda\x56\x9d\x20\x17\xd9\xe4\x40\x2a\x58\x9e\x73\x38\xd5\x19\xe1\x0f\xb4\xc0\x6c\xc0\x63\x3f\x68\xe1\x17\x48\x06\x31\x56\x21\x40\xe3\x4f\x83\x20\xd1\x03\xfb\x4c\x9d\x83\x18\x6b\xa8\xca\x62\xc1\x9f\x48\x42\x80\xe9\xd4\xe2\x5a\xc3\x82\x85\x44\x80\x44\x96\xea\xb7\x91\x94\x79\xb6\xfb\x8f\xf1\x08\xea\xfe\xd0\x94\x53\x95\x0b\xc1\x9d\x95\x2f\xa3\x5c\x91\xdc\x09\x77\x8b\x28\xdd\xd6\x1e\xd3\x6c\x0a\xce\x8d\x3d\xc2\xd5\x35\xd8\xdd\x2f\x26\x77\xec\xab\xb5\x7b\xc7\xb6\xf6\x58\xd5\xec\xc7\xe3\x4d\x55\xe7\x2e\x67\xe9\xdc\xb1\x51\xde\xe0\x11\xd8\x17\x85\x5a\xa6\xea\xe5\x78\xa6\xdf\xa1\xcc\xdb\xfb\x69\xb5\x44\x72\xc0\xee\x4c\x6b\x61\x4a\xcb\x61\xf7\xa4\x27\xef\x8a\xf3\xec\xe1\xce\xf7\x7e\x35\x8a\x3c\x0b\x02\x9e\x1d\x70\x9d\x8c\x27\xbd\x3b\x18\xa9\x91\xdf\xa3\x91\x48\x55\x46\x54\x42\x63\xe3\xd7\x70\x9e\x5f\x97\x45\x8a\x69\xdb\x3d\xf8\xde\x57\xa3\x46\x9e\x7c\x1e\xd2\x02\x5a\x97\xf3\xce\x5e\xdf\xa0\xb2\xe0\xeb\xb4\x1a\x98\xc6\x40\xea\x19\x89\xdd\x9e\xb0\xb9\xb1\xc6\xe3\xc9\x57\x8d\x3f\xad\xe1\xef\xba\x49\xb6\x50\x6d\xce\xff\x74\x0d\x46\x69\x08\x65\x51\xd0\x28\x9e\xf4\x7a\xb1\xc7\x5b\xa2\x0a\x89\xea\xb2\x88\xe5\x1c\x33\x4a\x8f\xa3\x49\x57\x7d\x19\x6f\x9b\xee\xee\x30\x58\xf2\x6e\x04\x54\xa6\x83\xb3\xd9\xbf\xe2\xbe\x80\xfe\x7e\x40\x7a\xb9\xb7\xc7\x0f\x80\xa7\x81\xb0\x87\x46\x98\x74\xa1\x84\x94\x64\x5b\xa8\x5a\x2d\xbc\x47\x33\x17\xa9\xe1\xfd\xf6\x8c\xd2\xeb\x77\x7b\x9c\x4b\x9e\xfd\x10\x97\x6d\x73\x4e\xe8\xc6\x0d\x5c\xfd\xff\x15\xbc\xcd\xc8\xf9\xb0\x5f\xca\x66\x08\xf6\x4d\x38\x7f\x67\x1c\x92\xbf\x93\xd5\x3f\x75\x9e\x62\x1d\xfa\x24\x98\xde\xa3\x71\x00\xec\xf1\x65\x48\xcf\xda\xdc\xcd\xb0\xbf\xfc\xc1\x66\xfb\xcc\xfc\x1d\x00\x00\xff\xff\x4c\x3b\xb7\xe2\x3e\x05\x00\x00")

func golangCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangCreateTmpl,
		"golang.create.tmpl",
	)
}

func golangCreateTmpl() (*asset, error) {
	bytes, err := golangCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.create.tmpl", size: 1342, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeclTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\x55\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x49\x4d\xce\x51\x52\xa8\xad\xe5\x4a\x2b\xcd\x4b\x56\xd0\xc8\x4f\xca\x52\xd0\xaa\xae\x56\xd0\x0b\x4a\x4d\x4e\xcd\x2c\x4b\x2d\x72\x4a\x2c\x4e\x55\xa8\xad\xf5\xcc\x2d\xc8\xd1\x54\x00\x49\x04\x67\xa6\xe7\x25\x96\x94\x16\x81\x44\x15\xaa\xb9\x40\x42\x4e\xf9\x29\x95\x20\x23\x6a\x41\xbc\xd4\xbc\x14\x05\xdd\xda\x5a\x2e\x40\x00\x00\x00\xff\xff\x9b\x28\x5e\xfd\x65\x00\x00\x00")

func golangDeclTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeclTmpl,
		"golang.decl.tmpl",
	)
}

func golangDeclTmpl() (*asset, error) {
	bytes, err := golangDeclTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.decl.tmpl", size: 101, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x8b\xdb\x3e\x10\xc5\xcf\xd6\xa7\x98\x0d\x39\xd8\xe0\x15\xff\xc3\x9f\x1e\x16\x7c\x08\xed\x1e\x7a\xd9\xc3\xe6\x58\x8a\x50\xac\x71\xaa\xee\x58\xca\x8e\xe4\x34\x45\xf8\xbb\x17\x29\x6e\xf0\xc2\xd2\x42\x0f\x06\x7b\xde\xf8\xf7\x66\x1e\x93\xd2\x3d\x18\x1c\xac\x43\xd8\x04\x7b\x74\x3a\x4e\x8c\x1b\xb8\x9f\x67\xf1\x09\x09\x23\xaa\x94\x40\xee\xa7\x61\xb0\x17\x98\xe7\x3a\x25\xe8\xe3\xe5\xa4\x59\x8f\x20\x77\x44\x3b\x3e\x06\x98\xe7\x06\x6a\x51\xf5\x7e\x72\x11\xac\x8b\x1f\xfe\x6f\x01\x99\xf3\xe3\xb9\x11\xd9\x03\x9d\x29\x50\xb1\x36\xb4\xee\xec\x5f\xfe\xee\xa6\xf9\xf8\xc6\x4b\xa4\xf4\x3e\xef\xe0\xcd\xcf\x2b\xad\xca\x2d\xe3\x01\xcd\x89\x74\x8f\xdf\x3c\x19\xe4\x00\xf2\xb3\x1b\x3c\xac\xe5\xf0\x4a\x4b\x75\xa3\x54\xa9\xa8\x10\xc7\xb8\xc9\x4d\xa2\x3a\x6b\x06\xa5\xce\x9a\x26\x0c\xf0\xe5\xab\x75\x11\x79\xd0\x3d\xa6\x59\x54\xb7\x7a\x07\xfa\x74\x42\x67\xea\xdf\x95\x16\x52\x82\xc1\x22\x99\xf2\x0d\x72\x1f\x75\xb4\xfd\x6d\xfa\xe2\xce\xda\x1d\x11\xb6\xb6\x85\x6d\x5e\xef\xa1\x03\xf9\x34\x11\xe9\x03\xe1\xd2\x28\x2a\x3b\xc0\x5d\x4a\xa5\x41\x3e\xe9\x11\x61\x9e\xa5\x0d\x6e\x22\xaa\x1b\x48\xa2\xaa\x94\xea\xbd\x33\x39\xb3\xad\xcd\x62\x26\x40\x07\x83\xa6\x80\x45\xfe\xe3\x88\x6f\xb8\xa5\x5e\x37\x8d\xa8\x96\x74\x9c\x59\x67\x90\x43\x81\x2e\xbf\xbc\xd2\x61\x72\x86\x50\x3d\xa3\x33\xc8\xb5\x3f\x7c\x97\xc6\x6a\xc2\x3e\xb6\xb0\xce\xb0\x11\x55\xd6\xc8\x1f\xf7\x71\x8c\xf5\x95\xd1\xde\xf2\x94\x52\xe6\x28\x94\xe2\x3c\x4e\xbe\x96\x87\x0e\x0a\x8c\xed\x19\x59\x3e\x5e\xb0\xff\xe8\x5d\xc4\x4b\xac\xfb\x78\x69\xe1\x5d\x40\xce\x28\xff\x7b\xd7\x81\xb3\x54\x42\x61\x8c\x13\x3b\xf8\xaf\x2d\xb4\x51\xbf\xe0\x23\x73\x8d\xcc\x65\xb7\xe5\x4a\xaf\x8e\x79\x21\xc6\x20\x9f\xfd\x8f\xb0\x1b\x06\xec\x23\x9a\xfa\x9f\xa0\x8b\xbe\xb0\x9d\xa5\xf5\x8d\xfe\x0a\x00\x00\xff\xff\x3d\x3c\x87\x0d\x64\x03\x00\x00")

func golangDeleteAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteAllTmpl,
		"golang.delete-all.tmpl",
	)
}

func golangDeleteAllTmpl() (*asset, error) {
	bytes, err := golangDeleteAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete-all.tmpl", size: 868, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteWorldTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xb1\x6a\xc3\x30\x10\x86\x67\xe9\x29\xae\x86\x82\x4d\x13\xd1\xa1\x74\xcb\x10\x4a\xb6\x2e\x4d\x1f\x20\x38\xd6\x39\xa8\x55\x4f\xcd\xe9\x9c\xa6\x08\xbf\x7b\x91\x1c\x87\xcc\x1d\x8c\x41\xf0\x7f\xdf\x7f\x7f\x4a\x4b\xb0\xd8\x3b\x42\xa8\xa2\x3b\x50\x2b\x03\x63\x05\xcb\x71\xd4\x16\x3d\x0a\xae\xbd\xaf\x3b\x39\x43\x17\x48\xf0\x2c\xe6\x65\xfa\x37\x50\x77\x61\x20\x01\x47\xf2\xfc\xb4\x00\x64\xce\x5f\xe0\x46\x67\x24\x92\x2d\x0c\x7d\xcb\xdf\x07\xfb\x3b\xa1\xd5\xa9\x65\xd8\xed\x18\x23\xc4\xa3\x37\x5b\x8c\x83\x97\xf9\xf5\x86\x3b\xe5\xb9\xa5\x03\x82\x79\x7f\x7b\x8d\x90\xc3\x25\x38\x29\x57\x10\xf6\x1f\xc6\xb2\x3b\x21\x9b\xcd\x19\xbb\x4b\xbd\x5c\x79\x01\x29\xc1\x37\x3b\x92\x1e\xaa\xfb\x63\x05\x06\xc6\xb1\xd1\xca\xf5\x25\x7a\xb7\x02\x72\x1e\x92\x56\x8a\x51\x06\x26\x78\x5c\x14\xda\x57\xfb\x89\x1b\xe6\x1a\x99\x1b\xad\x46\x9d\x85\xa5\xd3\xac\x2c\x7e\xb3\x0d\x3f\x71\xdd\xf7\xd8\x09\xda\xfa\x1f\x58\x35\xdd\xf9\xb0\x9a\x4f\xbe\x0e\x97\x77\x9b\xc3\x17\x31\x39\xaf\x53\xba\xce\xfa\x17\x00\x00\xff\xff\x29\xc5\xc6\xdd\xb6\x01\x00\x00")

func golangDeleteWorldTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteWorldTmpl,
		"golang.delete-world.tmpl",
	)
}

func golangDeleteWorldTmpl() (*asset, error) {
	bytes, err := golangDeleteWorldTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete-world.tmpl", size: 438, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x4f\x8b\xdb\x30\x10\xc5\xcf\xd6\xa7\x98\x0d\x39\xd8\xe0\x15\x3d\x2f\xb8\x10\xda\x3d\xf4\xb2\x87\xcd\xb1\x14\x21\x5b\xa3\x54\xdd\xb1\x94\x1d\xcb\x69\x8a\xf0\x77\x2f\x52\xdc\x90\x85\xfe\x81\x1e\x0c\xd6\x9b\x99\xf7\x46\x3f\x94\xd2\x3d\x18\xb4\xce\x23\x6c\x26\x77\xf0\x3a\xce\x8c\x1b\xb8\x5f\x16\xf1\x11\x09\x23\xaa\x94\x40\xee\x67\x6b\xdd\x19\x96\xa5\x4e\x09\x86\x78\x3e\x6a\xd6\x23\xc8\x1d\xd1\x8e\x0f\x13\x2c\x4b\x03\xb5\xa8\x4c\x19\x30\xd0\x87\x40\x2d\x20\x73\xfe\x02\x37\x22\x87\xa0\x37\xc5\x55\xdc\x26\x3a\x7f\x0a\x2f\xff\x8e\xd3\x7c\x78\x13\xf6\x67\xc3\x3e\x98\x1f\x17\xbb\x2a\x25\xc0\xb1\x47\x73\x24\x3d\xe0\xd7\x40\x06\x79\x02\xf9\xc9\xdb\x00\xb7\xe5\xe9\x95\x56\x75\xa3\x54\x51\xd4\x14\xc7\xb8\xc9\x4d\xa2\x3a\x69\x06\xa5\x4e\x9a\x66\x9c\xe0\xf3\x17\xe7\x23\xb2\xd5\x03\xa6\x45\x54\x57\xbd\x03\x7d\x3c\xa2\x37\xf5\x2f\xa5\x85\x94\xc0\x3a\x24\x53\xce\x20\xf7\x51\x47\x37\x5c\xd7\x2f\xe9\xac\xfd\x01\x61\xeb\x5a\xd8\xe6\xfb\x3d\x74\x20\x9f\x66\x22\xdd\x13\xae\x8d\xa2\x72\x16\xee\x52\x2a\x0d\xf2\x49\x8f\x08\xcb\x22\xdd\xe4\x67\xa2\xba\x81\x24\xaa\x4a\xa9\x21\x78\x93\xa1\x6d\x5d\x2e\x66\x07\xe8\xc0\x6a\x9a\xb0\x94\xff\xba\xe2\x1b\xdf\xa2\xd7\x4d\x23\xaa\x95\x8e\x37\xb7\x0c\x32\x14\xe8\xf2\xcf\x2b\xf5\xb3\x37\x84\xea\x19\xbd\x41\xae\x43\xff\x4d\x1a\xa7\x09\x87\xd8\xc2\x2d\xc3\x46\x54\xb9\x46\xe1\xb0\x8f\x63\xac\x2f\x1e\xed\x95\xa7\x94\x32\xa3\x50\x8a\xf3\x3a\xf9\xb9\x3c\x74\x50\xcc\xd8\x9d\x90\xe5\xe3\x19\x87\x0f\xc1\x47\x3c\xc7\x7a\x88\xe7\x16\x7e\x6b\x90\x19\xe5\xd9\xbb\x0e\xbc\xa3\x02\x85\x31\xce\xec\x2f\x10\xda\xe2\x38\xea\x17\x7c\x64\xae\x91\xb9\xdc\x4f\x14\x70\xb3\x8f\xd7\xdc\xb2\x85\x7c\x0e\xdf\xa7\x9d\xb5\x38\x44\x34\xf5\x7f\x7b\xaf\x3d\x6b\x04\xbc\x87\x77\x6d\x9e\x17\x2b\xd4\xfc\x3a\x7f\x06\x00\x00\xff\xff\x33\xce\xab\xb7\x77\x03\x00\x00")

func golangDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteTmpl,
		"golang.delete.tmpl",
	)
}

func golangDeleteTmpl() (*asset, error) {
	bytes, err := golangDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete.tmpl", size: 887, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDialectCockroachTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcd\xae\x9b\x30\x10\x85\xd7\xf8\x29\x4e\xbd\x82\x2b\x42\xa4\x76\xd7\x2a\x9b\xa6\x5d\x57\xea\x1b\x38\x66\x00\xeb\x12\x9b\xcc\x98\x56\x15\xe2\xdd\x2b\x3b\xe4\x6f\x71\x25\x36\xcc\xcc\x37\x67\xce\xf1\xb2\xec\xd0\x52\xe7\x3c\x41\xbb\xf3\x14\x38\x6a\xac\xab\x2a\x74\xef\xe2\x30\x9f\x1a\x1b\xce\xfb\xd1\x9d\xf6\xd3\x45\xab\x65\x01\xf9\x16\xbb\x75\x55\xea\x85\x93\x9d\x0d\x5e\x22\x1b\xe7\xe3\x8e\x98\x03\xe7\x25\xdd\xec\x2d\x4a\x77\x9e\x46\x2c\x0b\x9a\xdf\x64\xc9\xfd\x21\xc6\xba\x56\x70\x72\xbc\x23\x3f\x13\x51\x12\x33\x32\x5b\xa1\x54\xc5\x63\x21\x24\xb2\xf3\x7d\x8d\xf0\x8e\x53\x08\x63\x85\x45\x15\xae\x03\xe5\xca\xd7\x43\x82\x9a\xf2\x6d\xba\x34\x79\x4f\xf5\x2d\x95\x17\x55\x14\x79\xa8\x39\x86\x96\x9a\xe3\x68\x44\xca\x0a\x87\x03\xf4\xe7\x2f\xfa\xda\x2e\x98\xe2\xcc\x3e\xcf\xdc\xc4\x6a\x44\x9e\x29\x75\x57\x95\xbe\x6d\x44\xeb\x1a\x9d\x19\x85\xd4\xfa\x61\x0a\x61\x22\xff\xb0\x9d\xfe\x6c\xb0\xef\x1c\x8c\x1d\x4a\x09\x33\x5b\xda\x9c\x54\x28\xdf\xe4\x32\x36\x3f\xbe\xd7\x37\xc3\x8b\x2a\xf6\x7b\x44\xfe\x87\xce\xb1\x44\xfc\x75\x71\x80\xbe\xf3\x1a\x46\x60\xd0\x72\x8e\xcf\x79\x58\x23\x04\x09\x67\x0a\x9e\x30\x18\x01\x53\xef\x24\x12\x53\x9b\x37\xa5\x16\x64\x22\xeb\xcc\x08\x89\x73\xd7\x35\x70\x1d\xe2\x60\x22\x3a\xe3\x46\xa9\x11\x07\xf2\x59\xd1\xf4\xc6\xf9\x4d\x71\x0a\x12\x7b\x26\x49\x82\xd7\x93\x06\xda\x64\x1b\x55\xb4\xa7\x7c\x70\xca\x3c\xdd\xff\x6b\x22\x5f\x3e\x1d\x59\xe3\x6a\xb3\xba\x3e\x0f\x33\x3e\x1d\xe0\xdd\x98\xd3\xbe\xb1\xcf\xe8\x5d\xed\x89\x7c\x64\xbe\x11\xaf\x89\xff\x0f\x00\x00\xff\xff\x62\xb9\xbc\x1a\xaf\x02\x00\x00")

func golangDialectCockroachTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDialectCockroachTmpl,
		"golang.dialect-cockroach.tmpl",
	)
}

func golangDialectCockroachTmpl() (*asset, error) {
	bytes, err := golangDialectCockroachTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.dialect-cockroach.tmpl", size: 687, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDialectPostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x31\x6f\xc3\x20\x14\x84\x67\xf8\x15\x4f\x4c\x10\xd9\x44\x6a\xb7\x56\x59\x9a\x76\xae\xd4\x7f\x90\x38\xcf\x29\x2a\x06\xfc\xc0\x5d\x10\xff\xbd\x82\xc4\x89\x32\x54\xf2\xe2\x77\xf7\xdd\xe9\xc8\xb9\x87\x13\x8e\xc6\x21\x08\x33\x05\x4f\x49\x40\x29\x9c\x89\xb3\x49\xdf\xcb\x51\x0f\x7e\xda\x5a\x73\xdc\x86\x59\xf0\x9c\x01\xdd\x09\xfa\x52\x38\x7f\xe0\x62\x3f\x78\x17\x13\x1d\x8c\x4b\x3d\x12\x79\x6a\x21\xe3\xe2\x06\x90\x66\x0a\x16\x72\x06\xfd\x85\x03\x9a\x5f\x24\x28\x45\x81\x89\xfb\x1b\xf2\x51\x09\x89\x44\xd0\x58\x05\x92\xb3\x7b\x20\xc4\x44\xc6\x9d\x3b\xf0\x3f\x70\xf4\xde\x2a\xc8\x9c\x99\x11\xb0\x5d\x5e\x76\x15\xd2\x72\x13\x66\xdd\x72\xd4\x6b\x3d\x67\xce\x58\x33\xe9\xbd\x3f\xa1\xde\xdb\x43\x8c\x52\xc1\x6e\x07\xe2\xe9\x59\x5c\x64\x46\x98\x16\x72\xcd\xb3\x96\x75\x90\x68\xc1\xaa\x16\x5e\xbf\xab\x45\x88\x0e\xc6\x83\x8d\xc8\xcb\xbf\xaf\xe0\x03\xba\xfb\xec\xfa\x17\x7c\x4c\x67\xc2\x28\xa3\x5f\x68\xc0\xeb\x10\x05\x72\x13\x67\xab\xdf\xdf\xba\x75\x6f\xbe\x15\x55\xe1\x33\xa0\x93\x62\x85\x45\x07\x17\x5c\x3d\x74\xff\x05\x00\x00\xff\xff\xc1\x0a\x5b\x7f\xb8\x01\x00\x00")

func golangDialectPostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDialectPostgresTmpl,
		"golang.dialect-postgres.tmpl",
	)
}

func golangDialectPostgresTmpl() (*asset, error) {
	bytes, err := golangDialectPostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.dialect-postgres.tmpl", size: 440, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDialectSqlite3Tmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x62\x96\xc0\x2e\xc4\x5d\x59\x46\x10\x60\x0f\x2e\x74\x48\x93\xa0\x1f\xc8\x47\x6b\x17\xe8\x21\x08\x0c\x5a\x1a\xc9\xac\x29\x52\x21\xa9\xc4\x86\xa0\xff\x5e\x90\x92\x13\xbb\x4d\x0b\x14\xd0\x45\x7c\x33\x6f\x3e\xde\x9b\xae\x9b\x40\x81\xa5\x50\x08\x54\xd4\x8d\x36\x8e\x42\xdf\x93\x88\xd6\xdc\xad\xa7\x86\xab\x82\x92\x88\x56\xc2\xad\xdb\x55\x9a\xeb\x7a\x5a\x73\xe7\xd4\xb4\xd2\x13\xfb\x20\x85\xc3\x53\x4a\xba\x0e\x50\x15\x30\xe9\x7b\x42\x8e\xe8\xec\x24\xd7\xca\x3a\xc3\x85\x72\x13\x34\x46\x9b\xc0\x5d\xb6\x2a\x87\x58\xd4\x8d\x84\xae\x83\x74\x8e\x39\x8a\x47\x34\xd0\xf7\x0c\x84\x3d\x7f\x4e\xb9\xf4\x19\x31\x1a\x03\x21\x97\x41\x4c\xa2\x17\x42\xb0\xce\x08\x55\x25\xa0\x37\xb0\xd2\x5a\x32\xe8\x48\x24\x4a\xc0\xf0\x32\xcb\x7c\x52\x1a\x8f\x4d\xa6\x81\x8b\xbd\xf1\x50\x47\xa2\x28\x04\xa6\xe7\xba\x40\xc8\x32\x38\x08\x7a\xa9\x3e\xc4\x45\xb5\xad\xf6\x64\x43\x3f\x2c\x3c\xe7\x5a\x6a\xe5\x81\xa1\x0b\x9b\x5e\x71\xeb\x3e\xa8\x02\xb7\x71\x6d\xab\x04\xe8\x8c\x0e\x81\xa2\x84\x21\xf6\xaf\x0c\x26\x27\x23\x69\x64\xd0\xb5\x46\x3d\x27\x7f\x31\xa2\x5e\x34\x3c\x47\x9f\x7c\x17\xe2\x67\xf7\x2c\x01\x67\x5a\x0c\x09\x3d\x39\xc8\xa2\xf4\x05\xe9\x89\xff\x0e\x80\x92\x4b\x8b\xa4\xff\xa5\x28\xba\x41\x15\x54\x78\xe4\x66\x3f\xf8\x85\xf1\xfb\xbf\xe1\x35\x42\x06\x5e\x9d\x98\x8d\xad\xf9\x7e\x7d\xa0\x28\xe0\xee\xe4\xff\xfb\xd5\xce\x21\x89\xbc\x29\xd2\x39\xf2\x22\x16\xc5\xdd\xec\x9e\x3d\xd7\x2f\x6b\x97\x2e\x1a\x23\x94\x2b\x63\x3a\x72\x2f\xff\xde\xd2\x64\x64\x1b\xe3\x19\xe9\x63\x46\x06\x1b\x08\x25\x5c\x1c\xa4\xb3\x0f\x32\x9d\x63\x25\xac\x43\x13\xff\xd4\x58\x02\xff\xec\x55\x5a\x7c\xbe\x12\x0e\x07\xc8\xaf\xf3\x5c\x2b\x85\xb9\x7b\xaf\xf5\x66\xb6\x9f\x68\x81\xae\x6d\x3c\x90\x90\xa8\x67\xa4\x27\x64\x3a\x85\x21\xf1\xf4\xa3\x6e\x8d\xe2\xf2\xda\x8b\x9f\x6b\xe5\x8c\x96\x16\xdc\x1a\xe1\xdb\x00\x2c\x6b\x8f\x34\x86\x57\x35\x87\x52\x1b\xe0\x52\x82\xc2\x27\x1f\xec\x0b\x09\xad\x6c\x1a\xf8\x84\xca\x11\x84\x03\x61\xc1\x20\x2f\xe0\x49\xb8\xb5\x6e\x1d\x70\xa8\x5b\x87\xdb\xc4\x63\x75\x6b\x1d\xac\x10\xf2\x35\x57\x15\x16\xe0\x74\xa8\xf5\xc8\x65\x8b\xb0\xd3\x2d\x3c\x71\xe5\x3c\xdb\x0a\x4b\x6d\x10\xb8\xda\xc1\x6d\x83\x0a\x72\x2e\xa5\x4d\x83\x4c\xaf\x34\x9e\x01\xfd\x7a\x76\x45\xc7\x2d\xfe\x38\x75\xec\x5b\x85\x7f\x8f\x37\xe6\x01\x06\x87\xf7\xd4\x91\x68\x99\xf8\x1f\xc8\xc2\x70\xe9\xe5\x16\xf3\x98\x7e\x9a\x9f\xbd\xbb\x3e\xf3\xa3\xa3\xa8\xd4\x72\x83\x3b\x0b\x19\xdc\xde\xd0\x04\x94\x90\x6c\xb8\x32\x63\xbc\xa3\x95\x90\xc1\xd2\xa3\x01\x6a\xbe\xc1\x4b\x13\x6e\x96\x05\x63\xfe\x86\xfe\x68\xdb\x19\x50\xf8\xef\x95\x39\xff\xbc\xe2\xf8\xae\x84\xf4\xaa\x87\xed\x78\xcb\x8f\xab\x88\xad\x6e\x4d\x8e\xa3\x1f\x19\xc4\x7e\x47\xe9\xc5\xdb\xe4\x60\x25\xfb\xdb\x7c\x90\xa9\x17\xe2\x35\x2f\x0e\x2c\xec\xe8\xcc\xbe\x07\x00\x00\xff\xff\xee\x90\xf0\xb1\x49\x05\x00\x00")

func golangDialectSqlite3TmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDialectSqlite3Tmpl,
		"golang.dialect-sqlite3.tmpl",
	)
}

func golangDialectSqlite3Tmpl() (*asset, error) {
	bytes, err := golangDialectSqlite3TmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.dialect-sqlite3.tmpl", size: 1353, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x3f\x8f\x9b\x40\x10\xc5\xeb\x9d\x4f\x31\xe9\xc0\xba\x50\x45\x29\x12\xb9\xc8\xdd\xa5\x48\x11\x45\xb2\x49\x1d\xf1\x67\xf0\xad\x8c\x17\x6e\x19\x2e\x1b\xad\xf8\xee\xd1\xf2\xdf\x80\x63\xa5\x38\xc1\x0d\x3b\xef\xfd\x1e\x33\xd8\x5a\x94\x19\x06\xc7\xba\x2c\x0b\xcd\x07\x83\x4d\x03\xfc\xa7\x24\x3c\x18\xac\x58\xd7\x09\xa3\x05\x91\xc6\xb8\x7b\x7e\x04\xc1\x06\x77\xa1\x81\x06\x20\xab\x55\x82\x9e\x36\xb8\x3b\x18\x1f\x7f\xaa\x2a\xca\x28\x34\x5e\xc2\x06\x93\x42\x31\x19\x0e\x9e\xba\xab\x8f\x5e\xdd\x3e\xfe\xe5\xba\xab\xd7\x3c\x08\xcd\x03\x92\xd6\xee\xaf\xd0\xbe\xd3\xe7\xbe\xf2\x69\x8f\xda\x04\x27\xe2\x4e\xca\x07\x21\xb3\xf6\xc1\xbb\x3d\x2a\x99\xbb\xa3\x42\x13\xd7\x5a\xb9\x7f\xdb\x1e\x10\x0d\x0c\x35\x36\xad\xb6\x92\xf9\x1a\x71\x14\xdd\xe0\xeb\x62\x2d\xa1\x64\xe6\x60\xd8\xe0\x7e\x32\x1f\x6a\xdd\xd9\x96\x36\x8d\x83\x1f\x25\xa9\x96\xf7\xf3\x12\x76\x4d\xeb\x70\x27\xe2\x5e\x6c\x93\xf8\x40\xb1\x54\xa9\x57\xb9\x39\x48\x75\xf2\xfb\xab\xd3\x9d\xba\xd3\x38\x18\xce\xf9\x6b\x89\xa7\xe2\x72\x91\xec\xf9\xe8\xdd\x88\x36\x43\x1d\x03\xb1\x09\x86\x3e\xf7\xba\xbb\x57\xd0\x22\xce\xc0\x5d\x96\x35\x71\x91\xe7\x71\x94\x9c\xff\xdf\x70\xea\xbc\x6b\x69\x2d\xea\x48\x9d\x08\x83\xef\xc4\x2f\x45\x5a\xb9\x95\xbd\xe6\xb0\x16\x83\xa3\x3c\xa9\x88\x6b\x4d\xd8\x34\xce\xee\x2d\xd2\xd8\xaf\xaf\xa3\xb9\x1a\xe1\xb4\x70\xab\x01\xf6\xde\x8b\x2d\x73\x06\xdf\xd4\x5b\x71\x76\xea\xd0\x38\x26\x52\xa9\xbb\x9f\xee\xba\xcf\x68\x60\x94\x8a\x49\x67\x51\x42\x68\xc1\xda\xf7\x1b\x11\xc4\x92\x7a\xa6\x35\xa8\x85\x66\x4b\x4f\xf4\x45\x00\x71\x63\x67\x40\x8c\x9b\xd0\xce\x04\xc4\x6c\x54\x5d\x65\xb0\xe0\x6d\x8b\xd1\x19\x40\xa4\x94\x13\xd3\x97\x3c\xbf\xf1\x39\x49\xc5\x1f\x3f\x3c\xf4\xd3\x07\x71\x89\xce\xf4\x55\xeb\xf9\x46\x5c\x5b\x3e\x3f\xde\x49\x75\x4c\x5e\xe8\x12\x79\x53\x9a\x21\xe6\x6b\xbe\x0c\x3a\x68\xa6\xf1\xa6\xe6\x68\x05\x20\x7e\xeb\xa8\x0c\x8d\x37\xfd\x2a\xf9\x53\xf8\x7f\x52\xff\x0d\x00\x00\xff\xff\x20\xf7\x92\xb8\x34\x05\x00\x00")

func golangFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangFooterTmpl,
		"golang.footer.tmpl",
	)
}

func golangFooterTmpl() (*asset, error) {
	bytes, err := golangFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.footer.tmpl", size: 1332, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xc1\x6a\x1b\x31\x10\x3d\x4b\x5f\x31\x31\x39\xec\xc2\x46\x1f\x90\xb2\x87\x10\x7a\xe8\x25\xd0\xf8\x58\xca\x22\xaf\x46\xae\x9a\xb1\xe4\x68\xb5\x8e\x83\xd0\xbf\x97\xd1\x3a\x26\x86\xb4\xa1\x07\x83\xf5\x66\xf6\xbd\x37\x4f\xa3\x9c\x6f\xc0\xa0\x75\x1e\x61\x35\xb9\xad\xd7\x69\x8e\xb8\x82\x9b\x52\xe4\x1d\xd1\x90\x33\xa8\xf5\x6c\xad\x3b\x42\x29\x4d\xce\x30\xa6\xe3\x5e\x47\xbd\x03\x75\x47\x74\x17\xb7\x13\x94\xd2\x42\x23\x45\x0c\x2f\x13\xe4\x0c\x13\xb9\x11\x83\x05\xf5\x18\x5e\xa0\x94\x0e\x30\x46\xfe\x85\xd8\x4a\x16\x43\x6f\x2a\xbb\x7c\xaf\xec\xfc\x21\x3c\x7d\x22\xab\xe3\xf6\x42\xf4\xef\x6c\x9b\x60\x5e\x57\x50\x8a\x14\x39\x03\xee\x36\x68\xf6\xa4\x47\xfc\x15\xc8\x60\x9c\x40\x7d\xf3\x36\x5c\x94\xa7\x67\x3a\xa1\xab\x61\xa8\xc8\x30\xa5\x5d\xaa\x1c\x52\x1c\x74\x84\x61\x38\x68\x9a\x71\x82\x1f\x3f\x9d\x4f\x18\xad\x1e\x31\x17\x29\xce\x78\x0f\x7a\xbf\x47\x6f\x9a\x37\xa4\xe3\x30\xac\x43\x32\xf5\x0c\x6a\x9d\x74\x72\xe3\xd9\x7d\x55\x8f\xda\x6f\x11\xae\x5d\x07\xd7\x3c\xde\x6d\x0f\xea\x61\x26\xd2\x1b\xc2\x53\xa3\x14\xce\xc2\x55\xce\xb5\x41\x3d\xe8\x1d\x42\x29\xca\x4d\x7e\x26\x6a\x5a\xc8\x52\x88\x61\x18\x83\x37\x9c\xd9\xb5\xe3\x22\x33\x40\x0f\x56\xd3\x84\xb5\xfc\x4f\x8b\x17\xbc\x15\x6f\xda\x56\x8a\x53\x3a\xde\xbc\xcf\x80\x43\x81\x9e\xff\x3c\xd3\x66\xf6\x86\x70\x78\x44\x6f\x30\x36\x61\xf3\x5b\x19\xa7\x09\xc7\xd4\xc1\xfb\x0c\x5b\x29\xb8\x46\x61\xbb\x4e\xbb\xd4\x2c\x1c\xdd\x39\x4f\xa5\x14\x47\x31\x0c\xbc\x3e\xcb\xae\xdc\xf6\x50\xd9\xa2\x3b\x60\x54\xdf\x67\x8c\xaf\xf7\xc1\x27\x3c\xa6\x66\x4c\xc7\x0e\x3e\xa4\xe0\x94\xf8\xe3\xab\x1e\xbc\xa3\x1a\x4b\xc4\x34\x47\xcf\xc7\xae\x12\xee\xf4\x13\x7e\x8d\xb1\xc1\x18\x97\xf9\x0c\x5a\xe4\xa9\x58\x5a\xdd\x53\x98\xb0\x61\x2f\x36\x9c\xc1\x07\x16\x5d\x42\xce\x19\x9c\x77\xc9\xe3\xcb\xdb\x66\x4b\x21\x58\xb1\x7f\x6b\x5e\x8f\xda\xf3\xaa\x6a\x63\x62\xb0\xd0\x58\xd2\x29\xa1\xaf\xed\x6d\xbd\x72\xf1\x81\xcb\x4f\x6c\xb2\xcf\xe5\x69\x9d\x6f\x6f\x49\x8a\x85\xf8\x41\x2c\x5e\x96\x81\x4e\xec\xb7\x67\x4b\xcc\xd3\x7e\xf9\xef\x60\x4e\x0d\x8b\x90\x77\x24\x4f\x9b\xc0\x0f\xed\x4f\x00\x00\x00\xff\xff\x06\xae\xcf\x54\x30\x04\x00\x00")

func golangGetAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetAllTmpl,
		"golang.get-all.tmpl",
	)
}

func golangGetAllTmpl() (*asset, error) {
	bytes, err := golangGetAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-all.tmpl", size: 1072, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetCountTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x41\x6b\xdc\x30\x10\x85\xcf\xd6\xaf\x98\x2c\x4b\x91\xc1\x11\x3d\x94\x1e\x0a\x3e\x84\xd0\x43\x2f\x81\x66\x8f\xa5\x18\xd9\x1a\xbb\x6a\xe4\xd1\x66\x2c\x6f\x37\x08\xfd\xf7\x22\x75\xb3\xec\x42\xdb\x1c\x0c\xd6\xbc\xd1\xf7\x34\x8f\x89\xf1\x16\x0c\x8e\x96\x10\x36\x8b\x9d\x48\x87\x95\x71\x03\xb7\x29\x89\x7b\xbf\x52\xe8\x62\x04\xb5\x5b\xc7\xd1\x1e\x21\x25\x19\x23\x0c\xe1\xb8\xd7\xac\x67\x50\x77\xce\xdd\xf1\xb4\x40\x4a\x35\x48\x51\x0d\xb9\x1f\x2c\x85\x8f\x1f\x1a\x40\xe6\xfc\x79\xae\x45\xb6\x40\x32\x85\x29\x2e\xfd\x2c\x1d\xfc\xd3\x9b\x66\x9a\xa7\x2b\xab\x7f\xf3\x7a\x6f\x5e\x36\x90\x92\xa8\x62\x04\x9c\x7b\x34\x7b\xa7\x07\xfc\xe1\x9d\x41\x5e\x40\x7d\xa1\xd1\x5f\xc9\xcb\xb3\x3b\x55\x37\x5d\x57\x2a\xdd\x12\xe6\x50\x18\xa2\x3a\x68\x86\xae\x3b\x68\xb7\xe2\x02\xdf\xbe\x5b\x0a\xc8\xa3\x1e\x30\x26\x51\x9d\xeb\x2d\xe8\xfd\x1e\xc9\xc8\xd7\x4a\x03\x31\xc2\x68\xd1\x99\x72\x06\xb5\x0b\x3a\xd8\xe1\xfc\xfa\xe2\xce\x9a\x26\x84\xad\x6d\x60\x9b\xc7\xfb\xd4\x82\x7a\x58\x9d\xd3\xbd\xc3\x53\xa3\xa8\xec\x08\x37\x31\x96\x06\xf5\xa0\x67\x84\x94\x94\x5d\x68\x75\x4e\xd6\x10\x45\x55\x75\xdd\xe0\xc9\xe4\xcc\xb6\x36\x8b\x99\x00\x2d\x8c\xda\x2d\x58\xe4\xff\x3e\xf1\x8a\x5b\xea\xb2\xae\x45\x75\x4a\x87\xcc\x65\x06\x39\x14\x68\xf3\xcf\xb3\xeb\x57\x32\x0e\xbb\x47\x24\x83\x2c\x7d\xff\x53\x19\xab\x1d\x0e\xa1\x81\xcb\x0c\x6b\x51\x65\xcd\xf9\x69\x17\xe6\x20\xff\x30\x9a\x73\x9e\x4a\xa9\x1c\x45\xde\x92\x16\x0a\x84\xed\x01\x59\x7d\x5d\x91\x5f\x1e\xfd\xaf\x7b\x4f\x01\x8f\x41\x0e\xe1\xd8\xc0\xdf\x2e\xab\xdd\xa0\x49\xbe\x2b\x3b\x57\x97\xb0\x32\xeb\xa6\x05\xb2\xae\xa4\xc3\x18\x56\x26\x78\xdf\x14\xfc\xac\x9f\xf0\x33\xb3\x44\xe6\x32\xa4\x78\xd5\x0b\xa0\xc9\xb7\xc4\x69\xee\xbc\x56\xbf\x03\x00\x00\xff\xff\x1e\x12\xca\x73\x16\x03\x00\x00")

func golangGetCountTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetCountTmpl,
		"golang.get-count.tmpl",
	)
}

func golangGetCountTmpl() (*asset, error) {
	bytes, err := golangGetCountTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-count.tmpl", size: 790, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetFirstTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\xc1\x8a\xdb\x30\x10\x86\xcf\xd6\x53\xcc\x86\x1c\x6c\xf0\xea\x01\x52\x7c\x58\x96\x16\x7a\x09\x74\x73\x2c\xc5\x28\xd6\x38\x55\x57\x96\xb2\x63\x39\x9b\x45\xe8\xdd\xcb\x28\x4e\x48\x4a\xdb\x85\x3d\x04\xa2\x99\xd1\xff\xcf\x7c\xd6\xc4\x78\x0f\x1a\x7b\xe3\x10\x16\xa3\xd9\x39\x15\x26\xc2\x05\xdc\xa7\x24\xbe\x18\x1a\x43\x1b\x23\xc8\xcd\xd4\xf7\xe6\x08\x29\x95\x31\x42\x17\x8e\x7b\x45\x6a\x00\xf9\x60\xed\x03\xed\x46\x48\xa9\x82\x52\x14\x31\xc2\x9c\x78\xf2\xaf\x90\x52\x0d\x48\xc4\x3f\x4f\x95\x60\x1f\x74\x3a\x0b\x8b\x6b\x53\xe3\x0e\xfe\xf9\x5d\x47\x45\xbb\x1b\xbf\x7f\xeb\x6d\xbd\x7e\x5b\x40\x4a\xb9\x1f\x1c\xb6\xa8\xf7\x56\x75\xf8\xd3\x5b\x8d\x34\x82\xfc\xea\x7a\x7f\x93\x1e\x5f\xec\x1c\x5d\xb4\x6d\x8e\xb4\x63\x18\x42\xd6\x10\xc5\x41\x11\xb4\xed\x41\xd9\x09\x47\xf8\xfe\xc3\xb8\x80\xd4\xab\x0e\x63\x12\xc5\x25\xde\x80\xda\xef\xd1\xe9\xf2\x1c\xa9\x21\x46\xe8\x0d\x5a\x9d\xcf\x20\x37\x41\x05\xd3\x5d\xba\xcf\xee\xa4\xdc\x0e\x61\x69\x6a\x58\xf2\x78\xab\x06\xe4\x7a\xb2\x56\x6d\x2d\xce\x85\xa2\x30\x3d\xdc\xc5\x98\x0b\xe4\x5a\x0d\x08\x29\x49\x33\xba\xc9\xda\xb2\x82\x28\x8a\xa2\x6d\x3b\xef\x34\x33\x5b\x1a\x4e\xb2\x02\x34\xd0\x2b\x3b\x62\x4e\xff\xb7\xc5\x1b\xdd\x1c\x2f\xab\x4a\x14\x33\x1d\xa7\xaf\x19\x30\x14\x68\xf8\xcf\x8b\xdd\x4e\x4e\x5b\x6c\x9f\xd0\x69\xa4\xd2\x6f\x7f\x49\x6d\x94\xc5\x2e\xd4\x70\xcd\xb0\x12\x05\xe7\xac\xdf\x6d\xc2\x10\xca\x93\x46\x7d\xe1\x29\xa5\x64\x14\x6d\x4b\xfe\x75\x3c\xbd\x96\x55\x03\x59\x8d\xcc\x01\x49\x7e\x9b\x90\xde\x1e\xbd\x0b\x78\x0c\x65\x17\x8e\xf5\x5f\x15\x18\x12\xdf\xbd\x6b\xc0\x19\x9b\xa9\x10\x86\x89\x1c\x1f\xeb\xac\x37\xa8\x67\xfc\x4c\x54\x22\xd1\x69\x3c\x8d\x3d\xf2\x50\xec\x2c\x1f\xad\x1f\xb1\xe4\x56\x18\xf7\x1c\x5c\xb3\xe7\x89\xf1\xac\xbf\x6a\xce\x17\x58\xaa\xfa\xf4\xa7\xe9\x3b\xae\x6c\x7b\x53\xe2\x8c\xe5\x5e\x32\x6b\xe3\x4c\x38\xef\x8d\x28\x58\xf8\x62\xb6\xe9\x94\xe3\x2d\x50\x5a\x93\xef\xa1\xec\xad\x0a\x01\x5d\xae\xae\xf2\x6b\xfa\x00\x00\x71\xae\x60\x61\xde\xad\xf3\xca\x72\x53\xf3\xb7\xe7\xd5\xfa\x1d\x00\x00\xff\xff\x5f\x51\x63\xa4\x1f\x04\x00\x00")

func golangGetFirstTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetFirstTmpl,
		"golang.get-first.tmpl",
	)
}

func golangGetFirstTmpl() (*asset, error) {
	bytes, err := golangGetFirstTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-first.tmpl", size: 1055, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetHasTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xdf\x8a\xdb\x3c\x10\xc5\xaf\xad\xa7\x98\x0d\xe1\xc3\x06\xaf\x1e\xe0\x03\x5f\x2c\xa5\xd0\xde\x2c\x74\x73\x59\x8a\x19\x5b\xe3\x44\x5d\x59\xca\x8e\xe4\x34\x8b\xd0\xbb\x17\x29\x6e\x48\xa0\x7f\x2e\x0c\xd6\x99\xd1\x39\x9a\x1f\x13\xe3\x23\x28\x9a\xb4\x25\xd8\x78\xbd\xb7\x18\x16\xa6\x0d\x3c\xa6\x24\x3e\xa1\xef\x63\x04\xb9\x5b\xa6\x49\x9f\x21\xa5\x3a\x46\x18\xc3\xf9\x88\x8c\x33\xc8\x27\x63\x9e\x78\xef\x21\xa5\x06\x6a\x51\x1d\xd0\xc3\xe0\x9c\x69\x81\x98\xf3\xe7\xb8\x11\xd9\x9d\xac\x2a\x76\xe2\x36\x4a\xdb\x93\x7b\xfd\x47\x0e\xf2\xfe\x2e\xe5\xcf\x6e\x83\x53\xef\x1b\x48\x49\x54\x31\x02\xcd\x03\xa9\xa3\xc1\x91\x0e\xce\x28\x62\x0f\xf2\xb3\x9d\xdc\x5d\xd9\xbf\x99\x55\xdd\xf4\x7d\x51\x7a\x1f\xe6\x50\x3c\x44\x75\x42\x86\xbe\x3f\xa1\x59\xc8\xc3\xd7\x6f\xda\x06\xe2\x09\x47\x8a\x49\x54\x57\xbd\x03\x3c\x1e\xc9\xaa\xfa\x97\xd2\x42\x8c\x30\x69\x32\xaa\x9c\x41\xee\x02\x06\x3d\x5e\x5f\x5f\xd2\x19\xed\x9e\x60\xab\x5b\xd8\xe6\xf1\xfe\xef\x40\x3e\x2f\xc6\xe0\x60\x68\x6d\x14\x95\x9e\xe0\x21\xc6\xd2\x20\x9f\x71\x26\x48\x49\x6a\x6f\x17\x63\xea\x06\xa2\xa8\xaa\xbe\x1f\x9d\x55\x99\xd9\x56\xe7\x62\x76\x80\x0e\x26\x34\x9e\x4a\xf9\xaf\x4f\xbc\xf3\x2d\x7a\xdd\x34\xa2\x5a\xe9\x58\x75\xcb\x20\x43\x81\x2e\xff\xbc\x99\x61\xb1\xca\x50\xff\x42\x56\x11\xd7\x6e\xf8\x2e\x95\x46\x43\x63\x68\xe1\x96\x61\x23\xaa\x5c\x33\x6e\xbf\x0b\x73\xa8\x2f\x1e\xed\x95\xa7\x94\x32\xa3\xc8\x3b\xd2\x41\x31\x61\x7d\x22\x96\x5f\x16\xe2\xf7\x17\xf7\xe3\x83\xb3\x81\xce\xa1\x1e\xc3\xb9\x85\xdf\x5d\x96\xbb\x11\x6d\xfd\xdf\x01\x7d\x53\x50\x65\xa7\x87\x0e\xac\x36\x85\x0d\x53\x58\xd8\x5e\x58\xb4\x25\x60\xc6\x57\xfa\xc8\x5c\x13\xf3\x65\xcc\xb5\xe5\x80\xbe\xcd\xd7\xc4\x3a\x76\xde\xaa\x9f\x01\x00\x00\xff\xff\xfd\xa0\xd5\xe5\x0e\x03\x00\x00")

func golangGetHasTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetHasTmpl,
		"golang.get-has.tmpl",
	)
}

func golangGetHasTmpl() (*asset, error) {
	bytes, err := golangGetHasTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-has.tmpl", size: 782, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetLastTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x91\x41\x6f\xa3\x30\x10\x85\xcf\xf6\xaf\x98\xe5\x04\x12\xe1\xb4\xda\x5b\x4e\xab\x1e\x2a\xf5\xd2\xa4\x77\x64\xf0\x40\xdd\x18\x9b\x0c\x43\x9a\xd4\xf2\x7f\xaf\x0c\x89\x44\x0e\x08\x6b\xe6\xcd\xfb\x3c\xcf\x21\xec\x40\x63\x67\x1c\x42\x36\x99\xde\x29\x9e\x09\x33\xd8\xc5\x28\x7b\xe4\x37\x35\x71\x08\x50\x1d\x90\x67\x72\xd5\xc7\x6d\x44\x88\x31\x6f\xf9\x0a\xad\x77\x8c\x57\xae\xfe\xaf\xff\x52\x8a\xf1\x04\xc6\xf1\xbf\xbf\x05\xe4\x52\x84\x00\xa3\x22\x35\x3c\x66\x21\xc6\x12\x90\x28\x7d\x9e\x0a\x99\xb8\xe8\xf4\x02\x92\xdb\x4b\x34\x5e\xdf\x56\x7e\xf2\xc0\xa1\x41\x3d\x5a\xd5\xe2\xa7\xb7\x1a\x69\x82\xea\xd5\x75\x1e\xb6\xed\xe9\x6c\xef\xd5\xac\xae\x97\x4a\x3d\xf1\xc0\x59\x12\x49\x71\x51\x04\xf5\x52\x80\x7d\x3a\x9c\x6d\x33\x3b\x6d\xb1\x3e\xa0\xd3\x48\xb9\x6f\xbe\x2a\x6d\x94\xc5\x96\x4b\xd8\xce\x17\x52\xa4\x9e\xf5\xfd\x91\x07\xce\x57\x8f\x12\xc6\x53\x21\x17\xb6\x71\x86\x37\xdb\x49\x91\xb6\xdb\xc3\xe2\x47\xe6\x82\x54\xbd\xcf\x48\xb7\x83\xff\xbe\x47\x94\x62\x2b\x61\xe3\x53\x1d\x5b\xe5\xf2\x10\x40\x69\x4d\xbe\x83\xbc\xb3\x8a\x19\xdd\xc3\xb5\x80\x18\x0b\x29\x4c\xb7\x04\xf7\x67\x0f\xce\x58\x08\x52\x08\x5a\xa1\x21\xc0\x0f\x92\x7f\x8a\x38\xe1\x07\x75\xc2\x17\xa2\x1c\x89\x0a\x29\xa2\xdc\xe8\x15\xf5\x4f\x72\x67\xac\x4c\x39\xde\x5f\xe2\x37\x00\x00\xff\xff\x00\xbd\x50\x68\x0e\x02\x00\x00")

func golangGetLastTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetLastTmpl,
		"golang.get-last.tmpl",
	)
}

func golangGetLastTmpl() (*asset, error) {
	bytes, err := golangGetLastTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-last.tmpl", size: 526, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetLimitoffsetTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x41\x6b\xdc\x3c\x10\x3d\x4b\xbf\x62\xb2\xe4\x60\x83\xa3\xd3\xc7\x77\x48\xf1\x21\x84\x1e\x0a\x25\xd0\xec\xb1\x14\xa3\xb5\x46\x5b\x35\xb2\xb4\x91\xe4\xcd\x06\xe1\xff\x5e\x46\xf6\x2e\xbb\x21\xa4\xed\xc1\x60\xcd\x8c\xde\x7b\xf3\x34\x93\xf3\x0d\x28\xd4\xc6\x21\xac\xa2\xd9\x3a\x99\xc6\x80\x2b\xb8\x99\x26\xfe\xd5\x0c\x26\xa1\xea\x72\x06\xb1\x1e\xb5\x36\x07\x98\xa6\x2a\x67\xe8\xd3\x61\x27\x83\x1c\x40\xdc\x59\x7b\x17\xb6\x11\xa6\xa9\xe1\xcc\x52\x3d\x18\x97\x1a\xf0\x5a\x47\x2c\xff\xff\xff\x57\x43\xc5\x59\xf0\x2f\x11\x72\x86\x68\x4d\x8f\x5e\x83\x78\xf4\x2f\x74\x0b\x30\x04\xfa\x7c\xa8\x39\x49\x41\xa7\x0a\x37\xe7\xe7\xc2\x8c\xdb\xfb\xa7\xbf\x50\x25\xc3\xf6\x42\x13\x14\x49\x47\x39\x6f\x18\xce\x09\x36\x5e\xbd\xae\x60\x9a\x38\xcb\x19\x70\xd8\xa0\xda\x59\xd9\xe3\x4f\x6f\x15\x86\x08\xe2\x8b\xd3\xfe\x22\x1d\x9f\xed\x12\x5d\x75\x5d\x89\x74\x31\x0d\xa9\x60\x70\xb6\x97\x01\xba\x6e\x2f\xed\x88\x11\xbe\xff\x30\x2e\x61\xd0\xb2\xc7\x3c\x71\x76\x8a\xb7\x20\x77\x3b\x74\xaa\x3a\x46\x1a\x32\x48\x1b\xb4\xaa\x9c\x41\xac\x93\x4c\xa6\x5f\x9a\xa9\x79\x61\x0f\xd2\x6d\x11\xae\x4d\x03\xd7\xd4\xed\x6d\x0b\xe2\x61\xb4\x56\x6e\x2c\x2e\x85\x9c\x19\x0d\x57\x39\x97\x02\xf1\x20\x07\x84\x69\x12\x26\xba\xd1\xda\xaa\x86\xcc\x19\xeb\xba\xde\xbb\x62\xe1\xb5\xa1\x24\x21\x40\x0b\x5a\xda\x88\x25\xfd\xa1\xc4\x0b\xdc\x12\xaf\xea\x9a\xb3\xc5\x1d\xa7\x66\x0f\x3e\x02\x79\xf3\x2c\x47\xc3\xc8\x41\x68\xe9\xe7\xd9\x6e\x46\xa7\x2c\x76\x8f\xe8\x14\x86\xca\x6f\x7e\x09\x65\xa4\xc5\x3e\x35\x70\x6e\x78\xcd\x19\xe5\xac\xdf\xae\xd3\x90\xaa\x19\xa3\x39\x99\x2f\x84\xa8\x8b\x16\x9a\xbf\x79\xd8\x6e\x5b\x28\x68\xc1\xec\x31\x88\x6f\x23\x86\xd7\x7b\xef\x12\x1e\x52\xd5\xa7\x43\x03\xef\x42\x90\xa5\x74\xf9\xaa\x05\x67\x6c\xf1\x30\x60\x1a\x83\xa3\x63\x53\x00\x07\xf9\x84\x9f\x43\xa8\x30\x84\xd9\x0c\x85\x1a\xa9\x2b\xa2\x16\xf7\xd6\x47\xac\x48\x8b\xf6\xa7\xe0\x03\x91\xce\x2f\x92\x33\x18\x67\x92\xc3\x97\xe3\x6a\x70\xc6\x88\xb1\x3d\x16\xaf\x7b\xe9\x68\xcc\xa5\x52\xc1\x6b\xa8\xb4\x95\x29\xa1\x2b\xe5\x75\x99\x0f\xf6\x8e\xca\x3f\xc8\x24\x9d\xf3\x6e\x9e\x5e\x69\x76\x8a\x88\x68\x99\x66\x2d\x73\x43\x0b\xfa\xed\x49\x12\xe1\xd4\x9f\xfe\xd9\x98\xa5\x60\x26\x72\xc6\xf2\x65\x6c\x68\x2b\x7f\x07\x00\x00\xff\xff\xb5\x28\x28\x1b\x8f\x04\x00\x00")

func golangGetLimitoffsetTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetLimitoffsetTmpl,
		"golang.get-limitoffset.tmpl",
	)
}

func golangGetLimitoffsetTmpl() (*asset, error) {
	bytes, err := golangGetLimitoffsetTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-limitoffset.tmpl", size: 1167, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetOneAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\xcd\x8a\xdb\x30\x10\xc7\xcf\xf6\x53\xcc\x86\x2d\xd8\xe0\xd5\x03\x6c\xf1\x61\x59\x4a\xe9\xa1\x81\x6e\x8e\xa5\x18\xc5\x1a\xa7\xea\x2a\x52\x32\x92\xb3\x59\x84\xde\xbd\x8c\xe2\xa4\x49\xbf\x52\x7a\x08\xc4\xf3\xf1\xff\xcf\xfc\x90\x14\xe3\x1d\x28\x1c\xb4\x45\x98\x79\xbd\xb2\x32\x8c\x84\x33\xb8\x4b\xa9\x7c\x8f\xa1\x8b\x11\xc4\x62\x1c\x06\xbd\x87\x94\xaa\x18\xa1\x0f\xfb\x8d\x24\xb9\x06\xf1\x60\xcc\x03\xad\x3c\xa4\x54\x43\x55\x16\x31\xc2\x94\x78\x72\x2f\x90\x52\x03\x48\xc4\x3f\x47\x75\xc9\x2e\x68\x55\x96\x2d\xcf\x2d\xb5\xdd\xb9\xe7\x2b\x7e\x92\x56\x17\x6e\x7f\x56\x5b\x3a\xf5\x3a\x83\x94\xf2\x34\xb8\x5e\xa2\xda\x18\xd9\xe3\x57\x67\x14\x92\x07\xf1\xc1\x0e\xee\x22\xed\xb7\x66\x8a\xce\xba\x2e\x47\x3a\x1f\xd6\x21\x6b\x94\xc5\x4e\x12\x74\xdd\x4e\x9a\x11\x3d\x7c\xfe\xa2\x6d\x40\x1a\x64\x8f\x31\x95\xc5\x29\xde\x82\xdc\x6c\xd0\xaa\xea\x18\x69\x20\x46\x18\x34\x1a\x95\xbf\x41\x2c\x82\x0c\xba\x3f\x4d\x9f\xdd\x49\xda\x15\xc2\xad\x6e\xe0\x96\xd7\xbb\x6f\x41\xcc\x47\x63\xe4\xd2\xe0\x54\x58\x16\x7a\x80\x9b\x18\x73\x81\x98\xcb\x35\x42\x4a\x42\x7b\x3b\x1a\x53\xd5\x10\xcb\xa2\xe8\xba\xde\x59\xc5\xcc\x6e\x35\x27\x59\x01\x5a\x18\xa4\xf1\x98\xd3\x7f\x1d\xf1\x42\x37\xc7\xab\xba\x2e\x8b\x89\x8e\x55\xe7\x0c\x18\x0a\xb4\xfc\x67\x6b\x96\xa3\x55\x06\xbb\x27\xb4\x0a\xa9\x72\xcb\x6f\x42\x69\x69\xb0\x0f\x0d\x9c\x33\xac\xcb\x82\x73\xc6\xad\x16\x61\x1d\xaa\x83\x46\x73\xe2\x29\x84\x60\x14\x5d\x47\xee\xc5\x1f\xce\xca\x7d\x0b\x59\x8d\xf4\x0e\x49\x7c\x1a\x91\x5e\x1f\x9d\x0d\xb8\x0f\x55\x1f\xf6\x0d\xfc\x56\x82\x29\x71\xf3\x4d\x0b\x56\x9b\x8c\x85\x30\x8c\x64\xf9\xb3\xc9\x82\x6b\xf9\x8c\xef\x88\x2a\x24\x3a\xec\xa7\x70\x40\xde\x8a\xad\xc5\xa3\x71\x1e\x2b\x9e\x85\x79\x4f\xc1\x39\x9b\x1e\x20\x4f\xfa\xf7\xed\xb1\x81\xa5\xea\xb7\x3f\x9b\x5e\x71\x65\xdb\x8b\x92\x63\xda\x6f\x0d\x2b\xce\xdd\x93\x7b\xf1\x79\xbc\xcc\x5f\x5b\x1d\x8e\x37\xa9\x2c\xd8\xeb\xe4\xbf\xe8\xa5\xe5\x9b\x21\x95\x22\x37\x40\x35\x18\x19\x02\xda\x5c\x5d\xe7\x13\xf6\x1f\x4c\x72\xcf\xaf\xcb\x9f\xb7\x05\xe7\x3e\x4a\xfb\xca\x73\xb2\xfd\x86\xb4\x0d\x03\xcc\xde\x6c\x67\x67\x57\xf6\x87\xd8\xbf\x40\xbb\x3e\xd5\x54\xc1\xeb\xf2\x2b\x70\x7c\x5a\xac\x36\xe5\x74\x4a\xf9\x11\xf8\x1e\x00\x00\xff\xff\xb7\x7c\xc0\x52\xc5\x04\x00\x00")

func golangGetOneAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetOneAllTmpl,
		"golang.get-one-all.tmpl",
	)
}

func golangGetOneAllTmpl() (*asset, error) {
	bytes, err := golangGetOneAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-one-all.tmpl", size: 1221, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetOneTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x4f\x8b\xdb\x30\x10\xc5\xcf\xd6\xa7\x98\x0d\x39\xd8\xe0\xd5\x07\x28\xf8\xb0\x94\x52\x7a\x59\x68\x72\x2c\xc5\x28\xd6\x28\x55\x57\x1e\x65\xc7\x72\x36\x5b\xa1\xef\x5e\xa4\x75\xb2\x09\xf4\xcf\xc1\x60\xcf\x1b\xde\x1b\xff\x78\x31\xde\x83\x46\x63\x09\x61\x35\xd9\x3d\xa9\x30\x33\xae\xe0\x3e\x25\xf1\x19\x43\x1f\x23\xc8\xed\x6c\x8c\x3d\x41\x4a\x75\x8c\x30\x84\xd3\x41\xb1\x1a\x41\x3e\x38\xf7\xc0\xfb\x09\x52\x6a\xa0\x16\x55\x8c\xb0\x08\x1b\xff\x02\x29\xb5\x80\xcc\xf9\xf1\xdc\x88\x9c\x82\xa4\x8b\xad\xb8\x8e\xb4\x74\xf4\x4f\xff\xc9\x53\xbc\xbf\x49\xfb\xbb\xdb\xce\xeb\xd7\x15\xa4\x54\xae\xc1\x71\x87\xfa\xe0\xd4\x80\x3f\xbc\xd3\xc8\x13\xc8\x2f\x64\xfc\x8d\x3c\x3d\xbb\x65\xba\xea\xfb\x32\xe9\xa7\x30\x86\xe2\x21\xaa\xa3\x62\xe8\xfb\xa3\x72\x33\x4e\xf0\xed\xbb\xa5\x80\x6c\xd4\x80\x31\x89\xea\x32\xef\x40\x1d\x0e\x48\xba\x3e\x4f\x5a\x88\x11\x8c\x45\xa7\xcb\x37\xc8\x6d\x50\xc1\x0e\x97\xeb\x4b\x3a\x2b\xda\x23\xac\x6d\x0b\xeb\xfc\x7b\x1f\x3a\x90\x8f\xb3\x73\x6a\xe7\x70\x59\x14\x95\x35\x70\x17\x63\x59\x90\x8f\x6a\x44\x48\x49\xda\x89\x66\xe7\xea\x06\xa2\xa8\xaa\xbe\x1f\x3c\xe9\xcc\x6c\x6d\xb3\x98\x1d\xa0\x03\xa3\xdc\x84\x45\xfe\xe7\x89\x37\xbe\x65\x5e\x37\x8d\xa8\x16\x3a\xa4\xaf\x19\x64\x28\xd0\xe5\x97\x67\xb7\x9b\x49\x3b\xec\x37\x48\x1a\xb9\xf6\xbb\x9f\x52\x5b\xe5\x70\x08\x2d\x5c\x33\x6c\x44\x95\x35\xe7\xf7\xdb\x30\x86\xfa\xcd\xa3\xbd\xf0\x94\x52\x2e\x28\x2c\xd9\x70\x2e\x8d\xa8\x72\x69\x3a\x28\xae\x6c\x8f\xc8\xf2\xeb\x8c\xfc\xba\xf1\x2f\x1f\x3d\x05\x3c\x85\x7a\x08\xa7\x16\xfe\xe4\x26\xb7\x83\xa2\x5c\x19\xa5\x35\x7b\x03\xb5\x71\x2a\x04\xa4\xe2\xdd\x14\xf4\x19\x69\x0e\xb8\xeb\x80\xac\x2b\x0c\x19\xc3\xcc\x94\x79\xfc\x42\xf6\xef\xe5\xcd\x17\x8c\xea\x09\x3f\x31\xd7\xc8\xfc\x06\xe6\x7d\xb9\x74\xf2\xbc\x4b\xd6\x89\x85\x59\xae\xe4\xef\x00\x00\x00\xff\xff\x21\x98\xc5\xe5\x53\x03\x00\x00")

func golangGetOneTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetOneTmpl,
		"golang.get-one.tmpl",
	)
}

func golangGetOneTmpl() (*asset, error) {
	bytes, err := golangGetOneTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-one.tmpl", size: 851, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetPagedTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xdd\x4e\xdc\x3c\x10\xbd\x8e\x9f\x62\x58\x21\x94\x7c\x0a\x7e\x00\x3e\xe5\x02\xa1\x56\xea\x0d\x6a\xd9\xde\x55\x55\xe4\x8d\xc7\x5b\x17\xc7\x5e\x6c\x67\x59\xe4\xe6\xdd\xab\x71\xb2\x0b\x5b\x0a\x54\x5c\x24\x92\xc7\xc7\x33\x67\xce\xfc\xa4\x74\x0e\x12\x95\xb6\x08\x8b\xa0\xd7\x56\xc4\xc1\xe3\x02\xce\xc7\x91\x7d\x16\x6b\x94\x6d\x4a\xc0\x97\x83\x52\x7a\x07\xe3\x58\xa6\x04\x5d\xdc\x6d\x84\x17\x3d\xf0\x4b\x63\x2e\xfd\x3a\xc0\x38\xd6\xac\x30\xba\xd7\x11\xb4\x8d\x35\x84\x28\x7c\x84\xff\xe8\xe5\x95\xb3\x51\xdb\x41\x44\xed\x2c\xff\xfa\xb0\x41\x18\xc7\x0a\x4a\x56\x78\x77\x1f\x20\x25\x08\x46\x77\xe8\x14\xf0\x1b\x77\x4f\x8e\xc0\xe2\xee\x95\xb7\x35\xa0\xf7\xf4\x39\x5f\x31\xe2\x8e\x56\x66\xb2\xec\x69\x22\xda\x6e\xdd\xed\x9b\x59\x08\xbf\x3e\xca\x01\x72\x0a\x33\xfd\x57\xbc\xaf\x9c\x7c\x58\xc0\x38\xb2\x22\x25\xc0\x7e\x85\x72\x63\x44\x87\x3f\x9c\x91\xe8\x03\xf0\x4f\x56\xb9\xa3\xeb\x70\x67\x66\xeb\xa2\x6d\xb3\xa5\x0d\xb1\x8f\x8b\xe7\xa0\x8f\xda\x87\x78\x8c\x54\x64\x7a\xc4\xb3\x62\x2b\x3c\xb4\xed\x56\x98\x01\x03\x7c\xfb\xae\x6d\x44\xaf\x44\x87\x69\x64\xc5\xc1\xde\x80\xd8\x6c\xd0\xca\x72\x6f\xa9\x49\x6c\xa5\xd1\xc8\x7c\x06\xbe\x8c\x22\xea\x6e\xce\xbd\x62\x99\x88\x17\x76\x8d\x70\xaa\x6b\x38\x25\x71\x2e\x1a\xe0\xd7\x83\x31\x62\x65\x70\x06\xb2\x42\x2b\x38\x49\x29\x03\xf8\xb5\xe8\xa9\x28\x5c\x07\x3b\x18\x53\x56\x90\x58\x51\xb4\x6d\xe7\x6c\x56\xfc\x54\xd3\x25\x79\x80\x06\x94\x30\x01\xf3\xf5\xab\x14\x8f\xfc\x66\x7b\x59\x55\xac\x98\x85\xb2\xf2\xa9\x06\x24\x0a\x84\xe8\xb5\x5d\x67\x5e\x53\xdf\x9d\x34\x60\xb5\x81\xb3\xb3\xe9\xcc\xdb\x80\x71\x26\xf6\x72\xe4\x19\x9a\x8f\x73\x23\x54\xf9\x49\x8e\xd1\x50\xb0\x3b\xb3\x1a\xac\x34\xd8\xde\xa0\x95\xe8\x4b\xb7\xfa\xc9\xa5\x16\x06\xbb\x58\xc3\xd3\xba\x12\x5d\x40\x13\xf0\xcd\xa8\xef\x8f\xf3\xd8\x15\x93\x38\x04\x32\x6e\xbd\x8c\x7d\x2c\x27\x67\xf5\xa1\x49\x38\xe7\x54\xdf\xb6\xa5\x99\x9b\x06\xe8\xa2\x81\xec\xd6\xeb\x2d\x7a\xfe\x65\x40\xff\x40\xd3\x86\xbb\x58\x76\x71\x57\xc3\x5f\x5d\x90\xc4\xf4\x78\x16\x98\x92\xf3\x18\x07\x6f\xe9\x58\x4f\x3f\xf2\xda\x8b\x5b\xfc\xe0\x7d\x89\xde\x4f\xe4\x24\x2a\xa4\x7a\x51\x7c\x7e\x65\x5c\xc0\x72\x6e\x38\x89\x9d\x11\x1e\x8f\x67\x7d\x3f\x16\xc7\x0b\x60\xdf\x13\xb9\x9c\x0d\x44\x3f\x20\x63\x85\x72\x07\xc7\xd7\xc4\x7e\x6a\xc1\x94\x40\x5b\x1d\x2d\xde\xef\xf7\x0a\x2b\x0a\xa2\xde\xec\xc1\xcb\x4e\x58\x5a\x03\x42\x4a\xef\x14\x94\xca\x88\x18\xd1\x66\x78\x05\xbf\xa0\x73\x7d\x2f\x60\x1c\x1f\x21\x7f\x52\x9c\x9b\x85\xaa\xf7\x5c\x97\x7f\x11\x86\x94\x99\xd6\xe0\xa1\x33\xa6\x02\x51\x4c\x5a\x4d\x13\x73\x42\xe6\x9d\xd8\xc0\xcb\x64\xb2\xcc\x33\x8d\x8b\x43\x92\x14\xab\xfa\xff\x5d\x35\x63\x7b\xd8\x44\x89\x08\x64\x34\x9b\xa7\x90\x96\xe2\xef\x00\x00\x00\xff\xff\x3d\x1d\x7f\x33\x3b\x06\x00\x00")

func golangGetPagedTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetPagedTmpl,
		"golang.get-paged.tmpl",
	)
}

func golangGetPagedTmpl() (*asset, error) {
	bytes, err := golangGetPagedTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-paged.tmpl", size: 1595, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetScalarAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\xcf\x8a\xdb\x30\x10\xc6\xcf\xf6\x53\xcc\x86\x2d\xd8\xe0\xd5\x03\x6c\xf1\x61\x59\x5a\xe8\xa1\x0b\xdd\x1c\x4b\x31\x8a\x35\x4a\xd5\x95\xa5\xec\x58\xce\x66\x11\x7a\xf7\x32\x8a\x93\x26\xfd\x97\xd2\x43\x20\x9a\x19\x7d\xdf\xcc\x0f\x8d\x63\xbc\x01\x85\xda\x38\x84\xc5\x68\xd6\x4e\x86\x89\x70\x01\x37\x29\x95\xef\x8d\x53\x5d\x8c\x20\x96\x93\xd6\x66\x07\x29\x55\x31\x42\x1f\x76\x1b\x49\x72\x00\x71\x67\xed\x1d\xad\x47\x48\xa9\x86\xaa\x2c\x62\x84\x39\xf1\xe8\x5f\x20\xa5\x06\x90\x88\x7f\x9e\xea\x92\x6d\xd0\xa9\xac\x5b\x9e\x7a\x1a\xb7\xf5\x4f\x97\x0c\x25\xad\xcf\xec\xfe\x2c\xb7\xf2\xea\x75\x01\x29\xe5\x76\x70\x58\xa1\xda\x58\xd9\xe3\x57\x6f\x15\xd2\x08\xe2\x83\xd3\xfe\x2c\x3d\x3e\xdb\x39\xba\xe8\xba\x1c\xe9\xc6\x30\x84\xac\x51\x16\x5b\x49\xd0\x75\x5b\x69\x27\x1c\xe1\xf3\x17\xe3\x02\x92\x96\x3d\xc6\x54\x16\xc7\x78\x0b\x72\xb3\x41\xa7\xaa\x43\xa4\x81\x18\x41\x1b\xb4\x2a\x9f\x41\x2c\x83\x0c\xa6\x3f\x76\x9f\xdd\x49\xba\x35\xc2\xb5\x69\xe0\x9a\xc7\xbb\x6d\x41\x3c\x4c\xd6\xca\x95\xc5\xb9\xb0\x2c\x8c\x86\xab\x18\x73\x81\x78\x90\x03\x42\x4a\xc2\x8c\x6e\xb2\xb6\xaa\x21\x96\x45\xd1\x75\xbd\xdf\x33\xbb\x36\x9c\x64\x05\x68\x41\x4b\x3b\x62\x4e\xff\xb5\xc5\x33\xdd\x1c\xaf\xea\xba\x2c\x66\x3a\x4e\x9d\x32\x60\x28\xd0\xf2\x9f\x67\xbb\x9a\x9c\xb2\xd8\x3d\xa2\x53\x48\x95\x5f\x7d\x13\xca\x48\x8b\x7d\x68\xe0\x94\x61\x5d\x16\x9c\xb3\x7e\xbd\x0c\x43\xa8\xf6\x1a\xcd\x91\xa7\x10\x82\x51\x74\x1d\xf9\x97\x71\xff\x58\x6e\x5b\xc8\x6a\x64\xb6\x48\xe2\xd3\x84\xf4\x7a\xef\x5d\xc0\x5d\xa8\xfa\xb0\x6b\xe0\xb7\x12\x4c\x89\x2f\x5f\xb5\xe0\x8c\xcd\x58\x08\xc3\x44\x8e\x8f\x4d\x16\x1c\xe4\x13\xbe\x23\xaa\x90\x68\x3f\x9f\x42\x8d\x3c\x15\x5b\x8b\x7b\xeb\x47\xac\xb8\x17\xe6\x3d\x07\x1f\xd8\x74\x0f\x79\xd6\xbf\x6d\x0f\x17\x58\xaa\x7e\xfb\xb3\xe9\x05\x57\xb6\x3d\x2b\x71\xc6\x72\x2f\x19\xb6\x71\x26\x1c\xf6\xa6\x2c\x58\xf8\x68\xb6\xec\xa5\xe3\x35\x90\x4a\x91\xd7\x50\x69\x2b\x43\x40\x97\xab\xeb\xfc\x9c\xfe\x03\x40\xbe\xf3\xeb\xa4\xa7\xd7\x82\xf7\x1f\xa5\x7b\x7d\xf4\x2f\x23\xdb\x6f\xc8\xb8\xa0\x61\xf1\xe6\x79\x71\xb2\x9f\x3f\xc4\xfe\x85\xd0\xe5\xae\xe6\x0a\x1e\x97\x57\xfe\xf0\x21\x61\x54\xf3\x93\xe4\x8d\xff\x1e\x00\x00\xff\xff\xb3\xfa\xdd\x76\xb4\x04\x00\x00")

func golangGetScalarAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetScalarAllTmpl,
		"golang.get-scalar-all.tmpl",
	)
}

func golangGetScalarAllTmpl() (*asset, error) {
	bytes, err := golangGetScalarAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-scalar-all.tmpl", size: 1204, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetScalarTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x41\x8b\xdb\x30\x10\x85\xcf\xd6\xaf\x98\x0d\x39\xd8\xe0\xd5\x0f\x28\xf8\xb0\x94\x2d\xf4\x12\x68\x72\x2c\xc5\x28\xd6\x38\x55\x77\x2c\x25\x63\x39\xc9\x56\xe8\xbf\x17\x29\xde\x6c\x02\xed\xf6\x60\xb0\xdf\x48\xef\x8d\x3f\x5e\x08\x8f\xa0\xb1\x37\x16\x61\x31\x9a\x9d\x55\x7e\x62\x5c\xc0\x63\x8c\xe2\x8b\xb1\xba\x0d\x01\xe4\x66\xea\x7b\x73\x86\x18\xcb\x10\xa0\xf3\xe7\xbd\x62\x35\x80\x7c\x22\x7a\xe2\xdd\x08\x31\x56\x50\x8a\x22\x04\x98\x07\x6b\x77\x82\x18\x6b\x40\xe6\xf4\x38\xae\x44\x8a\x41\xab\xb3\xaf\xb8\xcd\x34\xf6\xe8\x5e\xfe\x17\xa8\x78\x77\x17\xf7\x6f\xbb\xad\xd3\xaf\x0b\x88\x31\xaf\x83\xc3\x16\xf5\x9e\x54\x87\x3f\x1d\x69\xe4\x11\xe4\x57\xdb\xbb\xbb\xf1\x78\xa0\x59\x5d\xb4\x6d\x56\xda\xd1\x0f\x3e\x7b\x88\xe2\xa8\x18\xda\xf6\xa8\x68\xc2\x11\xbe\xff\x30\xd6\x23\xf7\xaa\xc3\x10\x45\x71\xd5\x1b\x50\xfb\x3d\x5a\x5d\xbe\x29\x35\x84\x00\xbd\x41\xd2\xf9\x1b\xe4\xc6\x2b\x6f\xba\xeb\xf6\x39\x9d\x95\xdd\x21\x2c\x4d\x0d\xcb\xf4\x7b\x9f\x1a\x90\xab\x89\x48\x6d\x09\xe7\x83\xa2\x30\x3d\x3c\x84\x90\x0f\xc8\x95\x1a\x10\x62\x94\x66\xb4\x13\x51\x59\x41\x10\x45\xd1\xb6\x9d\xbb\x30\x5b\x9a\x34\x4c\x0e\xd0\x40\xaf\x68\xc4\x3c\xfe\x70\xc5\x3b\xdf\xac\x97\x55\x25\x8a\x99\x8e\xd5\xb7\x0c\x12\x14\x68\xd2\xcb\x81\xb6\x93\xd5\x84\xed\x1a\xad\x46\x2e\xdd\xf6\x97\xd4\x46\x11\x76\xbe\x86\x5b\x86\x95\x28\xd2\x8c\xdc\x6e\xe3\x07\x5f\x5e\x3c\xea\x2b\x4f\x29\xe5\x8c\xc2\x58\xe3\xdf\x5a\x23\x8a\xd4\x9a\x06\xb2\x2b\x9b\x23\xb2\xfc\x36\x21\xbf\xae\xdd\xe9\xb3\xb3\x1e\xcf\xbe\xec\xfc\xb9\x86\xbf\xb9\xc9\x4d\xa7\x6c\xaa\x8c\xd2\x9a\x5d\x0f\x65\x4f\xca\x7b\xb4\xd9\xbb\xca\xe8\x13\xd2\x1c\xd0\xc0\x78\x20\xf9\xcc\xbc\x72\x6b\x77\x1a\x33\x4d\x46\x3f\xb1\x4d\x64\x7e\x23\xbb\xf7\x1e\x5b\x43\x99\xca\x7c\xf7\xa1\x49\xca\x87\x37\xd2\xf6\x83\x7a\xc1\x67\xe6\x12\x99\x2f\x50\xdf\x0f\xe7\x3e\xdf\xba\xcf\xbc\x53\x9d\xff\x04\x00\x00\xff\xff\x50\x76\x44\x1a\x91\x03\x00\x00")

func golangGetScalarTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetScalarTmpl,
		"golang.get-scalar.tmpl",
	)
}

func golangGetScalarTmpl() (*asset, error) {
	bytes, err := golangGetScalarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-scalar.tmpl", size: 913, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x59\xff\x6f\xe3\x36\xb2\xff\x59\xfa\x2b\x66\xfd\x76\x17\x52\xe0\x65\x0a\xf4\xe1\x01\xcf\x85\x0f\xd8\xc4\xd9\xbb\xe0\xb2\xc9\x36\x71\x5a\x1c\xda\xc2\x95\x2d\x2a\xab\x46\x26\x1d\x92\xb2\x95\x73\xf5\xbf\x1f\x66\x48\x49\x94\xbf\xa4\xdd\xee\xe5\x97\x48\xe4\x70\xbe\x7c\x66\xf8\x19\x52\xde\x6e\xdf\xc1\x6b\xb9\x32\xb9\x14\x1a\x46\x63\x60\x37\xee\xf9\x5d\x5d\x87\xe1\xe9\x29\xbc\xbf\x9f\xde\xfc\xfd\xe2\xfa\xe2\xf6\xfd\xf4\x62\x02\x67\xff\x02\x6d\xa4\xfa\x8d\xe5\xf2\x34\x9d\x57\x28\x30\xb9\x81\xeb\x9b\x29\x5c\x4c\x2e\xa7\x2c\x0c\x57\xc9\xe2\x31\x79\xe0\xb0\xdd\x02\xfb\xe4\x9e\x51\x53\xbe\x5c\x49\x65\x20\x0a\x83\xc1\xfc\xd9\x70\x3d\x08\x83\xc1\x42\x0a\xc3\x2b\x83\x8f\x69\x62\x92\x79\xa2\xf9\xa9\x7e\x2a\xf0\x9d\x2b\x25\x15\x09\x65\x4b\x12\x50\x3c\x2b\xf8\x82\x1e\xb5\x51\x0b\x29\xd6\xee\x31\x17\x0f\x24\x67\xf2\x25\xc7\xff\xa5\xc8\x17\x32\xa5\x47\xfd\x2c\x16\x83\x30\xc4\x10\x55\x22\x1e\x38\xb0\x8b\xca\xa8\xe4\x92\x5c\xd1\xe8\x56\x80\x6e\xe2\x03\xca\x70\x91\xe2\x63\x4c\x61\x7f\x52\x7c\xcd\x85\x81\x85\x14\x69\x8e\x88\x24\x05\xe4\x6e\x61\xa6\xe4\x12\x16\x49\xa9\x73\xf1\x00\xf3\x32\x2f\x52\xc8\x92\xbc\x28\x15\xd7\xe1\x3a\x51\x30\x83\x31\x38\x27\xd9\xa5\x91\x89\x3f\x88\xee\xb2\xab\x44\x9b\x4b\x91\xf2\xaa\x9d\xc9\x96\x86\xdd\xad\x54\x2e\x8c\x1b\x42\xdf\xd9\xc7\xd2\xf0\x2a\xa4\x91\x28\x0c\x7e\x54\xc9\xea\x42\x29\x94\x2e\xc5\x22\xe2\x4a\xc1\xc9\x05\xe2\x14\x03\xc1\x05\x5b\xc5\x4d\xa9\x04\xbe\xd5\x61\x70\x25\x1f\x1e\xb8\xb2\xb2\x99\x54\xcb\xc4\x38\xfb\x43\x48\xd4\x83\x06\xc6\x58\x2e\x0c\x57\x59\xb2\xe0\xdb\x3a\x0e\xc3\x80\x2b\x35\x95\xf2\x63\x22\x9e\x6f\xe5\x46\xc3\xd8\xaa\xd5\xec\x9a\x6f\xa2\x81\x91\x12\x96\x89\x78\x06\x25\x37\x7a\x10\x93\xf4\xbd\xd0\xe5\x0a\x31\xe1\xe9\x44\xe5\x6b\xae\x76\xd6\x94\xdd\x3c\xa4\x24\xe0\x16\x5e\x2c\x57\xe6\xf9\x7e\x95\x26\x86\xef\x2c\xe1\x38\x03\x25\x4d\x0d\x62\x4c\x06\x06\x00\x85\x7c\xa0\x50\xff\x4c\x24\xb0\x0d\x83\x3c\x03\x17\xff\xab\x31\x88\xbc\xc0\x31\x87\x88\x53\x61\xd7\x32\xc6\xe2\x30\xa8\xc3\x3a\x0c\xcd\xf3\x8a\x03\x19\x39\x97\x29\x07\x4c\x45\xb8\x90\x42\x53\xd1\xb6\xe3\xb3\x7b\xf1\x28\xe4\x46\x78\x92\x63\xc8\xa5\x49\xfa\x32\x3b\xb8\xf8\x93\xd7\x12\xd1\xf5\x47\xa6\xd5\x44\x0a\xde\x1b\xe9\xd2\xe0\x0f\x9f\xa3\x3b\x2a\xc9\x85\xf9\x21\x97\x45\x82\x65\xe9\x4f\x7b\xa8\x22\x70\x5d\x40\x08\x57\xb9\x30\x08\x02\x16\x10\xe1\x1d\x06\xe4\x7c\xbb\x3a\x0c\x5c\x0a\x2d\xb4\x38\xdd\x18\x6b\x87\xbe\x2f\xb9\x7a\xbe\x2b\xb3\x2c\xaf\x9a\xb1\xda\x25\x28\xe2\x6d\x31\xda\x44\xc5\x4e\x02\x8d\x36\x75\xc9\x2e\x94\x62\x6e\xba\x5d\xb9\xb1\x65\xed\x29\x70\xd5\x4c\x59\x6c\x8b\xbe\x4b\x63\xa3\x0d\xf3\xd6\xbc\xfc\xd8\x28\xe9\xf4\x2e\x93\x47\x4e\x43\x4d\xc4\x7d\xc5\xfc\xa0\x52\x91\x17\xa4\x96\x23\x17\xbe\x25\x7f\xb6\x17\x4a\x8d\xdc\x9e\xd2\x9b\xdc\x2c\x3e\xd3\xda\x6d\x18\x2c\x12\xcd\x41\x3f\x15\x18\x92\xcd\xea\x28\x0c\x02\xce\x5c\x55\xec\xa7\xdc\x5f\x60\x93\x7e\x64\x41\x53\x11\x5d\x80\x9b\xfd\x00\xcb\xdd\x2a\x8b\x52\x3f\x83\x5e\xb8\x3b\x3a\x5c\x5c\x61\x10\x34\xa1\xed\x15\xec\x30\x0c\xa8\x3e\x46\xf0\x42\x55\xa3\x90\x7d\x1a\xb9\xed\x3d\x0c\x83\xba\x73\x90\x77\xf5\x18\x7d\x89\x37\x5e\x1d\x1f\xf2\xa3\x3f\xed\xd9\x33\xdd\xae\x89\x9e\xb0\x54\x67\xda\xaf\xd5\x2f\x71\xc1\xdb\x80\x87\x5c\xd8\x99\xf6\xf6\xc5\x08\x7c\xcb\x7d\xff\x16\xfb\xdb\xb7\xab\xce\xa1\x37\xfd\x17\x1c\x3e\xe4\xe5\x01\xba\xb0\x62\xcd\xf0\xc8\xb3\xd9\xba\x4a\xb4\xe1\x2a\xa9\xa5\x55\xa2\x8e\x8a\x2f\xce\x6d\xcb\x8e\x16\xa6\x02\xd7\xbe\x99\x1b\x1b\xda\xc8\x5f\xa6\xe6\x08\xab\xff\x96\xeb\xb2\x30\x43\xb7\x2b\x1d\xad\x7c\xb5\xe6\x13\x52\x8d\x19\xe9\x2b\xbe\x95\x9b\xaf\xd5\xdd\xa8\x46\x78\x5c\x33\x16\xd2\xbc\xff\x24\x49\x6a\xa7\x83\xa5\x5c\x9b\x5c\x10\xda\x20\xa4\x81\x04\x56\x56\x0e\x7b\x5f\x21\xb5\xc6\x50\xd7\x5c\x69\x14\xe8\x2f\xa5\x59\xf4\xd0\x4d\xdb\x06\x48\x09\x99\x9c\x79\x24\x4e\xfe\x4c\xce\xc2\x20\x9d\x7f\xe4\xe6\xb3\x4c\x75\x18\x06\xff\x90\xf2\x51\x7b\x42\xc1\xb5\xdc\xd8\xee\x1f\x03\x1e\x8e\xd8\x34\x5f\x72\xd7\xeb\xa8\x1c\x6f\x56\x5c\x38\xca\x18\x82\x96\xa5\x5a\xf0\xb6\xf0\xa2\x74\x0e\x27\x93\x33\x82\xb2\x61\xcf\x6d\x18\x60\xf0\xfa\xa9\x98\xe1\x6c\xe3\x83\xe3\x44\x57\x31\x5b\xff\xb8\x35\xc9\x13\x3c\xb4\xd9\xa3\x16\x91\x1f\x9e\xb7\xae\x93\x25\x87\xdf\x81\x4e\x3b\x19\x0c\xde\x3c\x0d\xa0\xae\x91\x08\xad\x66\x6b\x73\x0c\x72\xc5\x45\x2b\x5e\xd7\x91\xf5\x30\xf6\x8f\x6a\x41\xca\xb3\xa4\x2c\xcc\xa8\x47\xe0\xc3\xa3\xcc\x48\xad\xbe\x21\xff\x57\x87\xc8\x7f\xe8\xb7\x0d\x2b\x9e\xf2\xac\x39\x46\xf5\x43\x27\x44\x0e\x68\x73\x71\xb0\xf3\x42\x6a\x1e\xc5\x61\x80\x5a\x6a\xb7\x18\xcf\x59\x6e\xc9\x68\xec\xb0\x64\x9f\x72\xf1\x10\xc5\xdf\x7d\x89\x5b\x98\x7b\x18\xc3\xdb\xc9\x19\x4a\x4e\xce\x46\x4e\xd7\xd0\xfa\x3c\x67\x54\x0e\x0c\x6b\x60\x6c\xd3\x7f\x2d\x37\xe1\x7f\x33\x5b\xe9\x9c\xb5\xe5\x07\x63\x10\x7c\xe3\x67\x0b\x23\xfd\xda\x4c\xb5\xb4\x87\x45\x81\x9d\xb9\x3d\x6c\xc8\xf9\x6f\x58\x9e\x31\x38\x8c\x21\xea\xd7\xa9\x5b\x27\xe7\xbf\xb1\x06\x38\x7c\x9e\x9c\x35\x49\x89\x0f\xe8\xa2\xfd\x70\x80\x22\x90\x5b\xa6\xd5\xd0\x53\x6f\xec\x1b\x66\xd0\xa9\x3d\xe3\x0f\xb9\x98\x56\xb8\x9c\x5c\x8d\xff\xa8\xcc\x7c\xd7\xba\x9c\x3a\x89\xb7\xd3\x0a\xe5\xa7\xd5\x08\x0c\xf6\x90\xc0\x54\x0e\xe8\x11\x2d\xc4\x36\x30\xad\x22\x53\xc5\x98\xee\x06\x9b\xed\x16\xf2\xac\xbd\xcc\xb1\x3b\x0b\xec\x6d\x85\xf8\xef\x84\x7a\xcd\x37\xb7\x55\x14\xc3\xc9\x6d\xe5\xc1\xf5\xf6\xb6\xda\xa6\x73\x32\x51\x5b\x7d\x2e\x7b\xb4\x7a\xc2\x0b\x6e\xf8\xfb\xa2\x38\x4c\xa3\x96\x30\x62\x88\x72\x61\xfe\xef\x7f\x8f\xa0\x95\xce\x59\x83\xf2\x4b\x08\x7d\x43\x0b\x76\x77\x5f\x6f\xbf\x79\x47\xb7\xc0\xf2\x45\x3a\x6f\x01\x35\x15\x3b\x97\xcb\x65\x6e\x30\xd1\x41\xa3\x96\x36\x62\xab\x61\xa6\x64\x51\xcc\x93\xc5\x23\xfa\x65\x2a\x76\xeb\x5e\xdd\x3e\xec\xa6\xfd\x9d\xdd\x5e\x43\x06\x29\xa1\xf1\x2e\x29\x8a\x11\xb4\xa2\x78\x0b\xe4\xe9\x08\xde\xac\x07\x43\xdf\x1f\x5f\x5f\xdc\x12\x42\xdc\x02\x6f\x2a\x96\xfa\xe8\x76\x7d\x78\x5a\x79\x8c\x3e\xad\x2c\xf5\x4c\xab\xb0\xab\x88\xae\x65\xdb\xed\xdb\x5b\x61\xba\x15\x6d\xbd\xe3\x58\x2b\x1b\x43\x03\xd4\x91\x2d\xe4\x41\xda\x43\xf5\x98\xba\x0e\xc6\x3f\xa5\xb0\x13\x27\x95\x47\xd8\x88\xc6\x5f\xa7\x73\x8a\x73\x34\xde\x27\x25\x3d\x39\x1b\xd0\x17\x0b\x12\x34\xd5\x71\xc1\x69\xe5\x09\xe6\xcb\x55\x71\x5c\xf4\x72\xb9\x2a\x06\x64\x9e\x64\xb6\x5b\x6f\x41\x5d\x7b\x28\xa7\x73\xa0\xbf\x13\x6a\xc9\xd6\x6f\x98\xcd\xf4\x53\x31\x2f\x45\x5a\xf0\x99\x47\x8c\x61\xe0\xa8\xd7\x51\xf0\x0e\x0f\xed\x18\x89\xe1\x96\xcf\x73\x91\x46\xba\xed\xcc\x7b\xb7\x2a\x24\x04\x67\x94\x35\xd2\xbb\xf4\xb6\xa7\xb6\x90\x0f\x77\x66\x69\x22\x6d\x96\xfd\xcb\x34\x63\x0c\x76\x2f\xd3\x9e\xfb\x57\xde\x3a\xef\x06\xfd\x07\xd6\x5e\xba\x8a\x79\x27\x50\x90\x8f\x0d\xa5\xe6\xba\x3b\xa5\xda\x1d\x67\x49\x32\xcf\x50\xc8\xa3\x8a\x23\x67\x6a\xff\x34\x1d\xfb\xf7\xa8\x1e\xe7\xfa\xa9\x75\xd5\xb5\x9b\x58\xca\xe9\x6e\x44\x6d\xbc\x7b\x4d\xcf\x72\xe0\x49\x5f\xa1\xc7\xb0\xbd\x89\x2d\x75\xd1\x11\x50\xd7\x0e\x76\x6c\x8c\xac\xb0\x37\x42\x0c\x84\xf2\xf4\x67\x17\xb9\x6a\x1a\xe1\x3b\x9b\x9c\xe1\x50\x3d\xf4\x0f\x79\x5d\x46\x5a\xb3\x31\xdc\x2d\x3e\xf3\x65\x72\xe8\x8a\xfe\x2b\x86\x63\xa7\xef\xbe\xbf\x82\xba\xfe\xf5\x65\x4d\x6d\x27\x6a\x78\x26\x86\x96\x99\x76\xe3\x76\xdb\xd2\xc5\xdd\x50\xc6\xa8\x23\xae\xad\xa1\x86\x57\xff\x05\x34\x68\x13\xec\x20\x62\x5b\x67\x0b\x47\x9b\xe9\xd6\x0f\x3f\xd3\x8d\x0f\x2f\x24\xfb\xc8\x36\xf8\xc3\x6f\x51\xa7\xa7\x30\xbd\x99\xdc\x8c\x40\x71\x91\x72\x05\xab\x22\x59\xf0\xcf\xb2\x48\xb9\xd2\x47\xbe\x54\xc9\xd2\xe0\x4e\xe8\xbe\x0a\x66\xd1\x00\x6d\x8d\xe0\x8d\xfe\x59\xa0\x21\x6c\x32\x3f\x8b\xc1\x10\xec\x4e\x5c\x29\x6e\xcc\x73\x84\x33\xd4\x60\xdc\xa7\x2e\x59\x9a\xe6\xf3\x96\x77\x18\xb3\x50\xd8\x25\xf0\xd3\x2f\x9e\xbf\x4d\xaa\x57\x6e\x36\x86\x0f\xf4\xb1\x2c\xca\xac\x2f\x06\xef\xdc\xb0\x00\x55\x0a\x4e\xb1\xe1\xe8\x07\xf2\x30\xca\x86\x30\xf8\x69\x10\x87\x82\x57\x66\x9d\x14\xa3\x30\xc8\xa4\x82\x7c\x08\xeb\xa4\xc0\x60\x2c\xaf\xaf\x9a\x26\x9e\xc3\xdf\xe0\x1b\xdb\x55\x77\x94\x0c\x61\xe0\x7a\x64\xa0\xd6\xb4\xd2\x7e\xfb\x65\x3f\x24\x45\xc9\x6f\xb2\x68\x9d\xe0\xf9\x0a\x95\xa8\x35\xfb\x27\x12\x5e\x8c\xe7\x81\x46\xec\x93\x51\x56\xaf\x15\xb8\xd4\xd7\x79\xe1\x0e\x0f\x7b\xb6\xae\xef\xaf\xae\xc8\x5a\x80\x44\x64\x72\x51\x72\x7c\x41\xdb\x01\xfa\x3d\x46\x0d\x17\x05\x5f\x46\x31\xbb\x6c\x70\x6a\xce\xf4\xcd\x61\x9a\x9c\x5c\x27\x05\x8b\x10\x58\x6b\xc9\x7e\xea\xa1\xca\x18\xf5\x63\xcc\xc8\xf0\x9b\xa7\xc1\x10\xd6\x71\x23\xd9\x5e\xd0\x0e\x0b\x6b\x14\x66\x2e\x17\x24\x7b\xfb\xe1\xfc\xdb\x6f\xbf\xfd\xff\xeb\x44\xc8\xb8\xd5\xf2\xd3\x2f\xf3\x67\xe3\x54\x48\x05\xb3\x21\xcc\x3b\xe4\xd7\x0e\x81\x3c\x83\x57\xee\x23\x39\xbb\xd4\x9f\x08\x0a\xcc\x67\x34\x8f\x1b\x90\xf6\x1d\xf8\x9f\xaa\x71\xd7\x43\x0a\x5c\xaa\x69\xb4\x6e\x71\x3b\x1e\xaa\x77\x09\xd8\x97\x5a\x37\x52\x35\xf1\xf5\x4e\xa2\x7e\x19\xb8\x03\x42\x73\x3e\xb8\xa3\xbd\xab\x9b\x8f\xf7\xaf\xdd\x5e\x6e\x3b\x79\xdb\xe4\x17\x8a\x27\x86\x7b\xd3\xe7\x34\x60\xd7\xf7\x45\xed\x67\x67\x4f\xd4\x7e\x65\xf2\x44\x7b\xa7\x01\x27\xe8\x13\x89\x77\x80\xf9\x90\xf3\x22\xed\x7e\x65\x70\xcb\x89\x45\xa6\x8e\x59\xbc\x3d\x89\x8f\x07\x4e\xef\xf7\x9a\xab\x34\x31\x09\x19\x0e\x4a\xf7\x36\x5b\x96\xfe\x0f\x04\xed\x38\x32\xa1\xbf\x9b\x9d\x7e\x8f\xc3\xa2\x9e\xdf\x31\xcc\xa6\xc9\xbc\xe0\x5e\x27\x00\xc7\xd8\x03\xf2\x13\x27\xa1\xae\x07\xe0\x08\x24\xcf\x9a\x1f\x88\x92\xe2\x52\x68\xae\x4c\x17\x65\x87\x4b\x0f\xf1\x23\xe8\x1c\xd3\xb2\x87\x55\x1f\x7c\x0f\xb1\x43\x9c\x86\xd6\x7b\x49\x3c\x62\x9d\xf2\x8a\xc1\x7d\x85\xe1\xbd\x34\x53\x09\x65\x5e\xf5\xec\x6b\x78\xbd\x30\x92\x2e\x42\xdd\x29\x73\xf6\x46\x0f\x80\x7d\x94\x29\x2f\x48\x92\xed\xd7\x59\x76\x20\x98\x60\xa6\xb9\x81\xb9\x94\x45\x18\xcc\x44\x59\x14\xcd\xf3\x1a\x49\xb2\x57\x65\x5e\xff\xb2\xf6\xeb\x3a\x5a\x93\xc4\xb9\x91\x8a\x48\x95\x6a\x61\xc7\xd4\xb6\xcd\xf8\xc7\x12\x79\xff\x83\x20\x98\xd6\x30\xa6\xb5\xde\x60\xb4\xee\xdf\xf5\x5d\x09\xf5\xf5\x6d\x01\x3d\x1e\x81\x51\x25\x1f\x82\x75\x73\x04\xf6\xce\xca\xa6\xc9\x23\x7f\x9f\xa6\xe8\xda\xdb\xf6\xda\xb9\x86\xba\xbd\xd5\xb2\xeb\xb2\x28\x5c\x35\xee\x45\x33\xbb\x4d\x36\x2e\xa2\x69\x73\x30\xd9\x0b\x06\x79\x6f\x7d\xe0\x8b\xbf\xaf\x07\x8d\x44\xbd\xe3\xa2\x8f\xd9\xbe\xaf\x27\x9d\xaf\xf1\x21\x98\x9d\xc2\x03\xce\xfc\x19\x88\x30\xab\xf6\x05\xbc\x0d\x9c\xed\x2c\x8a\x21\xd7\xc2\x9a\xc1\x0a\x80\x6d\xa3\xfb\x55\xc6\xa8\x46\x7e\xff\x1d\x32\x66\x4b\xc4\x3e\xda\x0a\x71\x48\xf8\xd7\xfc\xa3\x16\x68\x45\x14\xfb\xdc\x02\x04\xc6\x01\x1b\x2d\x83\x90\xf6\xef\x9a\xb7\xd6\x6e\x8f\x89\x7c\x23\xb3\x73\x59\x94\x4b\x71\x8c\x8b\xec\xac\x4f\x46\xe8\xf5\xbb\xfe\xd6\x6c\x7e\x07\xb8\x9f\x9e\x47\xa6\x6b\xaa\xde\x07\x50\x0f\x7c\xc3\x50\xcc\xff\xf9\x60\x92\x18\xfe\xc2\xba\xd3\x53\x78\xe4\x7c\x05\xe5\x0a\xcc\x67\x0e\xcb\x5c\x94\x86\x03\xd2\x74\x2e\x05\x68\x09\xe6\x73\x62\xc0\xa8\x44\x68\x7b\x13\xd1\x30\xe7\x66\xc3\xb9\x20\x3d\xff\x96\x82\x6b\xd8\xe4\x45\x41\xaa\xda\x2e\x6a\x64\x73\x74\x81\x95\x92\x2b\xae\x8a\x67\xe6\x39\x39\x55\xa5\x58\x90\x63\xe8\xcb\x47\x32\x4a\x4e\x9f\x9e\x86\xa7\xa7\x78\x14\xc3\x09\x70\xdf\xd1\x00\x1b\x3f\xfd\x26\x8d\x10\xea\xa7\x02\x34\xee\xd3\x25\x17\x46\xe3\x8a\x90\xa8\xed\xfb\x2b\xd7\x5f\xa0\x6e\x15\x21\x84\x5f\xa8\xec\x3f\x01\x00\x00\xff\xff\xde\x3c\x2c\x3e\x3d\x20\x00\x00")

func golangHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangHeaderTmpl,
		"golang.header.tmpl",
	)
}

func golangHeaderTmpl() (*asset, error) {
	bytes, err := golangHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.header.tmpl", size: 8253, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangMiscTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xc1\xca\x83\x30\x10\x84\xcf\xbf\x4f\x31\x04\xff\x5b\xf5\x01\x84\x5e\x7b\x29\xf4\x24\x3d\x1b\xea\x2a\x01\x1b\xac\x89\x07\xd9\xee\xbb\x97\x35\x25\x2d\xf4\x36\x99\xf9\x66\xb2\xcc\x15\x7a\x1a\x9c\x27\x98\x10\x97\xf5\x16\x0d\x44\x8a\xb8\xcd\x04\x66\xd4\x17\x7b\x27\x88\x20\x65\xe0\x82\x19\x8b\xf5\x23\xa1\x3e\x39\x9a\xfa\xa0\xf4\x1f\x33\xdc\x90\xe1\xef\x1e\x33\xc8\xf7\x6f\xb3\xd5\xd5\x5d\x2a\xdd\xda\x31\xa0\xd2\x7a\x97\x47\x4b\x77\x40\x19\xd1\x1c\x3f\x71\xa2\x4b\xf7\xb3\x76\xa6\x0d\x22\x8d\xca\xab\x9d\x56\xc2\x13\xf3\xe2\x7c\x1c\x60\xfe\x1f\x26\x41\x89\xee\xf4\xc2\x6a\x7f\xe8\x7f\xd9\x2f\xb2\x56\xfb\x15\x00\x00\xff\xff\x8e\x34\xcf\xa7\x0b\x01\x00\x00")

func golangMiscTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangMiscTmpl,
		"golang.misc.tmpl",
	)
}

func golangMiscTmpl() (*asset, error) {
	bytes, err := golangMiscTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.misc.tmpl", size: 267, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x51\x6f\xac\x36\x13\x7d\x5e\x7e\xc5\x5c\x94\x07\xd0\x47\xac\xef\x39\x12\xaa\xa2\x34\x6d\x53\xa5\xab\xde\x6c\x6f\x5f\xaa\x0a\x79\x61\xd8\xba\x31\x36\x35\x26\xbb\x11\xe2\xbf\x57\x63\x7b\x59\xd8\xbb\x49\x7b\xa5\x56\xea\x1b\x78\xc6\xc7\x67\x66\xce\x31\x0c\xc3\x35\x54\x58\x0b\x85\x10\x2b\xde\x60\x0c\xd7\xe3\x18\x7d\x6a\x2b\x6e\x71\x18\x40\xd4\xa0\xb4\x05\xf6\x84\xb6\x37\x0a\xc6\x71\xad\xfd\xe3\x30\x00\xaa\x0a\xc6\xb1\x18\x06\x60\x9b\xbe\xae\xc5\x01\xc6\x31\x22\x3c\x0a\x10\x4a\x34\x07\xef\xc4\x4e\x71\xdb\x9b\x70\x02\x85\x2c\x36\xad\xe4\x76\x3a\x99\xc1\x38\x26\xc3\x00\xa5\x3d\xb4\xdc\xf0\x06\xd8\xad\x94\xb7\x66\xd7\xc1\x38\x66\xd1\xaa\x77\xa4\xc0\x9d\x67\x4d\x5f\x5a\xe6\x69\xfa\x97\x35\x6f\x10\xc6\x31\x85\x24\x5a\x79\xe2\x27\xd2\xc3\x00\x01\x70\x5a\xca\x60\xaa\x00\x8d\x01\x34\x46\x9b\xf4\x6d\xf6\x42\xbd\xe8\xe7\xbf\x47\x9d\x9b\xdd\x82\x38\x78\xde\xef\x80\x6f\x75\xf5\xea\xa1\x89\x39\x36\x5b\xac\x5a\xc9\x4b\xfc\x4d\xcb\x0a\x4d\x07\xec\x41\xd5\x1a\xe6\xe1\xee\x0f\x19\x56\xe3\xa2\x70\x2b\x45\x67\x1b\x1b\x53\x52\xb4\x2a\x8a\x0e\x6d\x57\x50\xd2\x4d\x0e\x05\x3d\x6c\x7b\x55\x49\x2c\x1e\x85\x45\xc3\x65\x37\x7c\xaf\x85\xba\x81\x38\x83\x78\x8c\x56\x2f\xdc\x40\x51\xbc\x70\xd9\x63\x07\xbf\xfc\x2a\x94\x45\x53\xf3\x12\x87\x29\xc6\xa9\x96\x65\xc4\x91\x31\x5c\xed\x70\x39\x0e\xbe\x95\xf8\x8d\x40\x59\x75\x8e\xb1\xa8\x43\xfd\x8c\xe6\x16\x86\xc4\x88\x20\x0c\xd1\x6a\x35\x1d\x9b\x03\x6f\x5b\x54\x55\x72\x5c\xc9\x2e\xed\x73\xa1\x24\x4d\xdd\xce\x63\x91\x6c\xf3\xf1\x71\x01\xb0\x08\x64\x97\x1a\x90\xc4\x84\x7a\xa7\x65\xdf\x90\x18\x20\x87\xaf\x62\x42\x0d\x2d\x76\xb2\x70\x15\x5e\x3b\x21\xad\x11\xab\x6e\xad\xf7\xae\xa2\xa2\x50\x7a\x4f\x8d\xd5\xdb\xdf\x59\xb5\x65\xdf\x69\xfd\xdc\xb1\xb5\xde\x27\x29\xfb\xf4\xd3\x5d\x92\x4e\x18\xc7\x89\x86\x2e\xdd\xf6\x56\xcf\x3a\xf3\x5e\xe9\xc4\xee\x41\x09\xfb\x33\x97\xa4\xe9\xe8\x9f\xa8\x36\xf4\x70\xaa\x75\x59\xe8\xe4\xf4\x33\x96\xa2\x06\x89\xea\xfc\x98\x14\xf2\x1c\xfe\xef\x26\x78\xec\xd1\xe4\xac\x68\xb5\x32\xfe\x59\x09\x99\x01\x36\xad\x7d\xf5\x46\xa5\xd6\xb8\x7c\x94\x1d\x2e\x32\x2f\x26\x79\x72\xe7\x33\x09\x62\x9c\x35\x80\xde\x5d\xcb\x6a\xa2\xed\x5a\x48\x92\xe4\x56\x94\xc1\x83\xe9\x5c\xad\x57\x22\x83\x2b\x32\xe9\x4d\x0e\x6c\xdd\x4b\x49\x8a\x0d\x89\xae\xde\x0f\xc3\xe0\x12\x26\xd5\x89\x4e\xf5\x52\x26\x69\x50\x6c\xa9\x55\x45\xb7\xde\x95\xa0\x20\x21\x40\x0e\x35\x97\x1d\xba\xf0\x9b\xf4\x16\x98\x27\x25\x7f\x56\xdf\xdb\xb2\xf0\x60\x8c\xb1\x49\x11\x34\x0d\x70\x1e\x0f\xe3\x89\x8e\x96\xa5\xfb\x00\x96\xee\x7f\x42\x55\xa1\x49\x9c\x6e\x05\x97\x58\x5a\x82\x3c\x5d\x1f\x69\xb4\xa2\x98\xd4\xbb\x8d\x6d\x6c\xe2\x31\xb2\xe9\x6a\xf0\xe7\x86\x79\x2f\xbf\x0a\xc4\x3b\xa3\x4b\x14\x82\x2d\x8c\x78\x41\xc3\xee\x0f\x58\xde\x69\x65\xf1\x60\x93\xd2\x1e\x32\xb8\x0c\x29\x6a\xb7\xf5\x43\x4e\x8a\x71\x4d\x0e\xb2\x20\xa8\x86\x3f\xe3\xbd\x31\x09\x1a\xe3\x9b\x75\x12\x57\xb4\x10\x93\x57\xb1\x12\x0b\x5e\x93\x3c\x37\x7d\xdb\x6a\x63\x3b\x1f\x12\x6a\xe7\xa2\x9f\x31\xfe\xd8\xa3\x79\x7d\xd2\xfb\xbf\x64\xcd\x36\x25\x57\x74\xe3\xf3\xaa\x32\xba\x86\xa4\x96\xdc\x5a\x54\xc7\xc3\x53\xef\xdb\x50\x5a\x9e\x03\x59\xe7\xde\x98\xb5\x7e\xd2\xfb\x6e\x5e\xa4\x73\x89\xab\x66\x7c\xa7\x15\x2e\xeb\x62\x3f\x16\x86\xfa\x37\xa6\xf0\xe6\xd1\x17\xbe\x47\xdf\xa2\x5d\x7e\x92\x8a\x1d\xfa\xcf\xd2\x4c\x96\xb4\xf6\x85\xd2\xa4\x2d\x67\xf2\x8c\x93\x87\x1f\x7e\x7c\x7c\xb8\xff\x3a\x85\x18\xfe\x37\x83\x5e\xf8\xe4\xcb\x66\x7c\xbe\xfd\x3f\x36\xe5\x70\x23\x86\x64\xa2\x45\xff\x1a\xb3\x7f\x9a\x93\x29\x7c\xea\xfc\x97\xe3\xcf\x00\x00\x00\xff\xff\x83\xa6\x93\x38\xea\x09\x00\x00")

func golangUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangUpdateTmpl,
		"golang.update.tmpl",
	)
}

func golangUpdateTmpl() (*asset, error) {
	bytes, err := golangUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.update.tmpl", size: 2538, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"golang.create-raw.tmpl":        golangCreateRawTmpl,
	"golang.create.tmpl":            golangCreateTmpl,
	"golang.decl.tmpl":              golangDeclTmpl,
	"golang.delete-all.tmpl":        golangDeleteAllTmpl,
	"golang.delete-world.tmpl":      golangDeleteWorldTmpl,
	"golang.delete.tmpl":            golangDeleteTmpl,
	"golang.dialect-cockroach.tmpl": golangDialectCockroachTmpl,
	"golang.dialect-postgres.tmpl":  golangDialectPostgresTmpl,
	"golang.dialect-sqlite3.tmpl":   golangDialectSqlite3Tmpl,
	"golang.footer.tmpl":            golangFooterTmpl,
	"golang.get-all.tmpl":           golangGetAllTmpl,
	"golang.get-count.tmpl":         golangGetCountTmpl,
	"golang.get-first.tmpl":         golangGetFirstTmpl,
	"golang.get-has.tmpl":           golangGetHasTmpl,
	"golang.get-last.tmpl":          golangGetLastTmpl,
	"golang.get-limitoffset.tmpl":   golangGetLimitoffsetTmpl,
	"golang.get-one-all.tmpl":       golangGetOneAllTmpl,
	"golang.get-one.tmpl":           golangGetOneTmpl,
	"golang.get-paged.tmpl":         golangGetPagedTmpl,
	"golang.get-scalar-all.tmpl":    golangGetScalarAllTmpl,
	"golang.get-scalar.tmpl":        golangGetScalarTmpl,
	"golang.header.tmpl":            golangHeaderTmpl,
	"golang.misc.tmpl":              golangMiscTmpl,
	"golang.update.tmpl":            golangUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"golang.create-raw.tmpl":        &bintree{golangCreateRawTmpl, map[string]*bintree{}},
	"golang.create.tmpl":            &bintree{golangCreateTmpl, map[string]*bintree{}},
	"golang.decl.tmpl":              &bintree{golangDeclTmpl, map[string]*bintree{}},
	"golang.delete-all.tmpl":        &bintree{golangDeleteAllTmpl, map[string]*bintree{}},
	"golang.delete-world.tmpl":      &bintree{golangDeleteWorldTmpl, map[string]*bintree{}},
	"golang.delete.tmpl":            &bintree{golangDeleteTmpl, map[string]*bintree{}},
	"golang.dialect-cockroach.tmpl": &bintree{golangDialectCockroachTmpl, map[string]*bintree{}},
	"golang.dialect-postgres.tmpl":  &bintree{golangDialectPostgresTmpl, map[string]*bintree{}},
	"golang.dialect-sqlite3.tmpl":   &bintree{golangDialectSqlite3Tmpl, map[string]*bintree{}},
	"golang.footer.tmpl":            &bintree{golangFooterTmpl, map[string]*bintree{}},
	"golang.get-all.tmpl":           &bintree{golangGetAllTmpl, map[string]*bintree{}},
	"golang.get-count.tmpl":         &bintree{golangGetCountTmpl, map[string]*bintree{}},
	"golang.get-first.tmpl":         &bintree{golangGetFirstTmpl, map[string]*bintree{}},
	"golang.get-has.tmpl":           &bintree{golangGetHasTmpl, map[string]*bintree{}},
	"golang.get-last.tmpl":          &bintree{golangGetLastTmpl, map[string]*bintree{}},
	"golang.get-limitoffset.tmpl":   &bintree{golangGetLimitoffsetTmpl, map[string]*bintree{}},
	"golang.get-one-all.tmpl":       &bintree{golangGetOneAllTmpl, map[string]*bintree{}},
	"golang.get-one.tmpl":           &bintree{golangGetOneTmpl, map[string]*bintree{}},
	"golang.get-paged.tmpl":         &bintree{golangGetPagedTmpl, map[string]*bintree{}},
	"golang.get-scalar-all.tmpl":    &bintree{golangGetScalarAllTmpl, map[string]*bintree{}},
	"golang.get-scalar.tmpl":        &bintree{golangGetScalarTmpl, map[string]*bintree{}},
	"golang.header.tmpl":            &bintree{golangHeaderTmpl, map[string]*bintree{}},
	"golang.misc.tmpl":              &bintree{golangMiscTmpl, map[string]*bintree{}},
	"golang.update.tmpl":            &bintree{golangUpdateTmpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
