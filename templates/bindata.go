// Code generated by go-bindata.
// sources:
// golang.footer.tmpl
// golang.funcs.tmpl
// golang.header.tmpl
// postgres.tmpl
// sqlite3.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _golangFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xcd\x31\x0a\x02\x31\x10\x85\xe1\x3a\x73\x8a\x57\xee\x5a\xe4\x18\x76\x76\x5e\x20\x66\xc7\x6c\x60\x33\xae\x49\x84\xc8\x30\x77\x17\xc1\xed\xec\x1e\x3c\xf8\x7e\xa2\xfe\xde\x19\x85\xfb\xfa\x58\x1a\xb2\x74\xae\xf7\x10\x19\x4a\xaa\xa8\x41\x12\xc3\x9f\x5f\x12\x1b\xcc\x08\x00\x54\xe1\xbf\x5b\x15\x2c\x0b\xcc\x00\x90\xfd\x9c\x5c\xf6\xed\xf2\xc7\x72\x37\x4e\x59\xa6\x3e\x70\x6a\xcf\x6d\xf8\xeb\x98\x8f\x26\xb9\x16\x57\x2e\x61\x9a\xd1\x7a\xcd\x92\xc8\x1d\x8f\xd1\x27\x00\x00\xff\xff\x6c\x4c\x71\x0d\x9f\x00\x00\x00")

func golangFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangFooterTmpl,
		"golang.footer.tmpl",
	)
}

func golangFooterTmpl() (*asset, error) {
	bytes, err := golangFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.footer.tmpl", size: 159, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangFuncsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\x51\x6f\xdb\x38\x12\x7e\x96\x7e\xc5\x9c\x50\x14\x76\xcf\x56\x77\x81\xc3\x3d\xec\xc1\x77\x70\x1b\x6f\x2e\x87\xac\x9b\xc6\x2e\xee\x21\x08\xb6\xac\x45\xb9\xdc\xc8\x94\x4a\xc9\xeb\xf4\x14\xfd\xf7\x03\x49\x49\xa6\x44\x49\x16\x6d\x6f\xba\x0b\xec\x4b\x51\x49\x33\xc3\x99\xe1\x7c\xdf\x90\x34\x93\xa6\xaf\x5f\xc1\xe5\xbb\xeb\xe9\xfc\x12\x7e\xfc\x30\x7f\xbb\xbc\x7a\x37\x87\xe5\xec\xa7\x9b\xeb\xe9\x72\xb6\x80\x57\xaf\xb3\xcc\xb6\xd3\x74\x0c\x1e\xf6\x09\xc5\xe0\x44\x88\xa1\x4d\xec\xc0\x38\xcb\xc4\x7b\x86\xe8\x1a\xc3\x0b\x32\x82\x17\x88\xad\xe1\x87\x09\xb8\xe2\x9b\x95\xa6\x40\x7c\x78\x41\x20\xcb\x46\x36\x00\x40\x9a\x62\xea\x65\x59\x9a\x0a\x49\x77\x8e\x36\x18\xb2\x0c\x8a\xe7\xe5\xd7\x88\x3f\x0b\xa3\x98\x7a\xe5\x00\xc5\xff\x2b\x5e\x20\xb6\x36\xf5\x81\x0f\xc4\x6d\x69\x1e\xf4\x1b\x91\x92\x60\x7c\xd2\xa8\x94\x04\xfd\x46\xf2\xb7\x74\x35\xfe\x8c\x91\x87\x99\xc3\xdd\xb3\x56\x21\x8d\x13\x88\x93\x4d\x32\xf9\x98\xa6\xe0\x2e\xde\x5f\x43\x96\x7d\xb4\xad\x88\xe1\x08\x31\xec\x8d\x80\xe1\x28\x40\x2b\x3c\x02\xcc\x18\xf7\x24\xfc\xf4\x8b\x9b\x7f\x1d\x70\xc5\xa1\x6d\x11\x5f\x7c\xfc\xcb\x04\x28\x09\x20\xb5\x2d\x8b\x3f\x4e\xe0\xbf\x0c\x45\x33\xc6\x06\x98\xb1\xa1\x6d\x59\x0c\x27\x5b\x46\x6d\x2b\xb3\x2d\x0f\xfb\x98\x15\xa6\x07\x43\xdb\xe2\x56\x83\x70\xbd\x48\x36\x89\xb0\x2a\xa2\x4b\xf0\x26\x0a\x50\x52\x4e\x8a\x3b\x65\xeb\x18\xb2\x6c\x68\xe7\xa1\xe7\x01\xbe\x7e\x05\x8b\xd9\xf5\xec\xed\x12\x16\xcb\xe9\x72\xf6\xd3\x6c\xbe\x94\xe5\x95\xa6\x65\xe8\x31\x0e\xf0\x2a\x19\xef\x18\x8a\x44\xe8\x3c\x15\x30\x08\x3f\xfd\x02\xaf\x2e\xde\x0c\xab\xa3\xe5\xb2\x22\x5b\x31\x59\x3b\xe0\x8a\x6a\x12\xa5\x26\x83\x10\x59\x20\x9b\x28\x70\x5b\x15\x29\xda\x60\xa9\x39\xe8\x0c\x25\xb3\x55\x5f\x96\x8f\xdf\xd6\x97\xb2\xa6\x6c\x3d\x79\xf5\xbc\xf1\x82\xb9\x20\x88\x7f\x82\x2c\xeb\xca\xa2\x1c\xdb\x6e\x57\xee\x0a\x3b\x57\xae\x78\x36\xae\xcf\xab\x12\x26\x2f\x8a\x4b\x9c\x88\x72\x4e\xd8\x56\xd8\xe7\x0f\x3f\x6e\xe9\x6a\xb1\xf5\x7d\xf2\x58\x47\x66\xab\x41\x91\x70\x89\xa8\xc3\x99\xad\x0a\x15\x64\x56\x26\x17\x06\xf9\x9c\xc5\xdb\x20\x91\xf1\x97\xee\x49\x70\x61\xc6\x42\x36\xec\xe5\xd9\x9e\x2a\x0e\x57\x4a\xd5\xaf\x0a\x05\x88\xc4\x5a\xb9\x4b\x13\x78\x59\xcd\x59\x66\xe7\x38\x2e\xc8\xc0\x7d\xbf\xc5\xec\xeb\x6d\xb8\x7b\x1c\xa4\x69\x6b\x15\xe5\x16\x16\x2b\x44\x07\xd2\xf4\x9e\x22\x26\x13\x88\xbf\x04\xee\x8c\xb1\x79\x78\x1b\xee\x62\x41\x16\x79\x19\x53\x12\x8c\xf8\x3f\x82\x20\x74\x4a\x51\xa5\xaa\xc4\x22\x42\x10\x1f\xe5\x70\xd2\x8a\x36\xc5\x7b\x96\x98\x5e\x5f\xd7\x99\xa2\x81\x2a\x50\x10\x18\xd1\x05\x97\x3f\x1a\xa6\xa5\xf2\x79\x69\xe3\xb9\x7d\xea\xa2\x0f\x6e\xef\x38\x0a\x29\x1c\x39\x9a\x46\x6a\x06\xba\xa9\xa4\x16\xf6\x9e\x4e\xa2\x60\xcb\x50\x40\xfe\x87\x4f\x22\x96\xea\x94\xb4\x91\x4b\x53\xee\x8d\x08\xe6\xee\xfe\x04\x8a\xd9\xe7\xab\x95\x66\x1a\x2b\xeb\x20\xd5\xd4\xf8\x64\x21\x6c\x0d\x5e\x16\xb8\xed\x60\x95\xdf\x98\x12\x6e\xa6\x97\xb3\x8b\x1e\xa4\x10\xa1\x35\xf6\x8c\x68\x41\x6a\x1c\x0d\x42\x45\xbd\x0a\x43\xe2\x97\xc9\xe9\x00\xe5\xa8\x58\x1b\xc3\x2a\x09\x1f\x30\x1d\x41\x40\x36\x24\xe9\xcb\x1f\xbf\x5b\xe7\x3b\x89\x46\x0c\x7b\x1c\xd5\xec\x3d\x3e\x9a\x6c\x34\x13\xdd\x74\xa3\xe5\x88\xd7\xe6\x0d\x7f\x79\x4e\xd6\xa9\x4f\x64\x1b\xef\x34\xcf\x58\x37\xf3\x54\xe7\x73\xa4\x2e\xce\x79\xa1\xc8\xb9\x83\x38\x61\x84\xae\xf3\x29\x04\x42\x93\x83\x84\x25\x15\xc3\x6d\x52\xea\x1a\x50\x98\x3a\x0b\xad\x24\xd6\x52\xde\x87\x68\x4c\xb8\x4d\xfc\x22\xb2\xc9\x04\x1c\x27\x47\x85\x12\xf0\x04\x9c\xef\x1c\xf1\x32\xb3\x7b\x30\xdf\xa9\x98\x38\xc0\x8f\x8e\xa3\x73\xa4\xd0\x09\x70\xb9\x4c\xe3\x91\xc8\xe9\xe1\xda\xfb\xf4\x4f\xc0\xdf\x24\xee\x22\x62\x84\x26\xb9\xec\x9d\x90\x1b\x7f\x7f\xcf\x71\xef\x8a\x72\x7d\x47\x25\x4f\x73\xbb\x35\xf2\x2d\x4d\xb5\xf3\xf0\xdb\x77\x1f\xe6\xda\xfe\x4d\xc5\xf6\x2a\xdc\xd2\x9e\xfb\x37\x29\x6a\xce\x5a\x8a\xde\x99\x96\x61\xcf\xea\x49\x33\x27\x0a\x53\x86\x64\xb8\x1f\xde\x9c\x05\x35\xdd\x16\xfa\xd3\x42\xe4\xb5\xf0\x96\xbf\x3c\x76\xe7\x56\x4f\xb6\xc6\x71\x7a\x56\x4d\x57\x55\x84\x26\xfd\x58\x48\xcd\x82\x4e\x3f\x2d\x65\x61\xba\x7c\xea\xb9\x1d\xe3\x1b\xb1\x97\xf5\x9d\x98\x4e\x13\xdf\x1d\xb9\x88\x2a\x63\xfe\x8c\xe2\x7e\xf8\xe4\x82\xe6\x98\x28\xb5\xce\x84\xcd\x67\xf3\xa2\x19\x97\x9f\x51\x6c\x88\xca\x62\x68\x73\x4c\xd6\x34\x5b\x10\x59\x0b\x8d\x4f\xef\xbf\x51\x7c\x2c\x1a\xab\xe9\xd5\xb0\xd8\x94\x47\x23\x28\x7e\x0a\xc3\xa0\x1f\x16\xf7\xd1\xeb\x48\x6c\x2c\x02\x4b\xe0\xb3\x3c\xf1\x14\x95\xd0\x83\x99\xba\x50\xd8\x81\x3b\x1f\x05\xb1\x3c\x5e\x55\x21\x27\x5c\x80\x7f\x72\x54\xb6\xb5\xcc\x8b\xd9\xf5\x6c\x39\xeb\x38\xf3\xf4\x70\x80\x13\xdc\x0f\x93\xb9\xac\x39\x20\x54\xc5\x33\x21\xf3\x99\x7d\x69\xc6\xa7\xb4\x65\x08\x51\xc5\x01\x73\x94\xea\xca\x2d\x40\xd5\xc3\xe4\x45\x71\x21\xde\x1e\x0b\x57\x2d\xe7\x1a\x62\x5b\x92\xdb\x0f\xb4\x52\xd9\x33\x40\x6d\x25\x1b\x9d\xce\x98\x1e\x76\x96\xc0\x2e\x1b\xe9\xec\x11\xaf\x4e\x43\xaf\xd6\x39\xab\x14\xc2\x70\xec\xde\x86\xbb\x78\xea\xfb\x78\x95\x60\x6f\x70\x8c\xc9\xfe\xcc\xd0\xef\x9c\x33\xcf\x61\xef\x73\x4e\x45\xfe\x68\x68\x9e\xfb\x9c\xf3\x1b\xf9\xd4\x45\x19\x47\x9c\x73\xd6\x1c\x39\x9a\x3a\xfa\x9d\x73\x36\x87\x5d\xa1\x90\x13\x0f\x1d\x1a\x67\xa5\x0d\xc3\xc7\x1f\x75\x4a\x24\x10\x9a\xfc\xfd\x6f\x46\x9c\x52\x3f\xde\xec\x59\x4f\xcf\xce\x2d\x4d\x2b\x72\x85\x57\x0c\x69\xa5\x63\x7d\x9f\x1b\x6d\xa3\x93\xab\xf9\x62\x76\xdb\xf5\xe3\x2a\xa1\x31\x66\x3d\x37\xe7\xb9\xac\x39\x5a\x55\xc5\x33\xb1\xc7\x33\xfb\xd2\xcc\x1a\xd2\x96\x21\x63\x28\x0e\x98\xb3\x85\xae\xdc\xc2\x14\x7a\x98\x62\x93\xce\x30\xaa\x2d\x34\xda\x21\xa7\xa5\x58\x83\x5c\x4b\x2e\x7f\xf3\x9f\x53\x2b\x59\xe8\xf4\xaa\x9d\x04\x72\x29\xb4\x4d\xc2\x31\xa1\x24\x29\xd3\x39\xee\x3e\x40\xe4\x02\xc4\x07\x1a\x26\xe0\xde\x8a\x42\x7b\xf3\xf5\x9c\xbf\xc5\x5e\x09\xbf\xe2\x03\xbf\xc6\x9e\xf0\x53\x8a\xc8\x6a\x10\x63\x73\xde\xdb\xbb\x66\xea\x47\x7e\x46\x5a\xe4\xcb\xbd\x79\x10\xa3\x47\x0f\x95\x65\xd6\x35\x8a\x13\x39\xc6\x55\x37\x1f\x76\xc6\xca\x61\x5f\xbf\x44\xf0\xe6\x2b\x7f\xac\x0e\x3f\x88\x1e\xe4\x6d\x94\x22\x17\x3f\x4b\x5a\xae\x18\x3a\x74\x7b\xa0\x34\x79\x89\x93\x04\xb3\x36\x26\xa9\x89\x35\xde\x86\x51\xab\xfd\x30\x2a\x95\xba\x2d\x94\x79\x86\xe7\x18\x7b\xf1\x3c\xdc\x89\x80\x68\xb8\xe3\xa9\x9d\x87\xbb\xc1\x50\xbb\x65\x24\x2f\x2a\xb9\xd3\x6d\x12\xc6\x90\x5f\x50\x2a\xaf\x5f\xfd\x30\xe1\xb4\xe3\x5e\x51\xa2\x51\x44\xc5\x31\x95\x0c\x19\xda\x8d\x4d\xba\x89\x22\x6f\xce\xe2\x75\xe5\x03\x4c\x9e\x57\x6e\x9f\xc6\xf2\xed\xdc\x52\x98\xbc\x39\xaf\x86\x8d\xa6\xe6\x8c\x79\xb3\x69\x36\xd0\xd2\x70\x9a\x43\xdf\x37\x9d\x5b\xb4\xeb\xd9\x77\x1a\x67\x40\x63\xf9\x8e\x54\xb7\xf4\x1f\x25\xdb\xa7\xb7\x20\x2d\x37\xfa\x01\x55\x57\x25\x35\x88\xfe\xd9\x6b\xfe\xec\x35\xbf\x83\x5e\xa3\x55\xb9\xff\x07\xbf\x79\xaa\x92\xac\x7a\xf9\x34\xdf\x21\x7d\xb8\xb9\x98\x76\x1e\xc5\x6e\x23\x0f\xf5\x3d\x8a\xcd\x65\xcd\x1b\x87\xaa\xd8\x6f\x57\x32\x02\xa9\x13\xbb\xae\x7b\xb0\xa9\x7d\x43\xbf\x9a\x77\x4e\x52\xc6\xb0\xa1\x29\xce\x98\x37\x33\x5d\xb9\xa5\x91\xe9\x21\xf3\x72\xf9\x20\xde\x1e\x7b\x44\xab\xe5\x5f\x6b\x67\x2d\x89\xee\xde\x4a\xc9\x2b\xf4\x79\xbe\xc1\x75\xdd\x8a\x7f\xd2\xe5\x33\xf4\xba\x4a\xea\x3a\x3d\x6f\xdf\x6e\xa9\x52\xfb\x26\x37\x56\xba\x9c\xbb\xd8\x46\x51\xc8\x92\x58\x12\x18\xa1\x6b\xc8\xaf\xa1\xb4\x77\x3b\xfe\xb5\xb5\xe1\xf1\xba\xe4\x45\xd8\xd4\xdb\xf2\x6b\x20\x2d\x17\x5b\x8b\xeb\x20\xf5\xeb\xad\xf2\x46\x88\xa2\x5b\xb2\x57\x93\x46\x85\xc9\xf6\xaa\x07\xda\x24\x17\xf9\x79\x54\x8f\x4a\xb4\xc9\x22\xa0\x53\x3c\x30\x69\x38\x07\xcf\x45\x7a\x6e\x59\x9a\xe6\x5e\xfc\x4d\xc4\xaf\x88\xc1\x97\x18\xee\xee\xe5\x2d\x21\xf9\xe2\x57\x14\x6c\x31\x7f\x49\x68\x82\x99\x8f\x56\x98\x2f\x6b\x62\x8c\x29\xef\x24\x1b\x14\xdd\x49\x69\xfe\x9d\x7f\x41\x9e\x27\x54\xf8\x57\x3e\xc4\x80\x7b\x5f\xde\x3b\x92\x9f\x14\x53\x43\xd1\x6b\x88\x0f\xc4\x7b\x1c\x41\xf8\xc0\xd5\xb8\xf1\x3b\xae\x76\xff\x0f\x08\x1f\xf8\x77\x4b\x7a\x71\x47\xbc\xc7\x7b\x98\x48\x2b\xb6\xc5\xbb\x90\xb5\x17\x86\x89\xb8\x82\x23\x45\x87\xe5\x0c\x7c\x89\x61\x02\x28\x8a\x30\xf5\x06\x5f\xe2\x11\x08\x7f\xfe\x0a\x0e\x4c\xe0\x5f\x0e\xef\x69\x79\x84\xa5\x90\x7c\xce\x7d\xcd\xd7\x30\x27\x6f\xe7\x8a\xb4\x0c\x1c\x0e\x9a\xb7\x61\xb0\xdd\x50\xc8\x32\x67\xa4\xee\xec\xf6\x76\xb8\x8a\x1f\x32\x5e\x7a\x72\xba\xc4\x42\x49\x18\x2d\xf8\x85\xe7\xa5\xb4\x2a\x5f\xba\x2b\x61\x97\x6f\x1b\x07\xc3\x42\xd3\x95\x12\x43\x79\xa1\x88\x67\x84\x37\x67\x91\x67\x31\x29\xb1\x7b\x9b\xf7\xf0\x8f\x69\xca\x57\x0f\x59\xf6\x71\x54\x66\xcf\x79\x7a\x7a\x7a\xbf\x78\x7a\x7a\x72\xf6\xef\x0a\xbd\xff\x84\x84\x8a\x94\x3a\x23\x70\x86\x23\xf8\x7e\xf8\xfc\x8b\x0e\x8e\x01\x6e\xbd\x36\x77\xd5\xf5\xbc\x0a\x94\x71\x96\x0d\xad\xa6\xc5\x4a\x09\x67\x65\x55\xf2\xff\x00\x00\x00\xff\xff\x81\x77\xb5\x08\x7a\x35\x00\x00")

func golangFuncsTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangFuncsTmpl,
		"golang.funcs.tmpl",
	)
}

func golangFuncsTmpl() (*asset, error) {
	bytes, err := golangFuncsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.funcs.tmpl", size: 13690, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x5f\x8f\x1b\xb7\x11\x7f\x5e\x7e\x8a\x89\x50\x1f\x76\xcf\xba\x95\x1f\x8a\x3e\x28\xb9\x16\x91\x75\x0d\x0a\x38\xbe\xf4\x2c\xa3\x28\x92\xc0\xa1\x76\x47\x3a\x46\x5c\x52\xe6\x72\x75\x52\x55\x7d\xf7\x62\x48\x2e\x45\xe9\x64\x37\x69\x11\x20\xf7\x70\xfb\x87\xf3\xe7\x37\x33\x3f\x0e\x67\x35\x1a\xc1\xd7\xef\x67\xf7\xdf\xdc\xbd\xbd\x7b\xf8\x7a\x76\x37\x85\xc9\x3f\x61\xa9\xd7\xab\x65\x29\xd4\xa8\x5d\xf3\x0a\x1b\xad\x56\xb8\x5b\xea\x51\x3d\xdf\x96\x9b\x57\x6c\x34\x82\xe9\x3d\xbc\xbd\x9f\xc1\xdd\xf4\x6f\xb3\x92\xb1\x35\xaf\x56\x7c\x89\xb0\xdf\x43\xf9\x5d\xb8\x3f\x1c\x18\x13\xcd\x5a\x1b\x0b\x39\xcb\x06\x35\xb7\x7c\xce\x5b\x1c\xb5\x1f\xe5\x80\x65\x83\x45\x63\xe9\xd2\x5a\x23\xd4\xb2\x75\xb7\x3b\x55\xd1\xd5\x8a\x06\x07\x8c\x65\x83\xa5\xb0\x8f\xdd\xbc\xac\x74\x33\xfa\xb9\xd1\xc2\x68\x45\xca\xdb\x01\xdb\xef\x6f\xc0\x70\xb5\x44\x28\xa7\x82\x4b\xac\x6c\x4b\xee\xb2\x0f\x30\x20\x04\x53\x23\x36\x68\xe0\x70\xf0\x92\xa8\x6a\x5a\x2d\x18\xdb\x70\x03\xff\x30\x7c\x7d\x67\x0c\xdc\xc2\xa2\x53\x55\x8e\xc6\x00\x1a\xa3\x4d\xe1\x2f\xb0\x37\x68\x3b\xa3\xe8\xe9\xe0\x14\xde\xe8\xe5\x12\x8d\x97\x5e\x68\xd3\x70\x0b\x1e\xf4\x10\xb8\x59\xb6\x50\x96\xa5\x50\x16\xcd\x82\x57\xb8\x3f\x14\x4e\xe7\xad\x7e\x82\x5b\xa0\x40\xca\xb7\xfa\x89\x31\x52\x06\xa9\x97\x98\xfa\xdb\xb3\x4c\x2c\x7a\xf3\x5f\xdc\x82\x12\x12\xae\xae\x68\xb5\x7f\xda\xb3\x2c\xf3\xeb\xf9\xc0\xa3\xab\xa4\x6e\x85\x5a\x42\x6b\xb9\xc5\x06\x95\x1d\xc3\x8b\xcd\x60\x48\x4a\x05\xcb\x0e\xec\xc0\xd8\x7e\xdf\xe7\xe6\x9d\x35\x5d\x48\x8d\xdd\xad\x7d\x75\xde\xf2\x86\x4a\x43\x21\x74\x95\x85\x7d\x9a\xcb\xbf\x0a\x94\xb5\xcf\x64\x2a\x4a\xf7\x33\xd2\xef\xef\xf9\x92\x64\x92\xd4\x3a\xaf\x37\x20\x16\x50\xbe\x5f\xbb\x42\x4b\xf4\x22\xf0\x87\xe0\x68\x7c\x1b\x0d\x46\x30\xfd\xda\xe1\xe0\xb4\x10\x62\x1e\x29\xf2\x4a\xcb\xae\x51\xa4\x93\x17\x21\xe3\x2c\xdb\x70\xd9\xd1\x73\x92\x71\x96\xad\x8d\xd8\x70\x8b\x27\x16\xf3\x82\x1d\x92\x54\x44\x58\xc7\x18\x49\xbc\x5b\x1f\xe1\xad\x8d\x50\x76\x01\x83\x17\xed\x8b\x76\x00\x79\xc5\x1b\x94\xb5\x7e\x52\xbd\xd1\xe2\x42\x00\x51\x3f\xcd\x28\x00\xc0\x26\xcd\x1a\xe5\xc7\x31\xe0\x04\x61\x92\xe2\xfc\x44\xbc\xb8\x98\x9b\x3d\x04\x62\x5e\x9d\x39\xde\x6f\xc6\xb0\x39\xc0\xc1\xbb\xc8\x3b\xb8\x3e\x13\x28\xe0\x42\x2a\x8f\xf6\xdc\x96\x79\xed\x24\x68\xcb\x7c\xd6\xd0\x85\xf4\x1f\x0d\x75\xe5\xe6\xb3\xca\x97\xcb\x04\xfb\x23\x95\x6e\x0e\x97\xef\xa9\x95\xb8\x9c\x4f\x27\xc7\x34\x67\xd7\xd4\x0c\xca\xe9\xc4\x25\x5c\x9a\x0e\xae\xa5\xe9\xdc\x83\x68\xd6\xd2\xfd\xfb\x16\xed\xa3\xae\xdb\x58\x80\xfb\x35\xaa\xbc\x76\xed\x61\x08\xad\xee\x4c\x85\x71\x33\x4b\xd3\x7d\x68\xc5\xbf\x1c\x0b\x0b\xc8\xaf\xa7\x93\x61\xb2\x53\xeb\xb9\x7b\x22\xa2\x38\xb7\xaf\xb5\x52\x58\xd9\x33\x63\x85\xdb\xd2\x67\x3b\x38\xa4\x47\x09\x39\xec\xbb\x4f\xde\xef\xd7\x2c\x82\x1f\xdf\x82\xc2\xa7\x37\x0f\xef\x73\x72\xd5\x83\x29\x98\xa7\x13\x37\xcf\x83\xa2\x85\xf6\x49\xd8\xea\x11\x3c\x8a\xd3\xdd\x9c\x76\x46\x12\xad\x78\x9b\xb4\x80\x7f\x1f\xf9\xfe\x71\x00\x87\xc3\x98\x65\x99\xf3\x70\xeb\x08\xd6\x33\x73\x3a\xd9\x4b\xd3\x8d\x09\xcf\x49\x39\xc8\x60\x8d\x0b\xde\x49\x3b\x76\x0f\xf4\x77\x29\xd0\x45\x63\xcb\x3b\xca\xe2\x22\x1f\x74\xaa\xed\xd6\x74\x20\x60\xdd\x23\x7e\xd1\x0e\x86\xe1\xbe\x28\x9c\xa1\x03\x63\x7d\xc6\xae\xa6\x13\xca\xdf\x74\x32\x86\x7a\x3e\x64\x59\xd6\x43\x19\x46\x97\x04\x79\xec\xfe\x0f\x59\x76\x18\x92\xef\x58\xec\x5c\xcf\x7f\x86\xeb\xe9\xa4\x80\xd7\x52\xb7\x44\xdb\xd3\xee\x4b\xfa\x7a\xfe\x73\x19\xc2\x26\xd5\x8c\x9e\xa5\xe9\xca\xef\x3a\xb3\xc4\xbc\x88\x50\xfa\x70\x68\x7d\x3a\x29\x83\xc1\xe2\x82\xaf\x77\xd5\x23\x36\x3c\xd9\x67\xd1\x46\xef\xab\x6c\x83\xc8\x05\xed\x29\x4a\xb4\xf8\xb5\x94\x84\xd6\x6a\xcb\x25\xd1\xf1\x4f\x7f\xf4\xe4\x8b\xd0\x93\x32\x87\x26\xff\x80\x1b\x34\x2d\xf6\xb5\x11\x0b\x50\x91\xb0\xd1\xb1\xb7\xbe\xdf\xc3\x5a\x76\x86\x4b\x22\x7b\x6c\x41\xc5\x97\x4e\xfc\xb6\xe7\x6d\x9f\x61\x0f\xe2\xe5\x2d\x28\x5f\x1e\x40\x49\x3c\x3a\x2f\xba\x13\x3b\xe3\xb7\x2f\xe7\x19\x6b\x4e\xe5\x2f\xd7\xcb\x6d\x53\xda\x83\xb3\x6d\xba\x07\xed\xf6\x24\xa4\xe9\xa4\x9c\xe0\x52\xa8\x6d\xfe\xab\xb7\x5d\x8a\xe4\x6a\xb6\xdd\xcf\xb6\x63\x20\xeb\x9e\x4e\x31\x5f\x73\x32\x9f\xdb\x6d\x71\x64\x96\x6b\x43\xb3\xed\xb3\x36\x34\xdb\x1e\x3b\x4f\x73\xd6\x75\x72\xbb\x85\xeb\xd9\xb6\x80\xd7\xba\x69\x84\xbd\x48\x44\xbb\x3d\xe1\xe1\x19\xed\x2c\x39\x28\x7b\xf5\xe2\xb9\xe5\x07\x2d\xe5\x9c\x57\xab\xff\xd9\xf6\xd1\xc0\x05\xeb\xbf\x09\x2b\x03\xaa\xdf\x2f\x29\x3f\xd1\x4b\xdd\xe0\x50\xcf\x1d\x11\xe2\x54\x93\xb4\xd3\x76\x3a\x19\xf4\xf3\x85\xdd\x7e\x5a\x6c\xb6\x1d\x1c\x0f\xb6\xc4\x66\x3a\x4a\x64\xf1\x58\x3b\xdd\x24\x27\xe2\x05\xb4\xcf\x7a\x4e\x08\xe8\x27\x17\x44\xe9\x7b\xd2\xbb\xbf\xbf\x71\xa7\xea\x4f\x9f\x37\xb6\x36\xb8\xe6\x06\xf3\xd6\x36\xfd\xa4\x5b\x40\x1e\xde\xd6\xe0\xe9\xfe\xce\x36\x76\x08\x06\xd7\x92\xa6\x35\x37\x1b\x17\x67\x6c\xc8\x50\x59\xb3\x3b\xd9\xb1\xd4\x59\xbf\x41\xeb\x4c\xff\xd7\x3d\xeb\xfe\xa1\x31\xee\x98\xec\x87\x72\x32\x19\x9c\x7b\xa7\xb0\x8f\x96\x1f\x3c\x9a\xdc\x09\x15\x70\xf1\x34\x38\x8b\x55\xea\x25\x19\x4b\x63\xf5\x53\x7d\x59\x96\xe9\x90\xe3\xe2\x49\x8e\xc5\x37\x89\x5e\x54\x38\xef\xe7\x67\xbe\xfa\x66\x02\x7d\xc3\x28\xfa\x46\x91\x9c\x11\x57\x09\x6b\x0e\x07\x4a\x89\xf5\xad\xa9\x3f\xfd\x42\xb0\xc3\x30\xec\x47\xf2\x44\x9d\x84\x3c\x89\xaf\xcf\x32\x29\xea\xfe\xbe\x8b\x4f\x46\xac\xf7\xbe\xcd\x8f\x4c\x28\xfe\x0f\x2a\x24\x91\xff\x46\x54\xf8\x84\xe4\x67\x3f\x21\xc9\xc3\x68\x04\xb3\xfb\xe9\xfd\x18\x0c\xaa\x1a\x0d\xb8\x78\x1e\xb5\xac\xd1\xb4\x17\xbe\x1b\xd3\x2f\xc5\xf6\xa3\x1c\xff\xa0\x5e\xb4\x3f\x28\x32\x4e\xb7\xf4\x85\x78\xc4\x77\xfc\x50\x3c\x9b\xae\x5d\xb6\x12\xfe\x10\xda\xa4\xe4\x8c\x65\x0a\xb7\x76\x48\x24\xd9\xc0\xb5\x93\x66\xd9\x0a\x77\x7d\xd7\xed\x3f\xd2\x0c\x2e\xda\x7e\x3e\x53\x36\xd2\x94\x18\x78\x34\xde\x74\xbd\xd6\x4e\x55\xe5\xb7\x9d\xc5\x2d\x4d\xd9\xe1\x65\x9c\xed\xb3\x8a\xaf\x79\x25\xec\xce\x99\xca\x8c\xd6\xd6\x09\x04\xef\x42\xd5\xb8\xa5\xe7\x86\xaf\xbf\xf7\xfe\x7f\x0c\xc8\x0e\x8c\x8d\x46\x61\xa6\x0e\x0d\xbe\x05\xae\x40\x28\x61\x85\x3b\x67\x6a\x82\x54\xfa\x3a\xc5\xd9\x3b\xba\x1e\x42\xea\xba\x70\x9b\xc7\xb5\x64\x22\xf4\x95\x34\x1d\xe5\xbc\x9e\x8f\x03\x62\x3f\xa1\xf6\x2a\xe3\xa8\x4c\x6f\x1d\xca\xb1\x87\xb9\xc2\xfc\x19\xd6\xc2\x6d\xe7\x4c\x96\x14\x5e\x49\x49\xa6\x31\xdc\x3f\xc6\xd7\x2e\xeb\xc9\xeb\xb0\x2b\x64\x08\x54\xa8\x16\x8d\x0d\x97\x16\x10\xf8\xc2\xa2\x01\x6e\x87\x20\x54\x65\xdc\x8f\x05\x2d\xc8\x52\xa2\x0a\x21\xe7\xd2\xc5\x54\x04\x9d\x1c\x87\xc0\x6d\xa8\xab\xe3\xa0\xa2\x48\xb9\x07\xc4\x32\x1e\x91\x21\xcb\xb0\x87\xc3\x2d\x3d\x84\x05\xc5\x32\xd5\x2f\x60\xc0\x65\xb0\xd1\x1b\x0c\x17\xc2\xb5\x30\xba\x01\x41\x58\x44\x6b\x87\x50\xe3\x29\xb8\x33\x6c\x5e\x2f\xc7\x14\x97\x77\x1e\xd1\x04\x7c\xfe\x1a\xdd\xbb\x9b\x14\x9b\x90\x30\x1a\x01\xdf\x68\x51\x43\x83\x8d\x36\x3b\x90\xc8\x57\x6d\x12\xcc\xa7\x65\x62\xeb\xe8\x71\xe1\x46\x54\x36\x3f\x65\x88\xff\x41\x27\xbe\xfb\x0a\x5e\x25\x7d\xcd\x8d\x9d\x99\xd5\x1f\x9c\x26\x65\x56\xa2\xca\x65\xe9\xb8\x51\xc0\x4d\xd4\x63\x59\xd5\x19\x83\xca\x7a\x9e\x85\x6a\x2f\xb4\x01\x41\x6f\x5e\x7d\x09\x02\xbe\x82\xde\xd0\x97\x20\x5e\xbe\x74\x6e\x7a\xad\x5b\x08\x77\x21\x03\x0e\x53\xbf\x16\x2d\x3a\x95\x6c\xcd\x95\xa8\xf2\x81\xdf\x45\xba\xb3\xa0\x17\xf0\xf4\xc8\xab\x55\x09\x86\x7a\x7b\xa5\x55\x2d\xac\xd0\xaa\xfd\xcb\xa0\x60\x19\x91\x34\x31\x57\xba\x8d\xfe\xe7\x10\x66\x56\x69\x65\x85\xea\x30\xc8\x8d\x46\xf0\xf4\xa8\x39\xcc\xf5\x0e\x44\x0b\xf6\x51\xb4\xd0\x76\x73\x2b\xb1\x04\x59\x06\x5a\xcc\xa5\x7e\x6a\x81\x3f\xf1\x5d\x34\xea\xea\xc5\x55\xed\x4d\xa4\xb1\x94\x30\xef\xec\x89\x9c\x2f\xdc\x93\x90\x12\xe6\x08\x4d\x67\x39\x7d\x5b\x5a\x0d\x73\x7c\xae\x0e\x94\x43\xfb\x88\xe0\x3c\x08\x8b\x86\x53\x68\x5f\xb0\xcc\xf5\xb5\x0f\x49\xda\x53\x1f\x8c\x8e\xde\x80\x37\x0f\x0b\x94\x8b\xda\xcd\xad\x7d\x05\x87\x51\x67\x85\x3b\x5a\x76\xbf\xf6\xf5\xef\xa8\x7d\x1e\x3f\x1a\x4f\x8a\x95\xba\x0e\x8d\xf9\x94\x69\x74\x66\x52\x93\x8d\xa7\xf1\xf5\xf1\x6c\x0d\x87\xad\x2c\x9b\xae\x7c\xa3\x69\x7a\x67\x59\x8d\x0b\x34\xe0\x5e\xbd\x57\xd2\xbf\x64\x19\x0e\x41\xaf\x1c\xeb\x3c\xde\xef\x57\xb8\xfb\xd1\xf1\x55\xaf\x5c\xf9\x62\x88\xe8\xd0\x97\xc7\xa6\x10\x18\x43\xaf\xd1\x95\xfc\xe5\x4b\x76\x3c\xae\xd1\x9f\xad\x8e\xdd\xfe\x8c\x09\x67\xbe\x2c\xeb\x79\xf9\x9d\x9f\x1c\xb6\xb9\x7b\x7a\xc0\xb9\x50\x35\x45\x53\xfc\xfa\x4f\xb6\x0c\xa9\xfb\xb9\xd8\x49\x96\x52\x3a\xf6\xa7\x1a\xcb\xe8\x14\xa2\xfe\xba\xc2\x5d\xdf\x4a\x2f\xe1\x4f\x63\xef\xfb\x58\x0c\xe8\x34\x9e\x67\x65\x88\x23\x45\xda\x89\x7e\x49\xe2\x9d\x87\x9b\x1b\x12\xf6\x4d\x43\x96\xfd\x56\x2f\x9e\xbb\x09\x3f\x3c\xfc\x42\xe3\xbd\xc9\x57\xce\x12\xfb\x4f\x00\x00\x00\xff\xff\x56\xe6\x0b\xcb\xca\x17\x00\x00")

func golangHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangHeaderTmpl,
		"golang.header.tmpl",
	)
}

func golangHeaderTmpl() (*asset, error) {
	bytes, err := golangHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.header.tmpl", size: 6090, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x4d\x8f\xda\x38\x18\x3e\xc3\xaf\x78\x55\x71\x60\xd0\x90\xde\x77\x55\x8d\x32\xe0\xe9\xa6\x0d\x0e\x93\x98\xad\xe6\x98\x12\x53\xbc\x4a\x1c\x36\x18\x8d\x90\xf1\x7f\x5f\xd9\xce\x27\x4d\xd8\xe9\x6a\x0e\x7b\x73\xec\xc7\xcf\xfb\xbc\x9f\x8e\x94\x1f\x67\xb0\x0e\x22\xf2\x39\x44\xd1\xb3\x0f\x11\x71\x09\x5a\x21\x4c\x80\xa0\xd5\xda\x77\x09\x8a\x00\x66\x1f\x95\x1a\x8f\xa5\x9c\x43\x42\x77\x8c\x53\xf8\x70\xdc\xee\x69\x16\x7f\x80\xb9\x52\x66\xbf\x88\xf9\x0f\x0a\x0e\x89\xbf\xa7\xf4\x08\x4a\x8d\x17\x21\x72\x09\x02\xe2\x3e\xfa\x08\xa4\x04\x07\xc7\x19\x05\xa5\x60\xda\xc2\x4f\xd8\x3d\x4c\xb6\x79\x0a\xbf\x7d\x02\x67\x91\xa7\xa7\x8c\x9b\xcb\x52\xb2\x1d\x4c\x98\x52\xf7\x52\x52\x9e\x28\x35\x92\x12\x5e\x99\xd8\x5b\xb4\x36\x3a\x6a\x73\xea\x35\x39\x1f\x68\x75\x32\x07\xb6\x03\x07\xe7\x02\x9f\xd2\x54\x03\x70\x40\x00\x6f\x7c\x1f\xf4\x19\xe5\x49\x17\x18\xd2\x1d\x2d\x28\xdf\x1a\xae\x10\x3d\xa1\x10\xe1\x05\x8a\x0c\x6d\x7d\x66\x7d\x03\xa5\xa6\xdd\x6d\x2b\x1b\x94\xba\x83\x00\xc3\x12\xf9\x88\xa0\xab\x9b\x01\x5f\xd2\x94\x0a\x7d\xb9\x6d\x7f\x78\x6d\x54\xad\x0b\x96\xc5\xc5\xf9\x2b\x3d\xeb\x90\xdc\x8f\xd6\xa1\xb7\x72\xc3\x17\xf8\x8a\x5e\x60\x3a\x10\xc3\xce\x9d\x26\x8a\x50\x86\x51\x4a\x0b\x35\x2b\x6d\x4e\xa9\xbb\x6b\xd3\x65\x26\x37\x9c\xfd\x7d\xa2\xd6\xf2\x06\x7b\xcf\x1b\x34\x68\xf4\x97\x4d\x29\x35\xbe\xfb\x7d\x5c\xef\xb7\x56\x9d\x1a\x4b\x72\xc1\xe3\x8c\x56\x45\x06\x75\x06\x1c\xfd\x51\xc7\xbd\xe3\x40\x87\x20\xa5\x3b\xf1\x57\xce\xb8\x65\xf0\xd1\x13\x81\x2f\x81\x87\x6d\x76\xd8\x8f\xbd\xa8\x19\x75\xea\xa4\x04\x41\xb3\x43\x1a\x8b\xb6\x6d\xc7\xa7\x3b\xa1\x11\x9f\x86\x00\x86\xe9\xa6\x8e\x6d\xce\x13\x26\x58\xce\x9b\x7e\xd1\x09\xb6\x1e\x2c\xb2\x43\x5d\xd0\x7d\xf4\x35\xaa\x56\xd2\x78\xaf\x77\x83\x03\x2d\x62\x91\x17\xfa\xe4\xe1\xa7\x9a\xea\xd8\x29\x43\xf6\x26\x6b\x76\xd1\x6f\xb3\x3c\x6b\x5b\x7e\x23\x5d\x6f\xac\xba\x3a\xbd\xb7\x08\xf4\x1a\x65\x1e\xd6\x85\xd9\xc2\x1e\x69\x4a\xb7\xa2\x0d\xf5\x78\x4f\xa1\x0f\xe4\xea\x75\x4f\x0b\x7a\x3d\xd7\xca\x72\xe7\x89\xad\xf7\x4a\x1f\xdb\x01\xcf\x05\x4c\x18\x28\xf5\xed\x0f\x14\x9a\xbe\xa7\xe9\xd1\x54\x94\x8b\x97\x50\x17\x76\x47\x60\xab\x1c\x2c\xe9\xad\x61\xd0\x9d\xba\xc6\xb5\xf9\xeb\x3e\x16\x75\x57\x4c\x84\xa9\x61\x2d\xac\xaa\xe6\x2a\xa2\x29\xe5\xe0\x7c\xdb\xc7\xa2\x56\xdc\x72\x47\x93\x98\x5b\x06\x60\x24\x9a\x1e\x06\xdb\xc4\x8d\xf0\xd2\x80\x6d\x3b\x7b\xad\xd5\xd4\x56\xac\xf6\xb9\xb2\xd1\xe0\x67\xbf\xe2\x95\x75\x28\x42\x3e\x5a\x10\xe8\x49\x68\xe9\xb5\xa3\x14\x3c\x85\xc1\x0a\xda\x03\xc1\x8e\xf2\x72\x72\xe9\xc2\xf8\x92\x33\xfb\x92\x8c\xba\x75\xd4\x4c\x04\xa7\xbe\xf6\xd3\x73\xb0\xa8\xf2\xd3\xc7\x50\xd6\xc7\x35\xa8\x97\x28\x28\x12\x5a\x3c\x9e\x2d\x4b\x10\x2e\x51\x08\x8f\x2f\x43\xad\x52\x82\x9b\xb9\x06\x6e\xb4\x18\x20\xf6\x59\xc6\x84\xa5\xf5\xbd\x95\x47\xe0\xa1\x0b\xbc\x31\x89\x4e\xbc\x1b\x69\xb3\x33\x9d\xdd\xfd\xdf\x83\xfa\x6f\x3d\xf1\x3d\x3e\xb6\xda\xb6\x17\x99\x98\x47\xd8\x82\xca\x77\x7a\xc0\xe9\x7e\xc1\xef\xa3\x97\xf1\x23\x2d\xca\x1c\x78\x38\x42\x21\x01\x0f\x93\x60\x50\x85\xfd\x29\x32\xb1\x1c\x0d\xbd\xc0\xcd\xaf\xd3\x70\x17\x5f\x3f\xc6\xf0\xa7\xeb\x6f\x50\x34\x35\xae\xfd\x27\xd6\x87\xd6\xcb\x5e\xfb\x6e\xfe\xa0\xc8\x26\xc4\x1e\xfe\x0c\xb3\xe1\x30\x9c\x0e\x49\x5c\x25\x63\xb3\x5e\xba\xe5\x4f\x53\xfd\x20\x47\x88\xc0\xe5\x72\x79\x8e\x2e\x97\xcb\xbb\x24\xe5\x86\xb0\x7f\x02\x00\x00\xff\xff\x5f\xa3\x67\x2b\x04\x0b\x00\x00")

func postgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_postgresTmpl,
		"postgres.tmpl",
	)
}

func postgresTmpl() (*asset, error) {
	bytes, err := postgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.tmpl", size: 2820, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlite3Tmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x4d\x6f\xea\x38\x14\x5d\xc3\xaf\xb8\x7a\x62\x01\xa8\xe4\x2d\x66\x37\xa3\xa7\x2a\x05\x57\x93\xd7\x90\xd0\xc4\x4c\xd5\x65\x4a\x4c\xf1\x28\x71\x98\x60\x54\x21\xe3\xff\x3e\xb2\x9d\x4f\x9a\x30\xed\xa8\x8b\xb7\x73\xec\xe3\x73\xcf\xfd\x74\x84\xf8\x3e\x85\xf0\xd1\x75\x30\xfa\x0d\x42\x6c\x63\xb4\x44\x1e\x06\x8c\x96\x2b\xd7\xc6\x28\x04\x98\x7e\x97\x72\x38\x14\x62\x06\x31\xd9\x52\x46\xe0\xdb\x61\xb3\x23\x69\xf4\x0d\x66\x52\xea\xfd\x3c\x62\xaf\x04\x2c\x1c\xbd\x24\xe4\x00\x52\x0e\xe7\x01\xb2\x31\x02\x6c\xdf\xb9\x08\x84\x00\xcb\x8b\x52\x02\x52\xc2\xb8\x81\x1f\xd1\x1b\x18\x6d\xb2\x04\x7e\xff\x01\xd6\x3c\x4b\x8e\x29\xd3\x97\x85\xa0\x5b\x18\x51\x29\x6f\x84\x20\x2c\x96\x72\x20\x04\xbc\x51\xbe\x33\x68\x65\x74\xd0\xe4\x54\x6b\x7c\xda\x93\xf2\x64\x06\x74\x0b\x96\x97\x71\xef\x98\x24\x0a\xe0\xf9\x18\xbc\xb5\xeb\x82\x3a\x23\x2c\x6e\x03\x03\xb2\x25\x39\x61\x1b\xcd\x15\xa0\x7b\x14\x20\x6f\x8e\x42\x4d\x5b\x9d\x19\xdf\x40\xca\x71\x7b\xdb\xc8\x06\x29\x27\xe0\x7b\xb0\x40\x2e\xc2\xe8\xe2\xa6\xcf\x16\x24\x21\x5c\x5d\x6e\xda\xef\x5f\x6b\x55\xab\x9c\xa6\x51\x7e\x7a\x20\x27\x15\x92\x9b\xc1\x2a\x70\x96\x76\xf0\x0c\x0f\xe8\x19\xc6\x3d\x31\x6c\xdd\xa9\xa3\x08\x45\x18\x85\x30\x50\xbd\x52\xe6\xa4\x9c\x5c\x9a\x2e\x32\xb9\x66\xf4\x9f\x23\x31\x96\xd7\x9e\xf3\xb8\x46\xbd\x46\x3f\x6d\x4a\xca\xe1\xe4\x8f\x61\xb5\xdf\x58\xb5\x6a\x2c\xce\x38\x8b\x52\x52\x16\x19\x54\x19\xb0\xd4\x47\x15\xf7\x96\x03\x2d\x82\x84\x6c\xf9\xdf\x19\x65\x86\xc1\x45\xf7\x18\x7e\xfa\x8e\x67\xb2\x43\x5f\x77\xbc\x62\x54\xa9\x13\x02\x38\x49\xf7\x49\xc4\x9b\xb6\x2d\x97\x6c\xb9\x42\xfc\xe8\x03\x68\xa6\xab\x3a\x36\x19\x8b\x29\xa7\x19\xab\xfb\x45\x25\xd8\x78\x30\x4f\xf7\x55\x41\x77\xd1\x57\xa8\x4a\x49\xed\xbd\xda\xf5\xf7\x24\x8f\x78\x96\xab\x93\xdb\x77\x35\xd5\xb2\x53\x84\xec\x43\xd6\xcc\xa2\xdb\x66\x71\xd6\xb4\xfc\x41\xba\xce\x58\xb5\x75\x3a\x1f\x11\xe8\xd4\xca\x1c\x4f\x15\x66\x03\x7b\x20\x09\xd9\xf0\x26\xd4\x61\x1d\x85\xde\x93\xab\xb7\x1d\xc9\xc9\xe5\x5c\x2b\xca\x9d\xc5\xa6\xde\x4b\x7d\x74\x0b\x2c\xe3\x30\xa2\x20\xe5\xd3\x9f\x28\xd0\x7d\x4f\x92\x83\xae\x28\xdb\x5b\x40\x55\xd8\x2d\x81\x8d\x72\x30\xa4\xd7\x86\x41\x7b\xea\x6a\xd7\x66\x6f\xbb\x88\x57\x5d\x31\xe2\xba\x86\x95\xb0\xb2\x9a\xcb\x88\x26\x84\x81\xf5\xb4\x8b\x78\xa5\xb8\xe1\x8e\x22\xd1\xb7\x34\x40\x4b\xd4\x3d\x0c\xa6\x89\x6b\xe1\x85\x01\xd3\x76\xe6\x5a\xa3\xa9\x8d\x58\xe5\x73\x69\xa3\xc6\x4f\x3f\xe3\x95\x71\x28\x44\x2e\x9a\x63\xe8\x48\x68\xe1\xb5\x25\x25\xdc\x07\xfe\x12\x9a\x03\xc1\x8c\xf2\x62\x72\xa9\xc2\xf8\x99\x51\xf3\x92\x0c\xda\x75\x54\x4f\x04\xab\xba\xf6\xee\x39\x98\x97\xf9\xe9\x62\x28\xea\xe3\x12\xd4\x49\xe4\xe7\x31\xc9\xef\x4e\x86\xc5\x0f\x16\x28\x80\xbb\xe7\xbe\x56\x29\xc0\xf5\x5c\x03\x3b\x9c\xf7\x10\xbb\x34\xa5\xdc\xd0\xba\xce\xd2\xc1\x70\xdb\x06\x5e\x99\x44\x47\xd6\x8e\xb4\xde\x19\x4f\x27\xbf\x7a\x50\xff\xab\x27\x5e\xa2\x43\xa3\x6d\x3b\x91\xb1\x7e\x84\x0d\xa8\x78\xa7\x7b\x9c\xee\x16\xfc\x35\x7a\x29\x3b\x90\xbc\xc8\x81\xe3\x85\x28\xc0\xe0\x78\xd8\xef\x55\x61\x7e\x8a\x74\x2c\x07\x7d\x2f\x70\xfd\xeb\xd4\xdf\xc5\x97\x8f\x31\xfc\x65\xbb\x6b\x14\x8e\xb5\x6b\xff\x8b\xf5\xb6\xf1\xb2\x57\xbe\x5f\x73\xfd\xb8\x8f\xa3\x32\x01\xeb\xd5\xc2\x2e\x7e\x94\xaa\x47\x38\x44\x18\xce\xe7\xf3\x63\x78\x3e\x9f\xbf\x24\x11\x17\x62\xfe\x0d\x00\x00\xff\xff\x98\xb8\x02\x49\xe9\x0a\x00\x00")

func sqlite3TmplBytes() ([]byte, error) {
	return bindataRead(
		_sqlite3Tmpl,
		"sqlite3.tmpl",
	)
}

func sqlite3Tmpl() (*asset, error) {
	bytes, err := sqlite3TmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sqlite3.tmpl", size: 2793, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"golang.footer.tmpl": golangFooterTmpl,
	"golang.funcs.tmpl": golangFuncsTmpl,
	"golang.header.tmpl": golangHeaderTmpl,
	"postgres.tmpl": postgresTmpl,
	"sqlite3.tmpl": sqlite3Tmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"golang.footer.tmpl": &bintree{golangFooterTmpl, map[string]*bintree{}},
	"golang.funcs.tmpl": &bintree{golangFuncsTmpl, map[string]*bintree{}},
	"golang.header.tmpl": &bintree{golangHeaderTmpl, map[string]*bintree{}},
	"postgres.tmpl": &bintree{postgresTmpl, map[string]*bintree{}},
	"sqlite3.tmpl": &bintree{sqlite3Tmpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

