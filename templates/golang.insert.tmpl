{{- define "signature" -}}
Create{{ .Suffix }}({{ params .Args }}) ({{ params .Return }}, err error)
{{- end -}}

{{- define "body" -}}{
{{- if .AutoFields }}
    {{- if .NeedsNow }}
    __now := Now()
    {{- end -}}
    {{ init .AutoFields }}
{{- end -}}

	const __stmt=`{{ .SQL }}`
	__prepared, __replace, err := obj.prepare(__stmt)
	if err != nil {
		err = WrapErr(err)
		return
	}
	defer __replace()
	obj.logStmt(__stmt, {{ args .Fields }})

    {{ if .SupportsReturning }}
    {{ init .Return }}
    err = __prepared.QueryRow({{ args .Fields }}).Scan({{ ptrs (flatten .Return) }})
    if err != nil {
        return {{ zeroed .Return }}, WrapErr(err)
    }
    return {{ args .Return }}, nil
    {{ else -}}
    __res, err := __prepared.Exec({{ args .Fields}})
    if err != nil {
        return {{ zeroed .Return}}, WrapErr(err)
    }
    __pk, err := __res.LastInsertId()
    if err != nil {
        return {{ zeroed .Return }}, WrapErr(err) 
    }
    return obj.getLast{{ .Return.Type }}(__pk)
    {{ end -}}
}
{{ end -}}

{{/*
{{- if not .ReturnBy }}
	result = &{{ .Struct }}{}                                                                      
    err = prepared.QueryRowx({{ args .Fields }}).StructScan(result)
	if err != nil {
		return nil, WrapErr(err)
	}
	return result, nil
{{- else }}
    res, err := prepared.Exec({{ args .Fields }})
	if err != nil {
		return nil, WrapErr(err)
	}
{{ if .ReturnBy.Pk }}
	pk, err := res.LastInsertId()
	if err != nil {
		return nil, WrapErr(err)
	}
	return obj.Get{{ .Struct }}By{{ .ReturnBy.Pk }}(pk)
{{ else }}
	_ = res
	return obj.{{ template "select-func-name" .ReturnBy.Getter }}({{ args .ReturnBy.Getter.Args }})
{{ end -}}
{{- end -}}
*/}}
